// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing the TagFilter component Should render the correct buttons 1`] = `
ReactWrapper {
  Symbol(enzyme.__unrendered__): <TagFilter
    onSelectionChange={[MockFunction]}
    tags={
      Array [
        Object {
          "selected": false,
          "tag": "one",
          "text": "one",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "getWrappingComponentRenderer": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": TagFilter {
      "_reactInternalFiber": FiberNode {
        "_debugHookTypes": null,
        "_debugID": 63,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 62,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "contextDependencies": null,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "onSelectionChange": [MockFunction],
              "tags": Array [
                Object {
                  "selected": false,
                  "tag": "one",
                  "text": "one",
                },
              ],
            },
            "wrappingComponentProps": null,
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {
              "onSelectionChange": [MockFunction],
              "tags": Array [
                Object {
                  "selected": false,
                  "tag": "one",
                  "text": "one",
                },
              ],
            },
            "wrappingComponentProps": null,
          },
          "mode": 0,
          "nextEffect": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 60,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 60,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1073741823,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="container high-contrast-coloring margin-bottom radius "
                  >
                    <div
                      class="flex flex--column"
                    >
                      <h6>
                        Tags
                      </h6>
                    </div>
                    <div
                      class="flex"
                    >
                      <div>
                        <button
                          class="btn btn--inverted margin-right"
                          data-testid="allBtn"
                          type="button"
                        >
                          All
                        </button>
                      </div>
                      <div>
                        <button
                          class="btn radius-top-left tag-one-inverted-coloring"
                          data-testid="tag-btn-one"
                          type="button"
                        >
                          one
                        </button>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 15,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "onSelectionChange": [MockFunction],
                          "tags": Array [
                            Object {
                              "selected": false,
                              "tag": "one",
                              "text": "one",
                            },
                          ],
                        }
                      }
                      wrappingComponentProps={null}
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "onSelectionChange": [MockFunction],
                          "tags": Array [
                            Object {
                              "selected": false,
                              "tag": "one",
                              "text": "one",
                            },
                          ],
                        }
                      }
                      wrappingComponentProps={null}
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "onSelectionChange": [MockFunction],
                    "tags": Array [
                      Object {
                        "selected": false,
                        "tag": "one",
                        "text": "one",
                      },
                    ],
                  }
                }
                wrappingComponentProps={null}
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                  class="container high-contrast-coloring margin-bottom radius "
                >
                  <div
                    class="flex flex--column"
                  >
                    <h6>
                      Tags
                    </h6>
                  </div>
                  <div
                    class="flex"
                  >
                    <div>
                      <button
                        class="btn btn--inverted margin-right"
                        data-testid="allBtn"
                        type="button"
                      >
                        All
                      </button>
                    </div>
                    <div>
                      <button
                        class="btn radius-top-left tag-one-inverted-coloring"
                        data-testid="tag-btn-one"
                        type="button"
                      >
                        one
                      </button>
                    </div>
                  </div>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 15,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "pingCache": null,
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "onSelectionChange": [MockFunction],
                      "tags": Array [
                        Object {
                          "selected": false,
                          "tag": "one",
                          "text": "one",
                        },
                      ],
                    }
                  }
                  wrappingComponentProps={null}
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "onSelectionChange": [MockFunction],
              "tags": Array [
                Object {
                  "selected": false,
                  "tag": "one",
                  "text": "one",
                },
              ],
            },
            "wrappingComponentProps": null,
          },
          "ref": null,
          "return": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 60,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 60,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1073741823,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="container high-contrast-coloring margin-bottom radius "
                  >
                    <div
                      class="flex flex--column"
                    >
                      <h6>
                        Tags
                      </h6>
                    </div>
                    <div
                      class="flex"
                    >
                      <div>
                        <button
                          class="btn btn--inverted margin-right"
                          data-testid="allBtn"
                          type="button"
                        >
                          All
                        </button>
                      </div>
                      <div>
                        <button
                          class="btn radius-top-left tag-one-inverted-coloring"
                          data-testid="tag-btn-one"
                          type="button"
                        >
                          one
                        </button>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 15,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "onSelectionChange": [MockFunction],
                          "tags": Array [
                            Object {
                              "selected": false,
                              "tag": "one",
                              "text": "one",
                            },
                          ],
                        }
                      }
                      wrappingComponentProps={null}
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "onSelectionChange": [MockFunction],
                          "tags": Array [
                            Object {
                              "selected": false,
                              "tag": "one",
                              "text": "one",
                            },
                          ],
                        }
                      }
                      wrappingComponentProps={null}
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "onSelectionChange": [MockFunction],
                    "tags": Array [
                      Object {
                        "selected": false,
                        "tag": "one",
                        "text": "one",
                      },
                    ],
                  }
                }
                wrappingComponentProps={null}
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                  class="container high-contrast-coloring margin-bottom radius "
                >
                  <div
                    class="flex flex--column"
                  >
                    <h6>
                      Tags
                    </h6>
                  </div>
                  <div
                    class="flex"
                  >
                    <div>
                      <button
                        class="btn btn--inverted margin-right"
                        data-testid="allBtn"
                        type="button"
                      >
                        All
                      </button>
                    </div>
                    <div>
                      <button
                        class="btn radius-top-left tag-one-inverted-coloring"
                        data-testid="tag-btn-one"
                        type="button"
                      >
                        one
                      </button>
                    </div>
                  </div>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 15,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "pingCache": null,
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "onSelectionChange": [MockFunction],
                      "tags": Array [
                        Object {
                          "selected": false,
                          "tag": "one",
                          "text": "one",
                        },
                      ],
                    }
                  }
                  wrappingComponentProps={null}
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "onSelectionChange": [MockFunction],
                "tags": Array [
                  Object {
                    "selected": false,
                    "tag": "one",
                    "text": "one",
                  },
                ],
              },
              "wrappingComponentProps": null,
            },
            "refs": Object {},
            "rootFinderInstance": null,
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "onSelectionChange": [MockFunction],
                "tags": Array [
                  Object {
                    "selected": false,
                    "tag": "one",
                    "text": "one",
                  },
                ],
              },
              "wrappingComponentProps": null,
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": -1,
        "alternate": null,
        "child": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 64,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": Object {
            "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\TagFilter\\\\TagFilter.js",
            "lineNumber": 56,
          },
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 65,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\Card\\\\Card.js",
              "lineNumber": 16,
            },
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 66,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\Card\\\\Card.js",
                "lineNumber": 18,
              },
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 68,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\Card\\\\Card.js",
                  "lineNumber": 19,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": null,
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": "h6",
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": "Tags",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": "Tags",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": <h6>
                  Tags
                </h6>,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "h6",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": "div",
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <h6>
                    Tags
                  </h6>,
                  undefined,
                ],
                "className": "flex flex--column",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  <h6>
                    Tags
                  </h6>,
                  undefined,
                ],
                "className": "flex flex--column",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 67,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\TagFilter\\\\TagFilter.js",
                  "lineNumber": 57,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 69,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\TagFilter\\\\TagFilter.js",
                    "lineNumber": 58,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 71,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\TagFilter\\\\TagFilter.js",
                      "lineNumber": 59,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 72,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\Button\\\\Button.js",
                        "lineNumber": 3,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 0,
                      "elementType": "button",
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "All",
                        "className": "btn btn--inverted margin-right",
                        "data-testid": "allBtn",
                        "onClick": [Function],
                        "type": "button",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "All",
                        "className": "btn btn--inverted margin-right",
                        "data-testid": "allBtn",
                        "onClick": [Function],
                        "type": "button",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <button
                        class="btn btn--inverted margin-right"
                        data-testid="allBtn"
                        type="button"
                      >
                        All
                      </button>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "button",
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 1,
                    "elementType": [Function],
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "All",
                      "className": "btn btn--inverted margin-right",
                      "data-testid": "allBtn",
                      "onClick": [Function],
                      "type": "button",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "All",
                      "className": "btn btn--inverted margin-right",
                      "data-testid": "allBtn",
                      "onClick": [Function],
                      "type": "button",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "tag": 0,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "contextDependencies": null,
                  "effectTag": 0,
                  "elementType": "div",
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": <Button
                      className="btn btn--inverted margin-right"
                      data-testid="allBtn"
                      onClick={[Function]}
                      type="button"
                    >
                      All
                    </Button>,
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <Button
                      className="btn btn--inverted margin-right"
                      data-testid="allBtn"
                      onClick={[Function]}
                      type="button"
                    >
                      All
                    </Button>,
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 70,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\TagFilter\\\\TagFilter.js",
                      "lineNumber": 68,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 73,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\TagFilter\\\\TagFilter.js",
                        "lineNumber": 82,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 74,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\Button\\\\Button.js",
                          "lineNumber": 3,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 0,
                        "elementType": "button",
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "one",
                          "className": "btn radius-top-left tag-one-inverted-coloring",
                          "data-testid": "tag-btn-one",
                          "onClick": [Function],
                          "type": "button",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "one",
                          "className": "btn radius-top-left tag-one-inverted-coloring",
                          "data-testid": "tag-btn-one",
                          "onClick": [Function],
                          "type": "button",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <button
                          class="btn radius-top-left tag-one-inverted-coloring"
                          data-testid="tag-btn-one"
                          type="button"
                        >
                          one
                        </button>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "button",
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 1,
                      "elementType": [Function],
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": "tag-filter-one-0",
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "one",
                        "className": "btn radius-top-left tag-one-inverted-coloring",
                        "data-testid": "tag-btn-one",
                        "onClick": [Function],
                        "type": "button",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "one",
                        "className": "btn radius-top-left tag-one-inverted-coloring",
                        "data-testid": "tag-btn-one",
                        "onClick": [Function],
                        "type": "button",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": null,
                      "tag": 0,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 0,
                    "elementType": "div",
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <Button
                          className="btn radius-top-left tag-one-inverted-coloring"
                          data-testid="tag-btn-one"
                          onClick={[Function]}
                          type="button"
                        >
                          one
                        </Button>,
                      ],
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <Button
                          className="btn radius-top-left tag-one-inverted-coloring"
                          data-testid="tag-btn-one"
                          onClick={[Function]}
                          type="button"
                        >
                          one
                        </Button>,
                      ],
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": <div>
                      <button
                        class="btn radius-top-left tag-one-inverted-coloring"
                        data-testid="tag-btn-one"
                        type="button"
                      >
                        one
                      </button>
                    </div>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "stateNode": <div>
                    <button
                      class="btn btn--inverted margin-right"
                      data-testid="allBtn"
                      type="button"
                    >
                      All
                    </button>
                  </div>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": "div",
                "expirationTime": 0,
                "firstEffect": null,
                "index": 1,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <div>
                      <Button
                        className="btn btn--inverted margin-right"
                        data-testid="allBtn"
                        onClick={[Function]}
                        type="button"
                      >
                        All
                      </Button>
                    </div>,
                    <div>
                      <Button
                        className="btn radius-top-left tag-one-inverted-coloring"
                        data-testid="tag-btn-one"
                        onClick={[Function]}
                        type="button"
                      >
                        one
                      </Button>
                    </div>,
                  ],
                  "className": "flex",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <div>
                      <Button
                        className="btn btn--inverted margin-right"
                        data-testid="allBtn"
                        onClick={[Function]}
                        type="button"
                      >
                        All
                      </Button>
                    </div>,
                    <div>
                      <Button
                        className="btn radius-top-left tag-one-inverted-coloring"
                        data-testid="tag-btn-one"
                        onClick={[Function]}
                        type="button"
                      >
                        one
                      </Button>
                    </div>,
                  ],
                  "className": "flex",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": <div
                  class="flex"
                >
                  <div>
                    <button
                      class="btn btn--inverted margin-right"
                      data-testid="allBtn"
                      type="button"
                    >
                      All
                    </button>
                  </div>
                  <div>
                    <button
                      class="btn radius-top-left tag-one-inverted-coloring"
                      data-testid="tag-btn-one"
                      type="button"
                    >
                      one
                    </button>
                  </div>
                </div>,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "div",
                "updateQueue": null,
              },
              "stateNode": <div
                class="flex flex--column"
              >
                <h6>
                  Tags
                </h6>
              </div>,
              "tag": 5,
              "treeBaseDuration": 0,
              "type": "div",
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 0,
            "elementType": "div",
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": Array [
                <div
                  className="flex flex--column"
                >
                  <h6>
                    Tags
                  </h6>
                </div>,
                <div
                  className="flex"
                >
                  <div>
                    <Button
                      className="btn btn--inverted margin-right"
                      data-testid="allBtn"
                      onClick={[Function]}
                      type="button"
                    >
                      All
                    </Button>
                  </div>
                  <div>
                    <Button
                      className="btn radius-top-left tag-one-inverted-coloring"
                      data-testid="tag-btn-one"
                      onClick={[Function]}
                      type="button"
                    >
                      one
                    </Button>
                  </div>
                </div>,
              ],
              "className": "container high-contrast-coloring margin-bottom radius ",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": Array [
                <div
                  className="flex flex--column"
                >
                  <h6>
                    Tags
                  </h6>
                </div>,
                <div
                  className="flex"
                >
                  <div>
                    <Button
                      className="btn btn--inverted margin-right"
                      data-testid="allBtn"
                      onClick={[Function]}
                      type="button"
                    >
                      All
                    </Button>
                  </div>
                  <div>
                    <Button
                      className="btn radius-top-left tag-one-inverted-coloring"
                      data-testid="tag-btn-one"
                      onClick={[Function]}
                      type="button"
                    >
                      one
                    </Button>
                  </div>
                </div>,
              ],
              "className": "container high-contrast-coloring margin-bottom radius ",
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": <div
              class="container high-contrast-coloring margin-bottom radius "
            >
              <div
                class="flex flex--column"
              >
                <h6>
                  Tags
                </h6>
              </div>
              <div
                class="flex"
              >
                <div>
                  <button
                    class="btn btn--inverted margin-right"
                    data-testid="allBtn"
                    type="button"
                  >
                    All
                  </button>
                </div>
                <div>
                  <button
                    class="btn radius-top-left tag-one-inverted-coloring"
                    data-testid="tag-btn-one"
                    type="button"
                  >
                    one
                  </button>
                </div>
              </div>
            </div>,
            "tag": 5,
            "treeBaseDuration": 0,
            "type": "div",
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "contextDependencies": null,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": <div
              className="flex"
            >
              <div>
                <Button
                  className="btn btn--inverted margin-right"
                  data-testid="allBtn"
                  onClick={[Function]}
                  type="button"
                >
                  All
                </Button>
              </div>
              <div>
                <Button
                  className="btn radius-top-left tag-one-inverted-coloring"
                  data-testid="tag-btn-one"
                  onClick={[Function]}
                  type="button"
                >
                  one
                </Button>
              </div>
            </div>,
            "title": "Tags",
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": <div
              className="flex"
            >
              <div>
                <Button
                  className="btn btn--inverted margin-right"
                  data-testid="allBtn"
                  onClick={[Function]}
                  type="button"
                >
                  All
                </Button>
              </div>
              <div>
                <Button
                  className="btn radius-top-left tag-one-inverted-coloring"
                  data-testid="tag-btn-one"
                  onClick={[Function]}
                  type="button"
                >
                  one
                </Button>
              </div>
            </div>,
            "title": "Tags",
          },
          "ref": null,
          "return": [Circular],
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": null,
          "tag": 0,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "childExpirationTime": 0,
        "contextDependencies": null,
        "effectTag": 1,
        "elementType": [Function],
        "expirationTime": 0,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": Object {
          "onSelectionChange": [MockFunction],
          "tags": Array [
            Object {
              "selected": false,
              "tag": "one",
              "text": "one",
            },
          ],
        },
        "memoizedState": null,
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {
          "onSelectionChange": [MockFunction],
          "tags": Array [
            Object {
              "selected": false,
              "tag": "one",
              "text": "one",
            },
          ],
        },
        "ref": null,
        "return": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 62,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "contextDependencies": null,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "onSelectionChange": [MockFunction],
              "tags": Array [
                Object {
                  "selected": false,
                  "tag": "one",
                  "text": "one",
                },
              ],
            },
            "wrappingComponentProps": null,
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {
              "onSelectionChange": [MockFunction],
              "tags": Array [
                Object {
                  "selected": false,
                  "tag": "one",
                  "text": "one",
                },
              ],
            },
            "wrappingComponentProps": null,
          },
          "mode": 0,
          "nextEffect": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 60,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 60,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1073741823,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="container high-contrast-coloring margin-bottom radius "
                  >
                    <div
                      class="flex flex--column"
                    >
                      <h6>
                        Tags
                      </h6>
                    </div>
                    <div
                      class="flex"
                    >
                      <div>
                        <button
                          class="btn btn--inverted margin-right"
                          data-testid="allBtn"
                          type="button"
                        >
                          All
                        </button>
                      </div>
                      <div>
                        <button
                          class="btn radius-top-left tag-one-inverted-coloring"
                          data-testid="tag-btn-one"
                          type="button"
                        >
                          one
                        </button>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 15,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "onSelectionChange": [MockFunction],
                          "tags": Array [
                            Object {
                              "selected": false,
                              "tag": "one",
                              "text": "one",
                            },
                          ],
                        }
                      }
                      wrappingComponentProps={null}
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "onSelectionChange": [MockFunction],
                          "tags": Array [
                            Object {
                              "selected": false,
                              "tag": "one",
                              "text": "one",
                            },
                          ],
                        }
                      }
                      wrappingComponentProps={null}
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "onSelectionChange": [MockFunction],
                    "tags": Array [
                      Object {
                        "selected": false,
                        "tag": "one",
                        "text": "one",
                      },
                    ],
                  }
                }
                wrappingComponentProps={null}
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                  class="container high-contrast-coloring margin-bottom radius "
                >
                  <div
                    class="flex flex--column"
                  >
                    <h6>
                      Tags
                    </h6>
                  </div>
                  <div
                    class="flex"
                  >
                    <div>
                      <button
                        class="btn btn--inverted margin-right"
                        data-testid="allBtn"
                        type="button"
                      >
                        All
                      </button>
                    </div>
                    <div>
                      <button
                        class="btn radius-top-left tag-one-inverted-coloring"
                        data-testid="tag-btn-one"
                        type="button"
                      >
                        one
                      </button>
                    </div>
                  </div>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 15,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "pingCache": null,
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "onSelectionChange": [MockFunction],
                      "tags": Array [
                        Object {
                          "selected": false,
                          "tag": "one",
                          "text": "one",
                        },
                      ],
                    }
                  }
                  wrappingComponentProps={null}
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "onSelectionChange": [MockFunction],
              "tags": Array [
                Object {
                  "selected": false,
                  "tag": "one",
                  "text": "one",
                },
              ],
            },
            "wrappingComponentProps": null,
          },
          "ref": null,
          "return": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 60,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 60,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1073741823,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="container high-contrast-coloring margin-bottom radius "
                  >
                    <div
                      class="flex flex--column"
                    >
                      <h6>
                        Tags
                      </h6>
                    </div>
                    <div
                      class="flex"
                    >
                      <div>
                        <button
                          class="btn btn--inverted margin-right"
                          data-testid="allBtn"
                          type="button"
                        >
                          All
                        </button>
                      </div>
                      <div>
                        <button
                          class="btn radius-top-left tag-one-inverted-coloring"
                          data-testid="tag-btn-one"
                          type="button"
                        >
                          one
                        </button>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 15,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "onSelectionChange": [MockFunction],
                          "tags": Array [
                            Object {
                              "selected": false,
                              "tag": "one",
                              "text": "one",
                            },
                          ],
                        }
                      }
                      wrappingComponentProps={null}
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "onSelectionChange": [MockFunction],
                          "tags": Array [
                            Object {
                              "selected": false,
                              "tag": "one",
                              "text": "one",
                            },
                          ],
                        }
                      }
                      wrappingComponentProps={null}
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "onSelectionChange": [MockFunction],
                    "tags": Array [
                      Object {
                        "selected": false,
                        "tag": "one",
                        "text": "one",
                      },
                    ],
                  }
                }
                wrappingComponentProps={null}
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                  class="container high-contrast-coloring margin-bottom radius "
                >
                  <div
                    class="flex flex--column"
                  >
                    <h6>
                      Tags
                    </h6>
                  </div>
                  <div
                    class="flex"
                  >
                    <div>
                      <button
                        class="btn btn--inverted margin-right"
                        data-testid="allBtn"
                        type="button"
                      >
                        All
                      </button>
                    </div>
                    <div>
                      <button
                        class="btn radius-top-left tag-one-inverted-coloring"
                        data-testid="tag-btn-one"
                        type="button"
                      >
                        one
                      </button>
                    </div>
                  </div>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 15,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "pingCache": null,
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "onSelectionChange": [MockFunction],
                      "tags": Array [
                        Object {
                          "selected": false,
                          "tag": "one",
                          "text": "one",
                        },
                      ],
                    }
                  }
                  wrappingComponentProps={null}
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "onSelectionChange": [MockFunction],
                "tags": Array [
                  Object {
                    "selected": false,
                    "tag": "one",
                    "text": "one",
                  },
                ],
              },
              "wrappingComponentProps": null,
            },
            "refs": Object {},
            "rootFinderInstance": null,
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "onSelectionChange": [MockFunction],
                "tags": Array [
                  Object {
                    "selected": false,
                    "tag": "one",
                    "text": "one",
                  },
                ],
              },
              "wrappingComponentProps": null,
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "selfBaseDuration": 0,
        "sibling": null,
        "stateNode": [Circular],
        "tag": 1,
        "treeBaseDuration": 0,
        "type": [Function],
        "updateQueue": null,
      },
      "_reactInternalInstance": Object {},
      "areAllSelected": [Function],
      "context": Object {},
      "props": Object {
        "onSelectionChange": [MockFunction],
        "tags": Array [
          Object {
            "selected": false,
            "tag": "one",
            "text": "one",
          },
        ],
      },
      "refs": Object {},
      "state": null,
      "toggleAll": [Function],
      "toggleOne": [Function],
      "updater": Object {
        "enqueueForceUpdate": [Function],
        "enqueueReplaceState": [Function],
        "enqueueSetState": [Function],
        "isMounted": [Function],
      },
    },
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "onSelectionChange": [MockFunction],
      "tags": Array [
        Object {
          "selected": false,
          "tag": "one",
          "text": "one",
        },
      ],
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <div
          className="flex"
        >
          <div>
            <Button
              className="btn btn--inverted margin-right"
              data-testid="allBtn"
              onClick={[Function]}
              type="button"
            >
              All
            </Button>
          </div>
          <div>
            <Button
              className="btn radius-top-left tag-one-inverted-coloring"
              data-testid="tag-btn-one"
              onClick={[Function]}
              type="button"
            >
              one
            </Button>
          </div>
        </div>,
        "title": "Tags",
      },
      "ref": null,
      "rendered": Object {
        "instance": <div
          class="container high-contrast-coloring margin-bottom radius "
        >
          <div
            class="flex flex--column"
          >
            <h6>
              Tags
            </h6>
          </div>
          <div
            class="flex"
          >
            <div>
              <button
                class="btn btn--inverted margin-right"
                data-testid="allBtn"
                type="button"
              >
                All
              </button>
            </div>
            <div>
              <button
                class="btn radius-top-left tag-one-inverted-coloring"
                data-testid="tag-btn-one"
                type="button"
              >
                one
              </button>
            </div>
          </div>
        </div>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="flex flex--column"
            >
              <h6>
                Tags
              </h6>
            </div>,
            <div
              className="flex"
            >
              <div>
                <Button
                  className="btn btn--inverted margin-right"
                  data-testid="allBtn"
                  onClick={[Function]}
                  type="button"
                >
                  All
                </Button>
              </div>
              <div>
                <Button
                  className="btn radius-top-left tag-one-inverted-coloring"
                  data-testid="tag-btn-one"
                  onClick={[Function]}
                  type="button"
                >
                  one
                </Button>
              </div>
            </div>,
          ],
          "className": "container high-contrast-coloring margin-bottom radius ",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <div
              class="flex flex--column"
            >
              <h6>
                Tags
              </h6>
            </div>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h6>
                  Tags
                </h6>,
                undefined,
              ],
              "className": "flex flex--column",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <h6>
                  Tags
                </h6>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Tags",
                },
                "ref": null,
                "rendered": Array [
                  "Tags",
                ],
                "type": "h6",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": <div
              class="flex"
            >
              <div>
                <button
                  class="btn btn--inverted margin-right"
                  data-testid="allBtn"
                  type="button"
                >
                  All
                </button>
              </div>
              <div>
                <button
                  class="btn radius-top-left tag-one-inverted-coloring"
                  data-testid="tag-btn-one"
                  type="button"
                >
                  one
                </button>
              </div>
            </div>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div>
                  <Button
                    className="btn btn--inverted margin-right"
                    data-testid="allBtn"
                    onClick={[Function]}
                    type="button"
                  >
                    All
                  </Button>
                </div>,
                <div>
                  <Button
                    className="btn radius-top-left tag-one-inverted-coloring"
                    data-testid="tag-btn-one"
                    onClick={[Function]}
                    type="button"
                  >
                    one
                  </Button>
                </div>,
              ],
              "className": "flex",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <div>
                  <button
                    class="btn btn--inverted margin-right"
                    data-testid="allBtn"
                    type="button"
                  >
                    All
                  </button>
                </div>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Button
                    className="btn btn--inverted margin-right"
                    data-testid="allBtn"
                    onClick={[Function]}
                    type="button"
                  >
                    All
                  </Button>,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": "All",
                      "className": "btn btn--inverted margin-right",
                      "data-testid": "allBtn",
                      "onClick": [Function],
                      "type": "button",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": <button
                        class="btn btn--inverted margin-right"
                        data-testid="allBtn"
                        type="button"
                      >
                        All
                      </button>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "All",
                        "className": "btn btn--inverted margin-right",
                        "data-testid": "allBtn",
                        "onClick": [Function],
                        "type": "button",
                      },
                      "ref": null,
                      "rendered": Array [
                        "All",
                      ],
                      "type": "button",
                    },
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": <div>
                  <button
                    class="btn radius-top-left tag-one-inverted-coloring"
                    data-testid="tag-btn-one"
                    type="button"
                  >
                    one
                  </button>
                </div>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <Button
                      className="btn radius-top-left tag-one-inverted-coloring"
                      data-testid="tag-btn-one"
                      onClick={[Function]}
                      type="button"
                    >
                      one
                    </Button>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "tag-filter-one-0",
                    "nodeType": "function",
                    "props": Object {
                      "children": "one",
                      "className": "btn radius-top-left tag-one-inverted-coloring",
                      "data-testid": "tag-btn-one",
                      "onClick": [Function],
                      "type": "button",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": <button
                        class="btn radius-top-left tag-one-inverted-coloring"
                        data-testid="tag-btn-one"
                        type="button"
                      >
                        one
                      </button>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "one",
                        "className": "btn radius-top-left tag-one-inverted-coloring",
                        "data-testid": "tag-btn-one",
                        "onClick": [Function],
                        "type": "button",
                      },
                      "ref": null,
                      "rendered": Array [
                        "one",
                      ],
                      "type": "button",
                    },
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": TagFilter {
        "_reactInternalFiber": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 63,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 62,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "onSelectionChange": [MockFunction],
                "tags": Array [
                  Object {
                    "selected": false,
                    "tag": "one",
                    "text": "one",
                  },
                ],
              },
              "wrappingComponentProps": null,
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "onSelectionChange": [MockFunction],
                "tags": Array [
                  Object {
                    "selected": false,
                    "tag": "one",
                    "text": "one",
                  },
                ],
              },
              "wrappingComponentProps": null,
            },
            "mode": 0,
            "nextEffect": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 60,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 60,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1073741823,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                      class="container high-contrast-coloring margin-bottom radius "
                    >
                      <div
                        class="flex flex--column"
                      >
                        <h6>
                          Tags
                        </h6>
                      </div>
                      <div
                        class="flex"
                      >
                        <div>
                          <button
                            class="btn btn--inverted margin-right"
                            data-testid="allBtn"
                            type="button"
                          >
                            All
                          </button>
                        </div>
                        <div>
                          <button
                            class="btn radius-top-left tag-one-inverted-coloring"
                            data-testid="tag-btn-one"
                            type="button"
                          >
                            one
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 15,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "pingCache": null,
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "onSelectionChange": [MockFunction],
                            "tags": Array [
                              Object {
                                "selected": false,
                                "tag": "one",
                                "text": "one",
                              },
                            ],
                          }
                        }
                        wrappingComponentProps={null}
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "onSelectionChange": [MockFunction],
                            "tags": Array [
                              Object {
                                "selected": false,
                                "tag": "one",
                                "text": "one",
                              },
                            ],
                          }
                        }
                        wrappingComponentProps={null}
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "onSelectionChange": [MockFunction],
                      "tags": Array [
                        Object {
                          "selected": false,
                          "tag": "one",
                          "text": "one",
                        },
                      ],
                    }
                  }
                  wrappingComponentProps={null}
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="container high-contrast-coloring margin-bottom radius "
                  >
                    <div
                      class="flex flex--column"
                    >
                      <h6>
                        Tags
                      </h6>
                    </div>
                    <div
                      class="flex"
                    >
                      <div>
                        <button
                          class="btn btn--inverted margin-right"
                          data-testid="allBtn"
                          type="button"
                        >
                          All
                        </button>
                      </div>
                      <div>
                        <button
                          class="btn radius-top-left tag-one-inverted-coloring"
                          data-testid="tag-btn-one"
                          type="button"
                        >
                          one
                        </button>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 15,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "onSelectionChange": [MockFunction],
                        "tags": Array [
                          Object {
                            "selected": false,
                            "tag": "one",
                            "text": "one",
                          },
                        ],
                      }
                    }
                    wrappingComponentProps={null}
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "onSelectionChange": [MockFunction],
                "tags": Array [
                  Object {
                    "selected": false,
                    "tag": "one",
                    "text": "one",
                  },
                ],
              },
              "wrappingComponentProps": null,
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 60,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 60,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1073741823,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                      class="container high-contrast-coloring margin-bottom radius "
                    >
                      <div
                        class="flex flex--column"
                      >
                        <h6>
                          Tags
                        </h6>
                      </div>
                      <div
                        class="flex"
                      >
                        <div>
                          <button
                            class="btn btn--inverted margin-right"
                            data-testid="allBtn"
                            type="button"
                          >
                            All
                          </button>
                        </div>
                        <div>
                          <button
                            class="btn radius-top-left tag-one-inverted-coloring"
                            data-testid="tag-btn-one"
                            type="button"
                          >
                            one
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 15,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "pingCache": null,
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "onSelectionChange": [MockFunction],
                            "tags": Array [
                              Object {
                                "selected": false,
                                "tag": "one",
                                "text": "one",
                              },
                            ],
                          }
                        }
                        wrappingComponentProps={null}
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "onSelectionChange": [MockFunction],
                            "tags": Array [
                              Object {
                                "selected": false,
                                "tag": "one",
                                "text": "one",
                              },
                            ],
                          }
                        }
                        wrappingComponentProps={null}
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "onSelectionChange": [MockFunction],
                      "tags": Array [
                        Object {
                          "selected": false,
                          "tag": "one",
                          "text": "one",
                        },
                      ],
                    }
                  }
                  wrappingComponentProps={null}
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="container high-contrast-coloring margin-bottom radius "
                  >
                    <div
                      class="flex flex--column"
                    >
                      <h6>
                        Tags
                      </h6>
                    </div>
                    <div
                      class="flex"
                    >
                      <div>
                        <button
                          class="btn btn--inverted margin-right"
                          data-testid="allBtn"
                          type="button"
                        >
                          All
                        </button>
                      </div>
                      <div>
                        <button
                          class="btn radius-top-left tag-one-inverted-coloring"
                          data-testid="tag-btn-one"
                          type="button"
                        >
                          one
                        </button>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 15,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "onSelectionChange": [MockFunction],
                        "tags": Array [
                          Object {
                            "selected": false,
                            "tag": "one",
                            "text": "one",
                          },
                        ],
                      }
                    }
                    wrappingComponentProps={null}
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "onSelectionChange": [MockFunction],
                  "tags": Array [
                    Object {
                      "selected": false,
                      "tag": "one",
                      "text": "one",
                    },
                  ],
                },
                "wrappingComponentProps": null,
              },
              "refs": Object {},
              "rootFinderInstance": null,
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "onSelectionChange": [MockFunction],
                  "tags": Array [
                    Object {
                      "selected": false,
                      "tag": "one",
                      "text": "one",
                    },
                  ],
                },
                "wrappingComponentProps": null,
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 64,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\TagFilter\\\\TagFilter.js",
              "lineNumber": 56,
            },
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 65,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\Card\\\\Card.js",
                "lineNumber": 16,
              },
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 66,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\Card\\\\Card.js",
                  "lineNumber": 18,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 68,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\Card\\\\Card.js",
                    "lineNumber": 19,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "contextDependencies": null,
                  "effectTag": 0,
                  "elementType": "h6",
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "Tags",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "Tags",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": <h6>
                    Tags
                  </h6>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "h6",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": "div",
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <h6>
                      Tags
                    </h6>,
                    undefined,
                  ],
                  "className": "flex flex--column",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <h6>
                      Tags
                    </h6>,
                    undefined,
                  ],
                  "className": "flex flex--column",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 67,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\TagFilter\\\\TagFilter.js",
                    "lineNumber": 57,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 69,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\TagFilter\\\\TagFilter.js",
                      "lineNumber": 58,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 71,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\TagFilter\\\\TagFilter.js",
                        "lineNumber": 59,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 72,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\Button\\\\Button.js",
                          "lineNumber": 3,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 0,
                        "elementType": "button",
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "All",
                          "className": "btn btn--inverted margin-right",
                          "data-testid": "allBtn",
                          "onClick": [Function],
                          "type": "button",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "All",
                          "className": "btn btn--inverted margin-right",
                          "data-testid": "allBtn",
                          "onClick": [Function],
                          "type": "button",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <button
                          class="btn btn--inverted margin-right"
                          data-testid="allBtn"
                          type="button"
                        >
                          All
                        </button>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "button",
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 1,
                      "elementType": [Function],
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "All",
                        "className": "btn btn--inverted margin-right",
                        "data-testid": "allBtn",
                        "onClick": [Function],
                        "type": "button",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "All",
                        "className": "btn btn--inverted margin-right",
                        "data-testid": "allBtn",
                        "onClick": [Function],
                        "type": "button",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": null,
                      "tag": 0,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 0,
                    "elementType": "div",
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": <Button
                        className="btn btn--inverted margin-right"
                        data-testid="allBtn"
                        onClick={[Function]}
                        type="button"
                      >
                        All
                      </Button>,
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <Button
                        className="btn btn--inverted margin-right"
                        data-testid="allBtn"
                        onClick={[Function]}
                        type="button"
                      >
                        All
                      </Button>,
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 70,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\TagFilter\\\\TagFilter.js",
                        "lineNumber": 68,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 73,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\TagFilter\\\\TagFilter.js",
                          "lineNumber": 82,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 74,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\Button\\\\Button.js",
                            "lineNumber": 3,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "contextDependencies": null,
                          "effectTag": 0,
                          "elementType": "button",
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "one",
                            "className": "btn radius-top-left tag-one-inverted-coloring",
                            "data-testid": "tag-btn-one",
                            "onClick": [Function],
                            "type": "button",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "one",
                            "className": "btn radius-top-left tag-one-inverted-coloring",
                            "data-testid": "tag-btn-one",
                            "onClick": [Function],
                            "type": "button",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <button
                            class="btn radius-top-left tag-one-inverted-coloring"
                            data-testid="tag-btn-one"
                            type="button"
                          >
                            one
                          </button>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "button",
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 1,
                        "elementType": [Function],
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": "tag-filter-one-0",
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "one",
                          "className": "btn radius-top-left tag-one-inverted-coloring",
                          "data-testid": "tag-btn-one",
                          "onClick": [Function],
                          "type": "button",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "one",
                          "className": "btn radius-top-left tag-one-inverted-coloring",
                          "data-testid": "tag-btn-one",
                          "onClick": [Function],
                          "type": "button",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": null,
                        "tag": 0,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 0,
                      "elementType": "div",
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 1,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <Button
                            className="btn radius-top-left tag-one-inverted-coloring"
                            data-testid="tag-btn-one"
                            onClick={[Function]}
                            type="button"
                          >
                            one
                          </Button>,
                        ],
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <Button
                            className="btn radius-top-left tag-one-inverted-coloring"
                            data-testid="tag-btn-one"
                            onClick={[Function]}
                            type="button"
                          >
                            one
                          </Button>,
                        ],
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <div>
                        <button
                          class="btn radius-top-left tag-one-inverted-coloring"
                          data-testid="tag-btn-one"
                          type="button"
                        >
                          one
                        </button>
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "stateNode": <div>
                      <button
                        class="btn btn--inverted margin-right"
                        data-testid="allBtn"
                        type="button"
                      >
                        All
                      </button>
                    </div>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "contextDependencies": null,
                  "effectTag": 0,
                  "elementType": "div",
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 1,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <div>
                        <Button
                          className="btn btn--inverted margin-right"
                          data-testid="allBtn"
                          onClick={[Function]}
                          type="button"
                        >
                          All
                        </Button>
                      </div>,
                      <div>
                        <Button
                          className="btn radius-top-left tag-one-inverted-coloring"
                          data-testid="tag-btn-one"
                          onClick={[Function]}
                          type="button"
                        >
                          one
                        </Button>
                      </div>,
                    ],
                    "className": "flex",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <div>
                        <Button
                          className="btn btn--inverted margin-right"
                          data-testid="allBtn"
                          onClick={[Function]}
                          type="button"
                        >
                          All
                        </Button>
                      </div>,
                      <div>
                        <Button
                          className="btn radius-top-left tag-one-inverted-coloring"
                          data-testid="tag-btn-one"
                          onClick={[Function]}
                          type="button"
                        >
                          one
                        </Button>
                      </div>,
                    ],
                    "className": "flex",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": <div
                    class="flex"
                  >
                    <div>
                      <button
                        class="btn btn--inverted margin-right"
                        data-testid="allBtn"
                        type="button"
                      >
                        All
                      </button>
                    </div>
                    <div>
                      <button
                        class="btn radius-top-left tag-one-inverted-coloring"
                        data-testid="tag-btn-one"
                        type="button"
                      >
                        one
                      </button>
                    </div>
                  </div>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "stateNode": <div
                  class="flex flex--column"
                >
                  <h6>
                    Tags
                  </h6>
                </div>,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "div",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": "div",
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <div
                    className="flex flex--column"
                  >
                    <h6>
                      Tags
                    </h6>
                  </div>,
                  <div
                    className="flex"
                  >
                    <div>
                      <Button
                        className="btn btn--inverted margin-right"
                        data-testid="allBtn"
                        onClick={[Function]}
                        type="button"
                      >
                        All
                      </Button>
                    </div>
                    <div>
                      <Button
                        className="btn radius-top-left tag-one-inverted-coloring"
                        data-testid="tag-btn-one"
                        onClick={[Function]}
                        type="button"
                      >
                        one
                      </Button>
                    </div>
                  </div>,
                ],
                "className": "container high-contrast-coloring margin-bottom radius ",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  <div
                    className="flex flex--column"
                  >
                    <h6>
                      Tags
                    </h6>
                  </div>,
                  <div
                    className="flex"
                  >
                    <div>
                      <Button
                        className="btn btn--inverted margin-right"
                        data-testid="allBtn"
                        onClick={[Function]}
                        type="button"
                      >
                        All
                      </Button>
                    </div>
                    <div>
                      <Button
                        className="btn radius-top-left tag-one-inverted-coloring"
                        data-testid="tag-btn-one"
                        onClick={[Function]}
                        type="button"
                      >
                        one
                      </Button>
                    </div>
                  </div>,
                ],
                "className": "container high-contrast-coloring margin-bottom radius ",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": <div
                class="container high-contrast-coloring margin-bottom radius "
              >
                <div
                  class="flex flex--column"
                >
                  <h6>
                    Tags
                  </h6>
                </div>
                <div
                  class="flex"
                >
                  <div>
                    <button
                      class="btn btn--inverted margin-right"
                      data-testid="allBtn"
                      type="button"
                    >
                      All
                    </button>
                  </div>
                  <div>
                    <button
                      class="btn radius-top-left tag-one-inverted-coloring"
                      data-testid="tag-btn-one"
                      type="button"
                    >
                      one
                    </button>
                  </div>
                </div>
              </div>,
              "tag": 5,
              "treeBaseDuration": 0,
              "type": "div",
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": <div
                className="flex"
              >
                <div>
                  <Button
                    className="btn btn--inverted margin-right"
                    data-testid="allBtn"
                    onClick={[Function]}
                    type="button"
                  >
                    All
                  </Button>
                </div>
                <div>
                  <Button
                    className="btn radius-top-left tag-one-inverted-coloring"
                    data-testid="tag-btn-one"
                    onClick={[Function]}
                    type="button"
                  >
                    one
                  </Button>
                </div>
              </div>,
              "title": "Tags",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": <div
                className="flex"
              >
                <div>
                  <Button
                    className="btn btn--inverted margin-right"
                    data-testid="allBtn"
                    onClick={[Function]}
                    type="button"
                  >
                    All
                  </Button>
                </div>
                <div>
                  <Button
                    className="btn radius-top-left tag-one-inverted-coloring"
                    data-testid="tag-btn-one"
                    onClick={[Function]}
                    type="button"
                  >
                    one
                  </Button>
                </div>
              </div>,
              "title": "Tags",
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 0,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "contextDependencies": null,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "onSelectionChange": [MockFunction],
            "tags": Array [
              Object {
                "selected": false,
                "tag": "one",
                "text": "one",
              },
            ],
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "onSelectionChange": [MockFunction],
            "tags": Array [
              Object {
                "selected": false,
                "tag": "one",
                "text": "one",
              },
            ],
          },
          "ref": null,
          "return": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 62,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "onSelectionChange": [MockFunction],
                "tags": Array [
                  Object {
                    "selected": false,
                    "tag": "one",
                    "text": "one",
                  },
                ],
              },
              "wrappingComponentProps": null,
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "onSelectionChange": [MockFunction],
                "tags": Array [
                  Object {
                    "selected": false,
                    "tag": "one",
                    "text": "one",
                  },
                ],
              },
              "wrappingComponentProps": null,
            },
            "mode": 0,
            "nextEffect": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 60,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 60,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1073741823,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                      class="container high-contrast-coloring margin-bottom radius "
                    >
                      <div
                        class="flex flex--column"
                      >
                        <h6>
                          Tags
                        </h6>
                      </div>
                      <div
                        class="flex"
                      >
                        <div>
                          <button
                            class="btn btn--inverted margin-right"
                            data-testid="allBtn"
                            type="button"
                          >
                            All
                          </button>
                        </div>
                        <div>
                          <button
                            class="btn radius-top-left tag-one-inverted-coloring"
                            data-testid="tag-btn-one"
                            type="button"
                          >
                            one
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 15,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "pingCache": null,
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "onSelectionChange": [MockFunction],
                            "tags": Array [
                              Object {
                                "selected": false,
                                "tag": "one",
                                "text": "one",
                              },
                            ],
                          }
                        }
                        wrappingComponentProps={null}
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "onSelectionChange": [MockFunction],
                            "tags": Array [
                              Object {
                                "selected": false,
                                "tag": "one",
                                "text": "one",
                              },
                            ],
                          }
                        }
                        wrappingComponentProps={null}
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "onSelectionChange": [MockFunction],
                      "tags": Array [
                        Object {
                          "selected": false,
                          "tag": "one",
                          "text": "one",
                        },
                      ],
                    }
                  }
                  wrappingComponentProps={null}
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="container high-contrast-coloring margin-bottom radius "
                  >
                    <div
                      class="flex flex--column"
                    >
                      <h6>
                        Tags
                      </h6>
                    </div>
                    <div
                      class="flex"
                    >
                      <div>
                        <button
                          class="btn btn--inverted margin-right"
                          data-testid="allBtn"
                          type="button"
                        >
                          All
                        </button>
                      </div>
                      <div>
                        <button
                          class="btn radius-top-left tag-one-inverted-coloring"
                          data-testid="tag-btn-one"
                          type="button"
                        >
                          one
                        </button>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 15,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "onSelectionChange": [MockFunction],
                        "tags": Array [
                          Object {
                            "selected": false,
                            "tag": "one",
                            "text": "one",
                          },
                        ],
                      }
                    }
                    wrappingComponentProps={null}
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "onSelectionChange": [MockFunction],
                "tags": Array [
                  Object {
                    "selected": false,
                    "tag": "one",
                    "text": "one",
                  },
                ],
              },
              "wrappingComponentProps": null,
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 60,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 60,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1073741823,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                      class="container high-contrast-coloring margin-bottom radius "
                    >
                      <div
                        class="flex flex--column"
                      >
                        <h6>
                          Tags
                        </h6>
                      </div>
                      <div
                        class="flex"
                      >
                        <div>
                          <button
                            class="btn btn--inverted margin-right"
                            data-testid="allBtn"
                            type="button"
                          >
                            All
                          </button>
                        </div>
                        <div>
                          <button
                            class="btn radius-top-left tag-one-inverted-coloring"
                            data-testid="tag-btn-one"
                            type="button"
                          >
                            one
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 15,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "pingCache": null,
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "onSelectionChange": [MockFunction],
                            "tags": Array [
                              Object {
                                "selected": false,
                                "tag": "one",
                                "text": "one",
                              },
                            ],
                          }
                        }
                        wrappingComponentProps={null}
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "onSelectionChange": [MockFunction],
                            "tags": Array [
                              Object {
                                "selected": false,
                                "tag": "one",
                                "text": "one",
                              },
                            ],
                          }
                        }
                        wrappingComponentProps={null}
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "onSelectionChange": [MockFunction],
                      "tags": Array [
                        Object {
                          "selected": false,
                          "tag": "one",
                          "text": "one",
                        },
                      ],
                    }
                  }
                  wrappingComponentProps={null}
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="container high-contrast-coloring margin-bottom radius "
                  >
                    <div
                      class="flex flex--column"
                    >
                      <h6>
                        Tags
                      </h6>
                    </div>
                    <div
                      class="flex"
                    >
                      <div>
                        <button
                          class="btn btn--inverted margin-right"
                          data-testid="allBtn"
                          type="button"
                        >
                          All
                        </button>
                      </div>
                      <div>
                        <button
                          class="btn radius-top-left tag-one-inverted-coloring"
                          data-testid="tag-btn-one"
                          type="button"
                        >
                          one
                        </button>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 15,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "onSelectionChange": [MockFunction],
                        "tags": Array [
                          Object {
                            "selected": false,
                            "tag": "one",
                            "text": "one",
                          },
                        ],
                      }
                    }
                    wrappingComponentProps={null}
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "onSelectionChange": [MockFunction],
                  "tags": Array [
                    Object {
                      "selected": false,
                      "tag": "one",
                      "text": "one",
                    },
                  ],
                },
                "wrappingComponentProps": null,
              },
              "refs": Object {},
              "rootFinderInstance": null,
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "onSelectionChange": [MockFunction],
                  "tags": Array [
                    Object {
                      "selected": false,
                      "tag": "one",
                      "text": "one",
                    },
                  ],
                },
                "wrappingComponentProps": null,
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": [Circular],
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_reactInternalInstance": Object {},
        "areAllSelected": [Function],
        "context": Object {},
        "props": Object {
          "onSelectionChange": [MockFunction],
          "tags": Array [
            Object {
              "selected": false,
              "tag": "one",
              "text": "one",
            },
          ],
        },
        "refs": Object {},
        "state": null,
        "toggleAll": [Function],
        "toggleOne": [Function],
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
      },
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "onSelectionChange": [MockFunction],
        "tags": Array [
          Object {
            "selected": false,
            "tag": "one",
            "text": "one",
          },
        ],
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <div
            className="flex"
          >
            <div>
              <Button
                className="btn btn--inverted margin-right"
                data-testid="allBtn"
                onClick={[Function]}
                type="button"
              >
                All
              </Button>
            </div>
            <div>
              <Button
                className="btn radius-top-left tag-one-inverted-coloring"
                data-testid="tag-btn-one"
                onClick={[Function]}
                type="button"
              >
                one
              </Button>
            </div>
          </div>,
          "title": "Tags",
        },
        "ref": null,
        "rendered": Object {
          "instance": <div
            class="container high-contrast-coloring margin-bottom radius "
          >
            <div
              class="flex flex--column"
            >
              <h6>
                Tags
              </h6>
            </div>
            <div
              class="flex"
            >
              <div>
                <button
                  class="btn btn--inverted margin-right"
                  data-testid="allBtn"
                  type="button"
                >
                  All
                </button>
              </div>
              <div>
                <button
                  class="btn radius-top-left tag-one-inverted-coloring"
                  data-testid="tag-btn-one"
                  type="button"
                >
                  one
                </button>
              </div>
            </div>
          </div>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="flex flex--column"
              >
                <h6>
                  Tags
                </h6>
              </div>,
              <div
                className="flex"
              >
                <div>
                  <Button
                    className="btn btn--inverted margin-right"
                    data-testid="allBtn"
                    onClick={[Function]}
                    type="button"
                  >
                    All
                  </Button>
                </div>
                <div>
                  <Button
                    className="btn radius-top-left tag-one-inverted-coloring"
                    data-testid="tag-btn-one"
                    onClick={[Function]}
                    type="button"
                  >
                    one
                  </Button>
                </div>
              </div>,
            ],
            "className": "container high-contrast-coloring margin-bottom radius ",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <div
                class="flex flex--column"
              >
                <h6>
                  Tags
                </h6>
              </div>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h6>
                    Tags
                  </h6>,
                  undefined,
                ],
                "className": "flex flex--column",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": <h6>
                    Tags
                  </h6>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Tags",
                  },
                  "ref": null,
                  "rendered": Array [
                    "Tags",
                  ],
                  "type": "h6",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": <div
                class="flex"
              >
                <div>
                  <button
                    class="btn btn--inverted margin-right"
                    data-testid="allBtn"
                    type="button"
                  >
                    All
                  </button>
                </div>
                <div>
                  <button
                    class="btn radius-top-left tag-one-inverted-coloring"
                    data-testid="tag-btn-one"
                    type="button"
                  >
                    one
                  </button>
                </div>
              </div>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div>
                    <Button
                      className="btn btn--inverted margin-right"
                      data-testid="allBtn"
                      onClick={[Function]}
                      type="button"
                    >
                      All
                    </Button>
                  </div>,
                  <div>
                    <Button
                      className="btn radius-top-left tag-one-inverted-coloring"
                      data-testid="tag-btn-one"
                      onClick={[Function]}
                      type="button"
                    >
                      one
                    </Button>
                  </div>,
                ],
                "className": "flex",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": <div>
                    <button
                      class="btn btn--inverted margin-right"
                      data-testid="allBtn"
                      type="button"
                    >
                      All
                    </button>
                  </div>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Button
                      className="btn btn--inverted margin-right"
                      data-testid="allBtn"
                      onClick={[Function]}
                      type="button"
                    >
                      All
                    </Button>,
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "children": "All",
                        "className": "btn btn--inverted margin-right",
                        "data-testid": "allBtn",
                        "onClick": [Function],
                        "type": "button",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": <button
                          class="btn btn--inverted margin-right"
                          data-testid="allBtn"
                          type="button"
                        >
                          All
                        </button>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "All",
                          "className": "btn btn--inverted margin-right",
                          "data-testid": "allBtn",
                          "onClick": [Function],
                          "type": "button",
                        },
                        "ref": null,
                        "rendered": Array [
                          "All",
                        ],
                        "type": "button",
                      },
                      "type": [Function],
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": <div>
                    <button
                      class="btn radius-top-left tag-one-inverted-coloring"
                      data-testid="tag-btn-one"
                      type="button"
                    >
                      one
                    </button>
                  </div>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <Button
                        className="btn radius-top-left tag-one-inverted-coloring"
                        data-testid="tag-btn-one"
                        onClick={[Function]}
                        type="button"
                      >
                        one
                      </Button>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": "tag-filter-one-0",
                      "nodeType": "function",
                      "props": Object {
                        "children": "one",
                        "className": "btn radius-top-left tag-one-inverted-coloring",
                        "data-testid": "tag-btn-one",
                        "onClick": [Function],
                        "type": "button",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": <button
                          class="btn radius-top-left tag-one-inverted-coloring"
                          data-testid="tag-btn-one"
                          type="button"
                        >
                          one
                        </button>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "one",
                          "className": "btn radius-top-left tag-one-inverted-coloring",
                          "data-testid": "tag-btn-one",
                          "onClick": [Function],
                          "type": "button",
                        },
                        "ref": null,
                        "rendered": Array [
                          "one",
                        ],
                        "type": "button",
                      },
                      "type": [Function],
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Testing the TagFilter component Should toggle all selection values 1`] = `
ReactWrapper {
  Symbol(enzyme.__unrendered__): <TagFilter
    onSelectionChange={[MockFunction]}
    tags={
      Array [
        Object {
          "selected": false,
          "tag": "one",
          "text": "one",
        },
        Object {
          "selected": false,
          "tag": "two",
          "text": "two",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "getWrappingComponentRenderer": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": TagFilter {
      "_reactInternalFiber": FiberNode {
        "_debugHookTypes": null,
        "_debugID": 81,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 80,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "contextDependencies": null,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "onSelectionChange": [MockFunction],
              "tags": Array [
                Object {
                  "selected": false,
                  "tag": "one",
                  "text": "one",
                },
                Object {
                  "selected": false,
                  "tag": "two",
                  "text": "two",
                },
              ],
            },
            "wrappingComponentProps": null,
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {
              "onSelectionChange": [MockFunction],
              "tags": Array [
                Object {
                  "selected": false,
                  "tag": "one",
                  "text": "one",
                },
                Object {
                  "selected": false,
                  "tag": "two",
                  "text": "two",
                },
              ],
            },
            "wrappingComponentProps": null,
          },
          "mode": 0,
          "nextEffect": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 78,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 78,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1073741823,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="container high-contrast-coloring margin-bottom radius "
                  >
                    <div
                      class="flex flex--column"
                    >
                      <h6>
                        Tags
                      </h6>
                    </div>
                    <div
                      class="flex"
                    >
                      <div>
                        <button
                          class="btn btn--inverted margin-right"
                          data-testid="allBtn"
                          type="button"
                        >
                          All
                        </button>
                      </div>
                      <div>
                        <button
                          class="btn radius-top-left tag-one-inverted-coloring"
                          data-testid="tag-btn-one"
                          type="button"
                        >
                          one
                        </button>
                        <button
                          class="btn radius-bottom-right tag-two-inverted-coloring"
                          data-testid="tag-btn-two"
                          type="button"
                        >
                          two
                        </button>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 17,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "onSelectionChange": [MockFunction],
                          "tags": Array [
                            Object {
                              "selected": false,
                              "tag": "one",
                              "text": "one",
                            },
                            Object {
                              "selected": false,
                              "tag": "two",
                              "text": "two",
                            },
                          ],
                        }
                      }
                      wrappingComponentProps={null}
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "onSelectionChange": [MockFunction],
                          "tags": Array [
                            Object {
                              "selected": false,
                              "tag": "one",
                              "text": "one",
                            },
                            Object {
                              "selected": false,
                              "tag": "two",
                              "text": "two",
                            },
                          ],
                        }
                      }
                      wrappingComponentProps={null}
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "onSelectionChange": [MockFunction],
                    "tags": Array [
                      Object {
                        "selected": false,
                        "tag": "one",
                        "text": "one",
                      },
                      Object {
                        "selected": false,
                        "tag": "two",
                        "text": "two",
                      },
                    ],
                  }
                }
                wrappingComponentProps={null}
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                  class="container high-contrast-coloring margin-bottom radius "
                >
                  <div
                    class="flex flex--column"
                  >
                    <h6>
                      Tags
                    </h6>
                  </div>
                  <div
                    class="flex"
                  >
                    <div>
                      <button
                        class="btn btn--inverted margin-right"
                        data-testid="allBtn"
                        type="button"
                      >
                        All
                      </button>
                    </div>
                    <div>
                      <button
                        class="btn radius-top-left tag-one-inverted-coloring"
                        data-testid="tag-btn-one"
                        type="button"
                      >
                        one
                      </button>
                      <button
                        class="btn radius-bottom-right tag-two-inverted-coloring"
                        data-testid="tag-btn-two"
                        type="button"
                      >
                        two
                      </button>
                    </div>
                  </div>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 17,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "pingCache": null,
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "onSelectionChange": [MockFunction],
                      "tags": Array [
                        Object {
                          "selected": false,
                          "tag": "one",
                          "text": "one",
                        },
                        Object {
                          "selected": false,
                          "tag": "two",
                          "text": "two",
                        },
                      ],
                    }
                  }
                  wrappingComponentProps={null}
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "onSelectionChange": [MockFunction],
              "tags": Array [
                Object {
                  "selected": false,
                  "tag": "one",
                  "text": "one",
                },
                Object {
                  "selected": false,
                  "tag": "two",
                  "text": "two",
                },
              ],
            },
            "wrappingComponentProps": null,
          },
          "ref": null,
          "return": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 78,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 78,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1073741823,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="container high-contrast-coloring margin-bottom radius "
                  >
                    <div
                      class="flex flex--column"
                    >
                      <h6>
                        Tags
                      </h6>
                    </div>
                    <div
                      class="flex"
                    >
                      <div>
                        <button
                          class="btn btn--inverted margin-right"
                          data-testid="allBtn"
                          type="button"
                        >
                          All
                        </button>
                      </div>
                      <div>
                        <button
                          class="btn radius-top-left tag-one-inverted-coloring"
                          data-testid="tag-btn-one"
                          type="button"
                        >
                          one
                        </button>
                        <button
                          class="btn radius-bottom-right tag-two-inverted-coloring"
                          data-testid="tag-btn-two"
                          type="button"
                        >
                          two
                        </button>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 17,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "onSelectionChange": [MockFunction],
                          "tags": Array [
                            Object {
                              "selected": false,
                              "tag": "one",
                              "text": "one",
                            },
                            Object {
                              "selected": false,
                              "tag": "two",
                              "text": "two",
                            },
                          ],
                        }
                      }
                      wrappingComponentProps={null}
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "onSelectionChange": [MockFunction],
                          "tags": Array [
                            Object {
                              "selected": false,
                              "tag": "one",
                              "text": "one",
                            },
                            Object {
                              "selected": false,
                              "tag": "two",
                              "text": "two",
                            },
                          ],
                        }
                      }
                      wrappingComponentProps={null}
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "onSelectionChange": [MockFunction],
                    "tags": Array [
                      Object {
                        "selected": false,
                        "tag": "one",
                        "text": "one",
                      },
                      Object {
                        "selected": false,
                        "tag": "two",
                        "text": "two",
                      },
                    ],
                  }
                }
                wrappingComponentProps={null}
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                  class="container high-contrast-coloring margin-bottom radius "
                >
                  <div
                    class="flex flex--column"
                  >
                    <h6>
                      Tags
                    </h6>
                  </div>
                  <div
                    class="flex"
                  >
                    <div>
                      <button
                        class="btn btn--inverted margin-right"
                        data-testid="allBtn"
                        type="button"
                      >
                        All
                      </button>
                    </div>
                    <div>
                      <button
                        class="btn radius-top-left tag-one-inverted-coloring"
                        data-testid="tag-btn-one"
                        type="button"
                      >
                        one
                      </button>
                      <button
                        class="btn radius-bottom-right tag-two-inverted-coloring"
                        data-testid="tag-btn-two"
                        type="button"
                      >
                        two
                      </button>
                    </div>
                  </div>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 17,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "pingCache": null,
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "onSelectionChange": [MockFunction],
                      "tags": Array [
                        Object {
                          "selected": false,
                          "tag": "one",
                          "text": "one",
                        },
                        Object {
                          "selected": false,
                          "tag": "two",
                          "text": "two",
                        },
                      ],
                    }
                  }
                  wrappingComponentProps={null}
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "onSelectionChange": [MockFunction],
                "tags": Array [
                  Object {
                    "selected": false,
                    "tag": "one",
                    "text": "one",
                  },
                  Object {
                    "selected": false,
                    "tag": "two",
                    "text": "two",
                  },
                ],
              },
              "wrappingComponentProps": null,
            },
            "refs": Object {},
            "rootFinderInstance": null,
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "onSelectionChange": [MockFunction],
                "tags": Array [
                  Object {
                    "selected": false,
                    "tag": "one",
                    "text": "one",
                  },
                  Object {
                    "selected": false,
                    "tag": "two",
                    "text": "two",
                  },
                ],
              },
              "wrappingComponentProps": null,
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": -1,
        "alternate": null,
        "child": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 82,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": Object {
            "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\TagFilter\\\\TagFilter.js",
            "lineNumber": 56,
          },
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 83,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\Card\\\\Card.js",
              "lineNumber": 16,
            },
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 84,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\Card\\\\Card.js",
                "lineNumber": 18,
              },
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 86,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\Card\\\\Card.js",
                  "lineNumber": 19,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": null,
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": "h6",
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": "Tags",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": "Tags",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": <h6>
                  Tags
                </h6>,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "h6",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": "div",
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <h6>
                    Tags
                  </h6>,
                  undefined,
                ],
                "className": "flex flex--column",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  <h6>
                    Tags
                  </h6>,
                  undefined,
                ],
                "className": "flex flex--column",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 85,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\TagFilter\\\\TagFilter.js",
                  "lineNumber": 57,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 87,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\TagFilter\\\\TagFilter.js",
                    "lineNumber": 58,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 89,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\TagFilter\\\\TagFilter.js",
                      "lineNumber": 59,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 90,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\Button\\\\Button.js",
                        "lineNumber": 3,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 0,
                      "elementType": "button",
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "All",
                        "className": "btn btn--inverted margin-right",
                        "data-testid": "allBtn",
                        "onClick": [Function],
                        "type": "button",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "All",
                        "className": "btn btn--inverted margin-right",
                        "data-testid": "allBtn",
                        "onClick": [Function],
                        "type": "button",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <button
                        class="btn btn--inverted margin-right"
                        data-testid="allBtn"
                        type="button"
                      >
                        All
                      </button>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "button",
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 1,
                    "elementType": [Function],
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "All",
                      "className": "btn btn--inverted margin-right",
                      "data-testid": "allBtn",
                      "onClick": [Function],
                      "type": "button",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "All",
                      "className": "btn btn--inverted margin-right",
                      "data-testid": "allBtn",
                      "onClick": [Function],
                      "type": "button",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "tag": 0,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "contextDependencies": null,
                  "effectTag": 0,
                  "elementType": "div",
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": <Button
                      className="btn btn--inverted margin-right"
                      data-testid="allBtn"
                      onClick={[Function]}
                      type="button"
                    >
                      All
                    </Button>,
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <Button
                      className="btn btn--inverted margin-right"
                      data-testid="allBtn"
                      onClick={[Function]}
                      type="button"
                    >
                      All
                    </Button>,
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 88,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\TagFilter\\\\TagFilter.js",
                      "lineNumber": 68,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 91,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\TagFilter\\\\TagFilter.js",
                        "lineNumber": 82,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 93,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\Button\\\\Button.js",
                          "lineNumber": 3,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 0,
                        "elementType": "button",
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "one",
                          "className": "btn radius-top-left tag-one-inverted-coloring",
                          "data-testid": "tag-btn-one",
                          "onClick": [Function],
                          "type": "button",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "one",
                          "className": "btn radius-top-left tag-one-inverted-coloring",
                          "data-testid": "tag-btn-one",
                          "onClick": [Function],
                          "type": "button",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <button
                          class="btn radius-top-left tag-one-inverted-coloring"
                          data-testid="tag-btn-one"
                          type="button"
                        >
                          one
                        </button>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "button",
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 1,
                      "elementType": [Function],
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": "tag-filter-one-0",
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "one",
                        "className": "btn radius-top-left tag-one-inverted-coloring",
                        "data-testid": "tag-btn-one",
                        "onClick": [Function],
                        "type": "button",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "one",
                        "className": "btn radius-top-left tag-one-inverted-coloring",
                        "data-testid": "tag-btn-one",
                        "onClick": [Function],
                        "type": "button",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 92,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\TagFilter\\\\TagFilter.js",
                          "lineNumber": 82,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 94,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\Button\\\\Button.js",
                            "lineNumber": 3,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "contextDependencies": null,
                          "effectTag": 0,
                          "elementType": "button",
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "two",
                            "className": "btn radius-bottom-right tag-two-inverted-coloring",
                            "data-testid": "tag-btn-two",
                            "onClick": [Function],
                            "type": "button",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "two",
                            "className": "btn radius-bottom-right tag-two-inverted-coloring",
                            "data-testid": "tag-btn-two",
                            "onClick": [Function],
                            "type": "button",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <button
                            class="btn radius-bottom-right tag-two-inverted-coloring"
                            data-testid="tag-btn-two"
                            type="button"
                          >
                            two
                          </button>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "button",
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 1,
                        "elementType": [Function],
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 1,
                        "key": "tag-filter-two-1",
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "two",
                          "className": "btn radius-bottom-right tag-two-inverted-coloring",
                          "data-testid": "tag-btn-two",
                          "onClick": [Function],
                          "type": "button",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "two",
                          "className": "btn radius-bottom-right tag-two-inverted-coloring",
                          "data-testid": "tag-btn-two",
                          "onClick": [Function],
                          "type": "button",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": null,
                        "tag": 0,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "stateNode": null,
                      "tag": 0,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 0,
                    "elementType": "div",
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <Button
                          className="btn radius-top-left tag-one-inverted-coloring"
                          data-testid="tag-btn-one"
                          onClick={[Function]}
                          type="button"
                        >
                          one
                        </Button>,
                        <Button
                          className="btn radius-bottom-right tag-two-inverted-coloring"
                          data-testid="tag-btn-two"
                          onClick={[Function]}
                          type="button"
                        >
                          two
                        </Button>,
                      ],
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <Button
                          className="btn radius-top-left tag-one-inverted-coloring"
                          data-testid="tag-btn-one"
                          onClick={[Function]}
                          type="button"
                        >
                          one
                        </Button>,
                        <Button
                          className="btn radius-bottom-right tag-two-inverted-coloring"
                          data-testid="tag-btn-two"
                          onClick={[Function]}
                          type="button"
                        >
                          two
                        </Button>,
                      ],
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": <div>
                      <button
                        class="btn radius-top-left tag-one-inverted-coloring"
                        data-testid="tag-btn-one"
                        type="button"
                      >
                        one
                      </button>
                      <button
                        class="btn radius-bottom-right tag-two-inverted-coloring"
                        data-testid="tag-btn-two"
                        type="button"
                      >
                        two
                      </button>
                    </div>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "stateNode": <div>
                    <button
                      class="btn btn--inverted margin-right"
                      data-testid="allBtn"
                      type="button"
                    >
                      All
                    </button>
                  </div>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": "div",
                "expirationTime": 0,
                "firstEffect": null,
                "index": 1,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <div>
                      <Button
                        className="btn btn--inverted margin-right"
                        data-testid="allBtn"
                        onClick={[Function]}
                        type="button"
                      >
                        All
                      </Button>
                    </div>,
                    <div>
                      <Button
                        className="btn radius-top-left tag-one-inverted-coloring"
                        data-testid="tag-btn-one"
                        onClick={[Function]}
                        type="button"
                      >
                        one
                      </Button>
                      <Button
                        className="btn radius-bottom-right tag-two-inverted-coloring"
                        data-testid="tag-btn-two"
                        onClick={[Function]}
                        type="button"
                      >
                        two
                      </Button>
                    </div>,
                  ],
                  "className": "flex",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <div>
                      <Button
                        className="btn btn--inverted margin-right"
                        data-testid="allBtn"
                        onClick={[Function]}
                        type="button"
                      >
                        All
                      </Button>
                    </div>,
                    <div>
                      <Button
                        className="btn radius-top-left tag-one-inverted-coloring"
                        data-testid="tag-btn-one"
                        onClick={[Function]}
                        type="button"
                      >
                        one
                      </Button>
                      <Button
                        className="btn radius-bottom-right tag-two-inverted-coloring"
                        data-testid="tag-btn-two"
                        onClick={[Function]}
                        type="button"
                      >
                        two
                      </Button>
                    </div>,
                  ],
                  "className": "flex",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": <div
                  class="flex"
                >
                  <div>
                    <button
                      class="btn btn--inverted margin-right"
                      data-testid="allBtn"
                      type="button"
                    >
                      All
                    </button>
                  </div>
                  <div>
                    <button
                      class="btn radius-top-left tag-one-inverted-coloring"
                      data-testid="tag-btn-one"
                      type="button"
                    >
                      one
                    </button>
                    <button
                      class="btn radius-bottom-right tag-two-inverted-coloring"
                      data-testid="tag-btn-two"
                      type="button"
                    >
                      two
                    </button>
                  </div>
                </div>,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "div",
                "updateQueue": null,
              },
              "stateNode": <div
                class="flex flex--column"
              >
                <h6>
                  Tags
                </h6>
              </div>,
              "tag": 5,
              "treeBaseDuration": 0,
              "type": "div",
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 0,
            "elementType": "div",
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": Array [
                <div
                  className="flex flex--column"
                >
                  <h6>
                    Tags
                  </h6>
                </div>,
                <div
                  className="flex"
                >
                  <div>
                    <Button
                      className="btn btn--inverted margin-right"
                      data-testid="allBtn"
                      onClick={[Function]}
                      type="button"
                    >
                      All
                    </Button>
                  </div>
                  <div>
                    <Button
                      className="btn radius-top-left tag-one-inverted-coloring"
                      data-testid="tag-btn-one"
                      onClick={[Function]}
                      type="button"
                    >
                      one
                    </Button>
                    <Button
                      className="btn radius-bottom-right tag-two-inverted-coloring"
                      data-testid="tag-btn-two"
                      onClick={[Function]}
                      type="button"
                    >
                      two
                    </Button>
                  </div>
                </div>,
              ],
              "className": "container high-contrast-coloring margin-bottom radius ",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": Array [
                <div
                  className="flex flex--column"
                >
                  <h6>
                    Tags
                  </h6>
                </div>,
                <div
                  className="flex"
                >
                  <div>
                    <Button
                      className="btn btn--inverted margin-right"
                      data-testid="allBtn"
                      onClick={[Function]}
                      type="button"
                    >
                      All
                    </Button>
                  </div>
                  <div>
                    <Button
                      className="btn radius-top-left tag-one-inverted-coloring"
                      data-testid="tag-btn-one"
                      onClick={[Function]}
                      type="button"
                    >
                      one
                    </Button>
                    <Button
                      className="btn radius-bottom-right tag-two-inverted-coloring"
                      data-testid="tag-btn-two"
                      onClick={[Function]}
                      type="button"
                    >
                      two
                    </Button>
                  </div>
                </div>,
              ],
              "className": "container high-contrast-coloring margin-bottom radius ",
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": <div
              class="container high-contrast-coloring margin-bottom radius "
            >
              <div
                class="flex flex--column"
              >
                <h6>
                  Tags
                </h6>
              </div>
              <div
                class="flex"
              >
                <div>
                  <button
                    class="btn btn--inverted margin-right"
                    data-testid="allBtn"
                    type="button"
                  >
                    All
                  </button>
                </div>
                <div>
                  <button
                    class="btn radius-top-left tag-one-inverted-coloring"
                    data-testid="tag-btn-one"
                    type="button"
                  >
                    one
                  </button>
                  <button
                    class="btn radius-bottom-right tag-two-inverted-coloring"
                    data-testid="tag-btn-two"
                    type="button"
                  >
                    two
                  </button>
                </div>
              </div>
            </div>,
            "tag": 5,
            "treeBaseDuration": 0,
            "type": "div",
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "contextDependencies": null,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": <div
              className="flex"
            >
              <div>
                <Button
                  className="btn btn--inverted margin-right"
                  data-testid="allBtn"
                  onClick={[Function]}
                  type="button"
                >
                  All
                </Button>
              </div>
              <div>
                <Button
                  className="btn radius-top-left tag-one-inverted-coloring"
                  data-testid="tag-btn-one"
                  onClick={[Function]}
                  type="button"
                >
                  one
                </Button>
                <Button
                  className="btn radius-bottom-right tag-two-inverted-coloring"
                  data-testid="tag-btn-two"
                  onClick={[Function]}
                  type="button"
                >
                  two
                </Button>
              </div>
            </div>,
            "title": "Tags",
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": <div
              className="flex"
            >
              <div>
                <Button
                  className="btn btn--inverted margin-right"
                  data-testid="allBtn"
                  onClick={[Function]}
                  type="button"
                >
                  All
                </Button>
              </div>
              <div>
                <Button
                  className="btn radius-top-left tag-one-inverted-coloring"
                  data-testid="tag-btn-one"
                  onClick={[Function]}
                  type="button"
                >
                  one
                </Button>
                <Button
                  className="btn radius-bottom-right tag-two-inverted-coloring"
                  data-testid="tag-btn-two"
                  onClick={[Function]}
                  type="button"
                >
                  two
                </Button>
              </div>
            </div>,
            "title": "Tags",
          },
          "ref": null,
          "return": [Circular],
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": null,
          "tag": 0,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "childExpirationTime": 0,
        "contextDependencies": null,
        "effectTag": 1,
        "elementType": [Function],
        "expirationTime": 0,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": Object {
          "onSelectionChange": [MockFunction],
          "tags": Array [
            Object {
              "selected": false,
              "tag": "one",
              "text": "one",
            },
            Object {
              "selected": false,
              "tag": "two",
              "text": "two",
            },
          ],
        },
        "memoizedState": null,
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {
          "onSelectionChange": [MockFunction],
          "tags": Array [
            Object {
              "selected": false,
              "tag": "one",
              "text": "one",
            },
            Object {
              "selected": false,
              "tag": "two",
              "text": "two",
            },
          ],
        },
        "ref": null,
        "return": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 80,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "contextDependencies": null,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "onSelectionChange": [MockFunction],
              "tags": Array [
                Object {
                  "selected": false,
                  "tag": "one",
                  "text": "one",
                },
                Object {
                  "selected": false,
                  "tag": "two",
                  "text": "two",
                },
              ],
            },
            "wrappingComponentProps": null,
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {
              "onSelectionChange": [MockFunction],
              "tags": Array [
                Object {
                  "selected": false,
                  "tag": "one",
                  "text": "one",
                },
                Object {
                  "selected": false,
                  "tag": "two",
                  "text": "two",
                },
              ],
            },
            "wrappingComponentProps": null,
          },
          "mode": 0,
          "nextEffect": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 78,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 78,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1073741823,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="container high-contrast-coloring margin-bottom radius "
                  >
                    <div
                      class="flex flex--column"
                    >
                      <h6>
                        Tags
                      </h6>
                    </div>
                    <div
                      class="flex"
                    >
                      <div>
                        <button
                          class="btn btn--inverted margin-right"
                          data-testid="allBtn"
                          type="button"
                        >
                          All
                        </button>
                      </div>
                      <div>
                        <button
                          class="btn radius-top-left tag-one-inverted-coloring"
                          data-testid="tag-btn-one"
                          type="button"
                        >
                          one
                        </button>
                        <button
                          class="btn radius-bottom-right tag-two-inverted-coloring"
                          data-testid="tag-btn-two"
                          type="button"
                        >
                          two
                        </button>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 17,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "onSelectionChange": [MockFunction],
                          "tags": Array [
                            Object {
                              "selected": false,
                              "tag": "one",
                              "text": "one",
                            },
                            Object {
                              "selected": false,
                              "tag": "two",
                              "text": "two",
                            },
                          ],
                        }
                      }
                      wrappingComponentProps={null}
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "onSelectionChange": [MockFunction],
                          "tags": Array [
                            Object {
                              "selected": false,
                              "tag": "one",
                              "text": "one",
                            },
                            Object {
                              "selected": false,
                              "tag": "two",
                              "text": "two",
                            },
                          ],
                        }
                      }
                      wrappingComponentProps={null}
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "onSelectionChange": [MockFunction],
                    "tags": Array [
                      Object {
                        "selected": false,
                        "tag": "one",
                        "text": "one",
                      },
                      Object {
                        "selected": false,
                        "tag": "two",
                        "text": "two",
                      },
                    ],
                  }
                }
                wrappingComponentProps={null}
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                  class="container high-contrast-coloring margin-bottom radius "
                >
                  <div
                    class="flex flex--column"
                  >
                    <h6>
                      Tags
                    </h6>
                  </div>
                  <div
                    class="flex"
                  >
                    <div>
                      <button
                        class="btn btn--inverted margin-right"
                        data-testid="allBtn"
                        type="button"
                      >
                        All
                      </button>
                    </div>
                    <div>
                      <button
                        class="btn radius-top-left tag-one-inverted-coloring"
                        data-testid="tag-btn-one"
                        type="button"
                      >
                        one
                      </button>
                      <button
                        class="btn radius-bottom-right tag-two-inverted-coloring"
                        data-testid="tag-btn-two"
                        type="button"
                      >
                        two
                      </button>
                    </div>
                  </div>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 17,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "pingCache": null,
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "onSelectionChange": [MockFunction],
                      "tags": Array [
                        Object {
                          "selected": false,
                          "tag": "one",
                          "text": "one",
                        },
                        Object {
                          "selected": false,
                          "tag": "two",
                          "text": "two",
                        },
                      ],
                    }
                  }
                  wrappingComponentProps={null}
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "onSelectionChange": [MockFunction],
              "tags": Array [
                Object {
                  "selected": false,
                  "tag": "one",
                  "text": "one",
                },
                Object {
                  "selected": false,
                  "tag": "two",
                  "text": "two",
                },
              ],
            },
            "wrappingComponentProps": null,
          },
          "ref": null,
          "return": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 78,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 78,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1073741823,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="container high-contrast-coloring margin-bottom radius "
                  >
                    <div
                      class="flex flex--column"
                    >
                      <h6>
                        Tags
                      </h6>
                    </div>
                    <div
                      class="flex"
                    >
                      <div>
                        <button
                          class="btn btn--inverted margin-right"
                          data-testid="allBtn"
                          type="button"
                        >
                          All
                        </button>
                      </div>
                      <div>
                        <button
                          class="btn radius-top-left tag-one-inverted-coloring"
                          data-testid="tag-btn-one"
                          type="button"
                        >
                          one
                        </button>
                        <button
                          class="btn radius-bottom-right tag-two-inverted-coloring"
                          data-testid="tag-btn-two"
                          type="button"
                        >
                          two
                        </button>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 17,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "onSelectionChange": [MockFunction],
                          "tags": Array [
                            Object {
                              "selected": false,
                              "tag": "one",
                              "text": "one",
                            },
                            Object {
                              "selected": false,
                              "tag": "two",
                              "text": "two",
                            },
                          ],
                        }
                      }
                      wrappingComponentProps={null}
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "onSelectionChange": [MockFunction],
                          "tags": Array [
                            Object {
                              "selected": false,
                              "tag": "one",
                              "text": "one",
                            },
                            Object {
                              "selected": false,
                              "tag": "two",
                              "text": "two",
                            },
                          ],
                        }
                      }
                      wrappingComponentProps={null}
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "onSelectionChange": [MockFunction],
                    "tags": Array [
                      Object {
                        "selected": false,
                        "tag": "one",
                        "text": "one",
                      },
                      Object {
                        "selected": false,
                        "tag": "two",
                        "text": "two",
                      },
                    ],
                  }
                }
                wrappingComponentProps={null}
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                  class="container high-contrast-coloring margin-bottom radius "
                >
                  <div
                    class="flex flex--column"
                  >
                    <h6>
                      Tags
                    </h6>
                  </div>
                  <div
                    class="flex"
                  >
                    <div>
                      <button
                        class="btn btn--inverted margin-right"
                        data-testid="allBtn"
                        type="button"
                      >
                        All
                      </button>
                    </div>
                    <div>
                      <button
                        class="btn radius-top-left tag-one-inverted-coloring"
                        data-testid="tag-btn-one"
                        type="button"
                      >
                        one
                      </button>
                      <button
                        class="btn radius-bottom-right tag-two-inverted-coloring"
                        data-testid="tag-btn-two"
                        type="button"
                      >
                        two
                      </button>
                    </div>
                  </div>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 17,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "pingCache": null,
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "onSelectionChange": [MockFunction],
                      "tags": Array [
                        Object {
                          "selected": false,
                          "tag": "one",
                          "text": "one",
                        },
                        Object {
                          "selected": false,
                          "tag": "two",
                          "text": "two",
                        },
                      ],
                    }
                  }
                  wrappingComponentProps={null}
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "onSelectionChange": [MockFunction],
                "tags": Array [
                  Object {
                    "selected": false,
                    "tag": "one",
                    "text": "one",
                  },
                  Object {
                    "selected": false,
                    "tag": "two",
                    "text": "two",
                  },
                ],
              },
              "wrappingComponentProps": null,
            },
            "refs": Object {},
            "rootFinderInstance": null,
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "onSelectionChange": [MockFunction],
                "tags": Array [
                  Object {
                    "selected": false,
                    "tag": "one",
                    "text": "one",
                  },
                  Object {
                    "selected": false,
                    "tag": "two",
                    "text": "two",
                  },
                ],
              },
              "wrappingComponentProps": null,
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "selfBaseDuration": 0,
        "sibling": null,
        "stateNode": [Circular],
        "tag": 1,
        "treeBaseDuration": 0,
        "type": [Function],
        "updateQueue": null,
      },
      "_reactInternalInstance": Object {},
      "areAllSelected": [Function],
      "context": Object {},
      "props": Object {
        "onSelectionChange": [MockFunction],
        "tags": Array [
          Object {
            "selected": false,
            "tag": "one",
            "text": "one",
          },
          Object {
            "selected": false,
            "tag": "two",
            "text": "two",
          },
        ],
      },
      "refs": Object {},
      "state": null,
      "toggleAll": [Function],
      "toggleOne": [Function],
      "updater": Object {
        "enqueueForceUpdate": [Function],
        "enqueueReplaceState": [Function],
        "enqueueSetState": [Function],
        "isMounted": [Function],
      },
    },
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "onSelectionChange": [MockFunction],
      "tags": Array [
        Object {
          "selected": false,
          "tag": "one",
          "text": "one",
        },
        Object {
          "selected": false,
          "tag": "two",
          "text": "two",
        },
      ],
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <div
          className="flex"
        >
          <div>
            <Button
              className="btn btn--inverted margin-right"
              data-testid="allBtn"
              onClick={[Function]}
              type="button"
            >
              All
            </Button>
          </div>
          <div>
            <Button
              className="btn radius-top-left tag-one-inverted-coloring"
              data-testid="tag-btn-one"
              onClick={[Function]}
              type="button"
            >
              one
            </Button>
            <Button
              className="btn radius-bottom-right tag-two-inverted-coloring"
              data-testid="tag-btn-two"
              onClick={[Function]}
              type="button"
            >
              two
            </Button>
          </div>
        </div>,
        "title": "Tags",
      },
      "ref": null,
      "rendered": Object {
        "instance": <div
          class="container high-contrast-coloring margin-bottom radius "
        >
          <div
            class="flex flex--column"
          >
            <h6>
              Tags
            </h6>
          </div>
          <div
            class="flex"
          >
            <div>
              <button
                class="btn btn--inverted margin-right"
                data-testid="allBtn"
                type="button"
              >
                All
              </button>
            </div>
            <div>
              <button
                class="btn radius-top-left tag-one-inverted-coloring"
                data-testid="tag-btn-one"
                type="button"
              >
                one
              </button>
              <button
                class="btn radius-bottom-right tag-two-inverted-coloring"
                data-testid="tag-btn-two"
                type="button"
              >
                two
              </button>
            </div>
          </div>
        </div>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="flex flex--column"
            >
              <h6>
                Tags
              </h6>
            </div>,
            <div
              className="flex"
            >
              <div>
                <Button
                  className="btn btn--inverted margin-right"
                  data-testid="allBtn"
                  onClick={[Function]}
                  type="button"
                >
                  All
                </Button>
              </div>
              <div>
                <Button
                  className="btn radius-top-left tag-one-inverted-coloring"
                  data-testid="tag-btn-one"
                  onClick={[Function]}
                  type="button"
                >
                  one
                </Button>
                <Button
                  className="btn radius-bottom-right tag-two-inverted-coloring"
                  data-testid="tag-btn-two"
                  onClick={[Function]}
                  type="button"
                >
                  two
                </Button>
              </div>
            </div>,
          ],
          "className": "container high-contrast-coloring margin-bottom radius ",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <div
              class="flex flex--column"
            >
              <h6>
                Tags
              </h6>
            </div>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h6>
                  Tags
                </h6>,
                undefined,
              ],
              "className": "flex flex--column",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <h6>
                  Tags
                </h6>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Tags",
                },
                "ref": null,
                "rendered": Array [
                  "Tags",
                ],
                "type": "h6",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": <div
              class="flex"
            >
              <div>
                <button
                  class="btn btn--inverted margin-right"
                  data-testid="allBtn"
                  type="button"
                >
                  All
                </button>
              </div>
              <div>
                <button
                  class="btn radius-top-left tag-one-inverted-coloring"
                  data-testid="tag-btn-one"
                  type="button"
                >
                  one
                </button>
                <button
                  class="btn radius-bottom-right tag-two-inverted-coloring"
                  data-testid="tag-btn-two"
                  type="button"
                >
                  two
                </button>
              </div>
            </div>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div>
                  <Button
                    className="btn btn--inverted margin-right"
                    data-testid="allBtn"
                    onClick={[Function]}
                    type="button"
                  >
                    All
                  </Button>
                </div>,
                <div>
                  <Button
                    className="btn radius-top-left tag-one-inverted-coloring"
                    data-testid="tag-btn-one"
                    onClick={[Function]}
                    type="button"
                  >
                    one
                  </Button>
                  <Button
                    className="btn radius-bottom-right tag-two-inverted-coloring"
                    data-testid="tag-btn-two"
                    onClick={[Function]}
                    type="button"
                  >
                    two
                  </Button>
                </div>,
              ],
              "className": "flex",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <div>
                  <button
                    class="btn btn--inverted margin-right"
                    data-testid="allBtn"
                    type="button"
                  >
                    All
                  </button>
                </div>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Button
                    className="btn btn--inverted margin-right"
                    data-testid="allBtn"
                    onClick={[Function]}
                    type="button"
                  >
                    All
                  </Button>,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": "All",
                      "className": "btn btn--inverted margin-right",
                      "data-testid": "allBtn",
                      "onClick": [Function],
                      "type": "button",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": <button
                        class="btn btn--inverted margin-right"
                        data-testid="allBtn"
                        type="button"
                      >
                        All
                      </button>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "All",
                        "className": "btn btn--inverted margin-right",
                        "data-testid": "allBtn",
                        "onClick": [Function],
                        "type": "button",
                      },
                      "ref": null,
                      "rendered": Array [
                        "All",
                      ],
                      "type": "button",
                    },
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": <div>
                  <button
                    class="btn radius-top-left tag-one-inverted-coloring"
                    data-testid="tag-btn-one"
                    type="button"
                  >
                    one
                  </button>
                  <button
                    class="btn radius-bottom-right tag-two-inverted-coloring"
                    data-testid="tag-btn-two"
                    type="button"
                  >
                    two
                  </button>
                </div>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <Button
                      className="btn radius-top-left tag-one-inverted-coloring"
                      data-testid="tag-btn-one"
                      onClick={[Function]}
                      type="button"
                    >
                      one
                    </Button>,
                    <Button
                      className="btn radius-bottom-right tag-two-inverted-coloring"
                      data-testid="tag-btn-two"
                      onClick={[Function]}
                      type="button"
                    >
                      two
                    </Button>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "tag-filter-one-0",
                    "nodeType": "function",
                    "props": Object {
                      "children": "one",
                      "className": "btn radius-top-left tag-one-inverted-coloring",
                      "data-testid": "tag-btn-one",
                      "onClick": [Function],
                      "type": "button",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": <button
                        class="btn radius-top-left tag-one-inverted-coloring"
                        data-testid="tag-btn-one"
                        type="button"
                      >
                        one
                      </button>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "one",
                        "className": "btn radius-top-left tag-one-inverted-coloring",
                        "data-testid": "tag-btn-one",
                        "onClick": [Function],
                        "type": "button",
                      },
                      "ref": null,
                      "rendered": Array [
                        "one",
                      ],
                      "type": "button",
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "tag-filter-two-1",
                    "nodeType": "function",
                    "props": Object {
                      "children": "two",
                      "className": "btn radius-bottom-right tag-two-inverted-coloring",
                      "data-testid": "tag-btn-two",
                      "onClick": [Function],
                      "type": "button",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": <button
                        class="btn radius-bottom-right tag-two-inverted-coloring"
                        data-testid="tag-btn-two"
                        type="button"
                      >
                        two
                      </button>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "two",
                        "className": "btn radius-bottom-right tag-two-inverted-coloring",
                        "data-testid": "tag-btn-two",
                        "onClick": [Function],
                        "type": "button",
                      },
                      "ref": null,
                      "rendered": Array [
                        "two",
                      ],
                      "type": "button",
                    },
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": TagFilter {
        "_reactInternalFiber": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 81,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 80,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "onSelectionChange": [MockFunction],
                "tags": Array [
                  Object {
                    "selected": false,
                    "tag": "one",
                    "text": "one",
                  },
                  Object {
                    "selected": false,
                    "tag": "two",
                    "text": "two",
                  },
                ],
              },
              "wrappingComponentProps": null,
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "onSelectionChange": [MockFunction],
                "tags": Array [
                  Object {
                    "selected": false,
                    "tag": "one",
                    "text": "one",
                  },
                  Object {
                    "selected": false,
                    "tag": "two",
                    "text": "two",
                  },
                ],
              },
              "wrappingComponentProps": null,
            },
            "mode": 0,
            "nextEffect": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 78,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 78,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1073741823,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                      class="container high-contrast-coloring margin-bottom radius "
                    >
                      <div
                        class="flex flex--column"
                      >
                        <h6>
                          Tags
                        </h6>
                      </div>
                      <div
                        class="flex"
                      >
                        <div>
                          <button
                            class="btn btn--inverted margin-right"
                            data-testid="allBtn"
                            type="button"
                          >
                            All
                          </button>
                        </div>
                        <div>
                          <button
                            class="btn radius-top-left tag-one-inverted-coloring"
                            data-testid="tag-btn-one"
                            type="button"
                          >
                            one
                          </button>
                          <button
                            class="btn radius-bottom-right tag-two-inverted-coloring"
                            data-testid="tag-btn-two"
                            type="button"
                          >
                            two
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 17,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "pingCache": null,
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "onSelectionChange": [MockFunction],
                            "tags": Array [
                              Object {
                                "selected": false,
                                "tag": "one",
                                "text": "one",
                              },
                              Object {
                                "selected": false,
                                "tag": "two",
                                "text": "two",
                              },
                            ],
                          }
                        }
                        wrappingComponentProps={null}
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "onSelectionChange": [MockFunction],
                            "tags": Array [
                              Object {
                                "selected": false,
                                "tag": "one",
                                "text": "one",
                              },
                              Object {
                                "selected": false,
                                "tag": "two",
                                "text": "two",
                              },
                            ],
                          }
                        }
                        wrappingComponentProps={null}
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "onSelectionChange": [MockFunction],
                      "tags": Array [
                        Object {
                          "selected": false,
                          "tag": "one",
                          "text": "one",
                        },
                        Object {
                          "selected": false,
                          "tag": "two",
                          "text": "two",
                        },
                      ],
                    }
                  }
                  wrappingComponentProps={null}
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="container high-contrast-coloring margin-bottom radius "
                  >
                    <div
                      class="flex flex--column"
                    >
                      <h6>
                        Tags
                      </h6>
                    </div>
                    <div
                      class="flex"
                    >
                      <div>
                        <button
                          class="btn btn--inverted margin-right"
                          data-testid="allBtn"
                          type="button"
                        >
                          All
                        </button>
                      </div>
                      <div>
                        <button
                          class="btn radius-top-left tag-one-inverted-coloring"
                          data-testid="tag-btn-one"
                          type="button"
                        >
                          one
                        </button>
                        <button
                          class="btn radius-bottom-right tag-two-inverted-coloring"
                          data-testid="tag-btn-two"
                          type="button"
                        >
                          two
                        </button>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 17,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "onSelectionChange": [MockFunction],
                        "tags": Array [
                          Object {
                            "selected": false,
                            "tag": "one",
                            "text": "one",
                          },
                          Object {
                            "selected": false,
                            "tag": "two",
                            "text": "two",
                          },
                        ],
                      }
                    }
                    wrappingComponentProps={null}
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "onSelectionChange": [MockFunction],
                "tags": Array [
                  Object {
                    "selected": false,
                    "tag": "one",
                    "text": "one",
                  },
                  Object {
                    "selected": false,
                    "tag": "two",
                    "text": "two",
                  },
                ],
              },
              "wrappingComponentProps": null,
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 78,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 78,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1073741823,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                      class="container high-contrast-coloring margin-bottom radius "
                    >
                      <div
                        class="flex flex--column"
                      >
                        <h6>
                          Tags
                        </h6>
                      </div>
                      <div
                        class="flex"
                      >
                        <div>
                          <button
                            class="btn btn--inverted margin-right"
                            data-testid="allBtn"
                            type="button"
                          >
                            All
                          </button>
                        </div>
                        <div>
                          <button
                            class="btn radius-top-left tag-one-inverted-coloring"
                            data-testid="tag-btn-one"
                            type="button"
                          >
                            one
                          </button>
                          <button
                            class="btn radius-bottom-right tag-two-inverted-coloring"
                            data-testid="tag-btn-two"
                            type="button"
                          >
                            two
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 17,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "pingCache": null,
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "onSelectionChange": [MockFunction],
                            "tags": Array [
                              Object {
                                "selected": false,
                                "tag": "one",
                                "text": "one",
                              },
                              Object {
                                "selected": false,
                                "tag": "two",
                                "text": "two",
                              },
                            ],
                          }
                        }
                        wrappingComponentProps={null}
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "onSelectionChange": [MockFunction],
                            "tags": Array [
                              Object {
                                "selected": false,
                                "tag": "one",
                                "text": "one",
                              },
                              Object {
                                "selected": false,
                                "tag": "two",
                                "text": "two",
                              },
                            ],
                          }
                        }
                        wrappingComponentProps={null}
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "onSelectionChange": [MockFunction],
                      "tags": Array [
                        Object {
                          "selected": false,
                          "tag": "one",
                          "text": "one",
                        },
                        Object {
                          "selected": false,
                          "tag": "two",
                          "text": "two",
                        },
                      ],
                    }
                  }
                  wrappingComponentProps={null}
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="container high-contrast-coloring margin-bottom radius "
                  >
                    <div
                      class="flex flex--column"
                    >
                      <h6>
                        Tags
                      </h6>
                    </div>
                    <div
                      class="flex"
                    >
                      <div>
                        <button
                          class="btn btn--inverted margin-right"
                          data-testid="allBtn"
                          type="button"
                        >
                          All
                        </button>
                      </div>
                      <div>
                        <button
                          class="btn radius-top-left tag-one-inverted-coloring"
                          data-testid="tag-btn-one"
                          type="button"
                        >
                          one
                        </button>
                        <button
                          class="btn radius-bottom-right tag-two-inverted-coloring"
                          data-testid="tag-btn-two"
                          type="button"
                        >
                          two
                        </button>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 17,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "onSelectionChange": [MockFunction],
                        "tags": Array [
                          Object {
                            "selected": false,
                            "tag": "one",
                            "text": "one",
                          },
                          Object {
                            "selected": false,
                            "tag": "two",
                            "text": "two",
                          },
                        ],
                      }
                    }
                    wrappingComponentProps={null}
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "onSelectionChange": [MockFunction],
                  "tags": Array [
                    Object {
                      "selected": false,
                      "tag": "one",
                      "text": "one",
                    },
                    Object {
                      "selected": false,
                      "tag": "two",
                      "text": "two",
                    },
                  ],
                },
                "wrappingComponentProps": null,
              },
              "refs": Object {},
              "rootFinderInstance": null,
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "onSelectionChange": [MockFunction],
                  "tags": Array [
                    Object {
                      "selected": false,
                      "tag": "one",
                      "text": "one",
                    },
                    Object {
                      "selected": false,
                      "tag": "two",
                      "text": "two",
                    },
                  ],
                },
                "wrappingComponentProps": null,
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 82,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\TagFilter\\\\TagFilter.js",
              "lineNumber": 56,
            },
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 83,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\Card\\\\Card.js",
                "lineNumber": 16,
              },
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 84,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\Card\\\\Card.js",
                  "lineNumber": 18,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 86,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\Card\\\\Card.js",
                    "lineNumber": 19,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "contextDependencies": null,
                  "effectTag": 0,
                  "elementType": "h6",
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "Tags",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "Tags",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": <h6>
                    Tags
                  </h6>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "h6",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": "div",
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <h6>
                      Tags
                    </h6>,
                    undefined,
                  ],
                  "className": "flex flex--column",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <h6>
                      Tags
                    </h6>,
                    undefined,
                  ],
                  "className": "flex flex--column",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 85,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\TagFilter\\\\TagFilter.js",
                    "lineNumber": 57,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 87,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\TagFilter\\\\TagFilter.js",
                      "lineNumber": 58,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 89,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\TagFilter\\\\TagFilter.js",
                        "lineNumber": 59,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 90,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\Button\\\\Button.js",
                          "lineNumber": 3,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 0,
                        "elementType": "button",
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "All",
                          "className": "btn btn--inverted margin-right",
                          "data-testid": "allBtn",
                          "onClick": [Function],
                          "type": "button",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "All",
                          "className": "btn btn--inverted margin-right",
                          "data-testid": "allBtn",
                          "onClick": [Function],
                          "type": "button",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <button
                          class="btn btn--inverted margin-right"
                          data-testid="allBtn"
                          type="button"
                        >
                          All
                        </button>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "button",
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 1,
                      "elementType": [Function],
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "All",
                        "className": "btn btn--inverted margin-right",
                        "data-testid": "allBtn",
                        "onClick": [Function],
                        "type": "button",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "All",
                        "className": "btn btn--inverted margin-right",
                        "data-testid": "allBtn",
                        "onClick": [Function],
                        "type": "button",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": null,
                      "tag": 0,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 0,
                    "elementType": "div",
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": <Button
                        className="btn btn--inverted margin-right"
                        data-testid="allBtn"
                        onClick={[Function]}
                        type="button"
                      >
                        All
                      </Button>,
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <Button
                        className="btn btn--inverted margin-right"
                        data-testid="allBtn"
                        onClick={[Function]}
                        type="button"
                      >
                        All
                      </Button>,
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 88,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\TagFilter\\\\TagFilter.js",
                        "lineNumber": 68,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 91,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\TagFilter\\\\TagFilter.js",
                          "lineNumber": 82,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 93,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\Button\\\\Button.js",
                            "lineNumber": 3,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "contextDependencies": null,
                          "effectTag": 0,
                          "elementType": "button",
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "one",
                            "className": "btn radius-top-left tag-one-inverted-coloring",
                            "data-testid": "tag-btn-one",
                            "onClick": [Function],
                            "type": "button",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "one",
                            "className": "btn radius-top-left tag-one-inverted-coloring",
                            "data-testid": "tag-btn-one",
                            "onClick": [Function],
                            "type": "button",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <button
                            class="btn radius-top-left tag-one-inverted-coloring"
                            data-testid="tag-btn-one"
                            type="button"
                          >
                            one
                          </button>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "button",
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 1,
                        "elementType": [Function],
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": "tag-filter-one-0",
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "one",
                          "className": "btn radius-top-left tag-one-inverted-coloring",
                          "data-testid": "tag-btn-one",
                          "onClick": [Function],
                          "type": "button",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "one",
                          "className": "btn radius-top-left tag-one-inverted-coloring",
                          "data-testid": "tag-btn-one",
                          "onClick": [Function],
                          "type": "button",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 92,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\TagFilter\\\\TagFilter.js",
                            "lineNumber": 82,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 94,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\Button\\\\Button.js",
                              "lineNumber": 3,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "contextDependencies": null,
                            "effectTag": 0,
                            "elementType": "button",
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "two",
                              "className": "btn radius-bottom-right tag-two-inverted-coloring",
                              "data-testid": "tag-btn-two",
                              "onClick": [Function],
                              "type": "button",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": "two",
                              "className": "btn radius-bottom-right tag-two-inverted-coloring",
                              "data-testid": "tag-btn-two",
                              "onClick": [Function],
                              "type": "button",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <button
                              class="btn radius-bottom-right tag-two-inverted-coloring"
                              data-testid="tag-btn-two"
                              type="button"
                            >
                              two
                            </button>,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "button",
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "contextDependencies": null,
                          "effectTag": 1,
                          "elementType": [Function],
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 1,
                          "key": "tag-filter-two-1",
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "two",
                            "className": "btn radius-bottom-right tag-two-inverted-coloring",
                            "data-testid": "tag-btn-two",
                            "onClick": [Function],
                            "type": "button",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "two",
                            "className": "btn radius-bottom-right tag-two-inverted-coloring",
                            "data-testid": "tag-btn-two",
                            "onClick": [Function],
                            "type": "button",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": null,
                          "tag": 0,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "stateNode": null,
                        "tag": 0,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 0,
                      "elementType": "div",
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 1,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <Button
                            className="btn radius-top-left tag-one-inverted-coloring"
                            data-testid="tag-btn-one"
                            onClick={[Function]}
                            type="button"
                          >
                            one
                          </Button>,
                          <Button
                            className="btn radius-bottom-right tag-two-inverted-coloring"
                            data-testid="tag-btn-two"
                            onClick={[Function]}
                            type="button"
                          >
                            two
                          </Button>,
                        ],
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <Button
                            className="btn radius-top-left tag-one-inverted-coloring"
                            data-testid="tag-btn-one"
                            onClick={[Function]}
                            type="button"
                          >
                            one
                          </Button>,
                          <Button
                            className="btn radius-bottom-right tag-two-inverted-coloring"
                            data-testid="tag-btn-two"
                            onClick={[Function]}
                            type="button"
                          >
                            two
                          </Button>,
                        ],
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <div>
                        <button
                          class="btn radius-top-left tag-one-inverted-coloring"
                          data-testid="tag-btn-one"
                          type="button"
                        >
                          one
                        </button>
                        <button
                          class="btn radius-bottom-right tag-two-inverted-coloring"
                          data-testid="tag-btn-two"
                          type="button"
                        >
                          two
                        </button>
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "stateNode": <div>
                      <button
                        class="btn btn--inverted margin-right"
                        data-testid="allBtn"
                        type="button"
                      >
                        All
                      </button>
                    </div>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "contextDependencies": null,
                  "effectTag": 0,
                  "elementType": "div",
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 1,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <div>
                        <Button
                          className="btn btn--inverted margin-right"
                          data-testid="allBtn"
                          onClick={[Function]}
                          type="button"
                        >
                          All
                        </Button>
                      </div>,
                      <div>
                        <Button
                          className="btn radius-top-left tag-one-inverted-coloring"
                          data-testid="tag-btn-one"
                          onClick={[Function]}
                          type="button"
                        >
                          one
                        </Button>
                        <Button
                          className="btn radius-bottom-right tag-two-inverted-coloring"
                          data-testid="tag-btn-two"
                          onClick={[Function]}
                          type="button"
                        >
                          two
                        </Button>
                      </div>,
                    ],
                    "className": "flex",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <div>
                        <Button
                          className="btn btn--inverted margin-right"
                          data-testid="allBtn"
                          onClick={[Function]}
                          type="button"
                        >
                          All
                        </Button>
                      </div>,
                      <div>
                        <Button
                          className="btn radius-top-left tag-one-inverted-coloring"
                          data-testid="tag-btn-one"
                          onClick={[Function]}
                          type="button"
                        >
                          one
                        </Button>
                        <Button
                          className="btn radius-bottom-right tag-two-inverted-coloring"
                          data-testid="tag-btn-two"
                          onClick={[Function]}
                          type="button"
                        >
                          two
                        </Button>
                      </div>,
                    ],
                    "className": "flex",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": <div
                    class="flex"
                  >
                    <div>
                      <button
                        class="btn btn--inverted margin-right"
                        data-testid="allBtn"
                        type="button"
                      >
                        All
                      </button>
                    </div>
                    <div>
                      <button
                        class="btn radius-top-left tag-one-inverted-coloring"
                        data-testid="tag-btn-one"
                        type="button"
                      >
                        one
                      </button>
                      <button
                        class="btn radius-bottom-right tag-two-inverted-coloring"
                        data-testid="tag-btn-two"
                        type="button"
                      >
                        two
                      </button>
                    </div>
                  </div>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "stateNode": <div
                  class="flex flex--column"
                >
                  <h6>
                    Tags
                  </h6>
                </div>,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "div",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": "div",
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <div
                    className="flex flex--column"
                  >
                    <h6>
                      Tags
                    </h6>
                  </div>,
                  <div
                    className="flex"
                  >
                    <div>
                      <Button
                        className="btn btn--inverted margin-right"
                        data-testid="allBtn"
                        onClick={[Function]}
                        type="button"
                      >
                        All
                      </Button>
                    </div>
                    <div>
                      <Button
                        className="btn radius-top-left tag-one-inverted-coloring"
                        data-testid="tag-btn-one"
                        onClick={[Function]}
                        type="button"
                      >
                        one
                      </Button>
                      <Button
                        className="btn radius-bottom-right tag-two-inverted-coloring"
                        data-testid="tag-btn-two"
                        onClick={[Function]}
                        type="button"
                      >
                        two
                      </Button>
                    </div>
                  </div>,
                ],
                "className": "container high-contrast-coloring margin-bottom radius ",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  <div
                    className="flex flex--column"
                  >
                    <h6>
                      Tags
                    </h6>
                  </div>,
                  <div
                    className="flex"
                  >
                    <div>
                      <Button
                        className="btn btn--inverted margin-right"
                        data-testid="allBtn"
                        onClick={[Function]}
                        type="button"
                      >
                        All
                      </Button>
                    </div>
                    <div>
                      <Button
                        className="btn radius-top-left tag-one-inverted-coloring"
                        data-testid="tag-btn-one"
                        onClick={[Function]}
                        type="button"
                      >
                        one
                      </Button>
                      <Button
                        className="btn radius-bottom-right tag-two-inverted-coloring"
                        data-testid="tag-btn-two"
                        onClick={[Function]}
                        type="button"
                      >
                        two
                      </Button>
                    </div>
                  </div>,
                ],
                "className": "container high-contrast-coloring margin-bottom radius ",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": <div
                class="container high-contrast-coloring margin-bottom radius "
              >
                <div
                  class="flex flex--column"
                >
                  <h6>
                    Tags
                  </h6>
                </div>
                <div
                  class="flex"
                >
                  <div>
                    <button
                      class="btn btn--inverted margin-right"
                      data-testid="allBtn"
                      type="button"
                    >
                      All
                    </button>
                  </div>
                  <div>
                    <button
                      class="btn radius-top-left tag-one-inverted-coloring"
                      data-testid="tag-btn-one"
                      type="button"
                    >
                      one
                    </button>
                    <button
                      class="btn radius-bottom-right tag-two-inverted-coloring"
                      data-testid="tag-btn-two"
                      type="button"
                    >
                      two
                    </button>
                  </div>
                </div>
              </div>,
              "tag": 5,
              "treeBaseDuration": 0,
              "type": "div",
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": <div
                className="flex"
              >
                <div>
                  <Button
                    className="btn btn--inverted margin-right"
                    data-testid="allBtn"
                    onClick={[Function]}
                    type="button"
                  >
                    All
                  </Button>
                </div>
                <div>
                  <Button
                    className="btn radius-top-left tag-one-inverted-coloring"
                    data-testid="tag-btn-one"
                    onClick={[Function]}
                    type="button"
                  >
                    one
                  </Button>
                  <Button
                    className="btn radius-bottom-right tag-two-inverted-coloring"
                    data-testid="tag-btn-two"
                    onClick={[Function]}
                    type="button"
                  >
                    two
                  </Button>
                </div>
              </div>,
              "title": "Tags",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": <div
                className="flex"
              >
                <div>
                  <Button
                    className="btn btn--inverted margin-right"
                    data-testid="allBtn"
                    onClick={[Function]}
                    type="button"
                  >
                    All
                  </Button>
                </div>
                <div>
                  <Button
                    className="btn radius-top-left tag-one-inverted-coloring"
                    data-testid="tag-btn-one"
                    onClick={[Function]}
                    type="button"
                  >
                    one
                  </Button>
                  <Button
                    className="btn radius-bottom-right tag-two-inverted-coloring"
                    data-testid="tag-btn-two"
                    onClick={[Function]}
                    type="button"
                  >
                    two
                  </Button>
                </div>
              </div>,
              "title": "Tags",
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 0,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "contextDependencies": null,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "onSelectionChange": [MockFunction],
            "tags": Array [
              Object {
                "selected": false,
                "tag": "one",
                "text": "one",
              },
              Object {
                "selected": false,
                "tag": "two",
                "text": "two",
              },
            ],
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "onSelectionChange": [MockFunction],
            "tags": Array [
              Object {
                "selected": false,
                "tag": "one",
                "text": "one",
              },
              Object {
                "selected": false,
                "tag": "two",
                "text": "two",
              },
            ],
          },
          "ref": null,
          "return": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 80,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "onSelectionChange": [MockFunction],
                "tags": Array [
                  Object {
                    "selected": false,
                    "tag": "one",
                    "text": "one",
                  },
                  Object {
                    "selected": false,
                    "tag": "two",
                    "text": "two",
                  },
                ],
              },
              "wrappingComponentProps": null,
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "onSelectionChange": [MockFunction],
                "tags": Array [
                  Object {
                    "selected": false,
                    "tag": "one",
                    "text": "one",
                  },
                  Object {
                    "selected": false,
                    "tag": "two",
                    "text": "two",
                  },
                ],
              },
              "wrappingComponentProps": null,
            },
            "mode": 0,
            "nextEffect": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 78,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 78,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1073741823,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                      class="container high-contrast-coloring margin-bottom radius "
                    >
                      <div
                        class="flex flex--column"
                      >
                        <h6>
                          Tags
                        </h6>
                      </div>
                      <div
                        class="flex"
                      >
                        <div>
                          <button
                            class="btn btn--inverted margin-right"
                            data-testid="allBtn"
                            type="button"
                          >
                            All
                          </button>
                        </div>
                        <div>
                          <button
                            class="btn radius-top-left tag-one-inverted-coloring"
                            data-testid="tag-btn-one"
                            type="button"
                          >
                            one
                          </button>
                          <button
                            class="btn radius-bottom-right tag-two-inverted-coloring"
                            data-testid="tag-btn-two"
                            type="button"
                          >
                            two
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 17,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "pingCache": null,
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "onSelectionChange": [MockFunction],
                            "tags": Array [
                              Object {
                                "selected": false,
                                "tag": "one",
                                "text": "one",
                              },
                              Object {
                                "selected": false,
                                "tag": "two",
                                "text": "two",
                              },
                            ],
                          }
                        }
                        wrappingComponentProps={null}
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "onSelectionChange": [MockFunction],
                            "tags": Array [
                              Object {
                                "selected": false,
                                "tag": "one",
                                "text": "one",
                              },
                              Object {
                                "selected": false,
                                "tag": "two",
                                "text": "two",
                              },
                            ],
                          }
                        }
                        wrappingComponentProps={null}
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "onSelectionChange": [MockFunction],
                      "tags": Array [
                        Object {
                          "selected": false,
                          "tag": "one",
                          "text": "one",
                        },
                        Object {
                          "selected": false,
                          "tag": "two",
                          "text": "two",
                        },
                      ],
                    }
                  }
                  wrappingComponentProps={null}
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="container high-contrast-coloring margin-bottom radius "
                  >
                    <div
                      class="flex flex--column"
                    >
                      <h6>
                        Tags
                      </h6>
                    </div>
                    <div
                      class="flex"
                    >
                      <div>
                        <button
                          class="btn btn--inverted margin-right"
                          data-testid="allBtn"
                          type="button"
                        >
                          All
                        </button>
                      </div>
                      <div>
                        <button
                          class="btn radius-top-left tag-one-inverted-coloring"
                          data-testid="tag-btn-one"
                          type="button"
                        >
                          one
                        </button>
                        <button
                          class="btn radius-bottom-right tag-two-inverted-coloring"
                          data-testid="tag-btn-two"
                          type="button"
                        >
                          two
                        </button>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 17,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "onSelectionChange": [MockFunction],
                        "tags": Array [
                          Object {
                            "selected": false,
                            "tag": "one",
                            "text": "one",
                          },
                          Object {
                            "selected": false,
                            "tag": "two",
                            "text": "two",
                          },
                        ],
                      }
                    }
                    wrappingComponentProps={null}
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "onSelectionChange": [MockFunction],
                "tags": Array [
                  Object {
                    "selected": false,
                    "tag": "one",
                    "text": "one",
                  },
                  Object {
                    "selected": false,
                    "tag": "two",
                    "text": "two",
                  },
                ],
              },
              "wrappingComponentProps": null,
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 78,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 78,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1073741823,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                      class="container high-contrast-coloring margin-bottom radius "
                    >
                      <div
                        class="flex flex--column"
                      >
                        <h6>
                          Tags
                        </h6>
                      </div>
                      <div
                        class="flex"
                      >
                        <div>
                          <button
                            class="btn btn--inverted margin-right"
                            data-testid="allBtn"
                            type="button"
                          >
                            All
                          </button>
                        </div>
                        <div>
                          <button
                            class="btn radius-top-left tag-one-inverted-coloring"
                            data-testid="tag-btn-one"
                            type="button"
                          >
                            one
                          </button>
                          <button
                            class="btn radius-bottom-right tag-two-inverted-coloring"
                            data-testid="tag-btn-two"
                            type="button"
                          >
                            two
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 17,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "pingCache": null,
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "onSelectionChange": [MockFunction],
                            "tags": Array [
                              Object {
                                "selected": false,
                                "tag": "one",
                                "text": "one",
                              },
                              Object {
                                "selected": false,
                                "tag": "two",
                                "text": "two",
                              },
                            ],
                          }
                        }
                        wrappingComponentProps={null}
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "onSelectionChange": [MockFunction],
                            "tags": Array [
                              Object {
                                "selected": false,
                                "tag": "one",
                                "text": "one",
                              },
                              Object {
                                "selected": false,
                                "tag": "two",
                                "text": "two",
                              },
                            ],
                          }
                        }
                        wrappingComponentProps={null}
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "onSelectionChange": [MockFunction],
                      "tags": Array [
                        Object {
                          "selected": false,
                          "tag": "one",
                          "text": "one",
                        },
                        Object {
                          "selected": false,
                          "tag": "two",
                          "text": "two",
                        },
                      ],
                    }
                  }
                  wrappingComponentProps={null}
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="container high-contrast-coloring margin-bottom radius "
                  >
                    <div
                      class="flex flex--column"
                    >
                      <h6>
                        Tags
                      </h6>
                    </div>
                    <div
                      class="flex"
                    >
                      <div>
                        <button
                          class="btn btn--inverted margin-right"
                          data-testid="allBtn"
                          type="button"
                        >
                          All
                        </button>
                      </div>
                      <div>
                        <button
                          class="btn radius-top-left tag-one-inverted-coloring"
                          data-testid="tag-btn-one"
                          type="button"
                        >
                          one
                        </button>
                        <button
                          class="btn radius-bottom-right tag-two-inverted-coloring"
                          data-testid="tag-btn-two"
                          type="button"
                        >
                          two
                        </button>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 17,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "onSelectionChange": [MockFunction],
                        "tags": Array [
                          Object {
                            "selected": false,
                            "tag": "one",
                            "text": "one",
                          },
                          Object {
                            "selected": false,
                            "tag": "two",
                            "text": "two",
                          },
                        ],
                      }
                    }
                    wrappingComponentProps={null}
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "onSelectionChange": [MockFunction],
                  "tags": Array [
                    Object {
                      "selected": false,
                      "tag": "one",
                      "text": "one",
                    },
                    Object {
                      "selected": false,
                      "tag": "two",
                      "text": "two",
                    },
                  ],
                },
                "wrappingComponentProps": null,
              },
              "refs": Object {},
              "rootFinderInstance": null,
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "onSelectionChange": [MockFunction],
                  "tags": Array [
                    Object {
                      "selected": false,
                      "tag": "one",
                      "text": "one",
                    },
                    Object {
                      "selected": false,
                      "tag": "two",
                      "text": "two",
                    },
                  ],
                },
                "wrappingComponentProps": null,
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": [Circular],
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_reactInternalInstance": Object {},
        "areAllSelected": [Function],
        "context": Object {},
        "props": Object {
          "onSelectionChange": [MockFunction],
          "tags": Array [
            Object {
              "selected": false,
              "tag": "one",
              "text": "one",
            },
            Object {
              "selected": false,
              "tag": "two",
              "text": "two",
            },
          ],
        },
        "refs": Object {},
        "state": null,
        "toggleAll": [Function],
        "toggleOne": [Function],
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
      },
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "onSelectionChange": [MockFunction],
        "tags": Array [
          Object {
            "selected": false,
            "tag": "one",
            "text": "one",
          },
          Object {
            "selected": false,
            "tag": "two",
            "text": "two",
          },
        ],
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <div
            className="flex"
          >
            <div>
              <Button
                className="btn btn--inverted margin-right"
                data-testid="allBtn"
                onClick={[Function]}
                type="button"
              >
                All
              </Button>
            </div>
            <div>
              <Button
                className="btn radius-top-left tag-one-inverted-coloring"
                data-testid="tag-btn-one"
                onClick={[Function]}
                type="button"
              >
                one
              </Button>
              <Button
                className="btn radius-bottom-right tag-two-inverted-coloring"
                data-testid="tag-btn-two"
                onClick={[Function]}
                type="button"
              >
                two
              </Button>
            </div>
          </div>,
          "title": "Tags",
        },
        "ref": null,
        "rendered": Object {
          "instance": <div
            class="container high-contrast-coloring margin-bottom radius "
          >
            <div
              class="flex flex--column"
            >
              <h6>
                Tags
              </h6>
            </div>
            <div
              class="flex"
            >
              <div>
                <button
                  class="btn btn--inverted margin-right"
                  data-testid="allBtn"
                  type="button"
                >
                  All
                </button>
              </div>
              <div>
                <button
                  class="btn radius-top-left tag-one-inverted-coloring"
                  data-testid="tag-btn-one"
                  type="button"
                >
                  one
                </button>
                <button
                  class="btn radius-bottom-right tag-two-inverted-coloring"
                  data-testid="tag-btn-two"
                  type="button"
                >
                  two
                </button>
              </div>
            </div>
          </div>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="flex flex--column"
              >
                <h6>
                  Tags
                </h6>
              </div>,
              <div
                className="flex"
              >
                <div>
                  <Button
                    className="btn btn--inverted margin-right"
                    data-testid="allBtn"
                    onClick={[Function]}
                    type="button"
                  >
                    All
                  </Button>
                </div>
                <div>
                  <Button
                    className="btn radius-top-left tag-one-inverted-coloring"
                    data-testid="tag-btn-one"
                    onClick={[Function]}
                    type="button"
                  >
                    one
                  </Button>
                  <Button
                    className="btn radius-bottom-right tag-two-inverted-coloring"
                    data-testid="tag-btn-two"
                    onClick={[Function]}
                    type="button"
                  >
                    two
                  </Button>
                </div>
              </div>,
            ],
            "className": "container high-contrast-coloring margin-bottom radius ",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <div
                class="flex flex--column"
              >
                <h6>
                  Tags
                </h6>
              </div>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h6>
                    Tags
                  </h6>,
                  undefined,
                ],
                "className": "flex flex--column",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": <h6>
                    Tags
                  </h6>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Tags",
                  },
                  "ref": null,
                  "rendered": Array [
                    "Tags",
                  ],
                  "type": "h6",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": <div
                class="flex"
              >
                <div>
                  <button
                    class="btn btn--inverted margin-right"
                    data-testid="allBtn"
                    type="button"
                  >
                    All
                  </button>
                </div>
                <div>
                  <button
                    class="btn radius-top-left tag-one-inverted-coloring"
                    data-testid="tag-btn-one"
                    type="button"
                  >
                    one
                  </button>
                  <button
                    class="btn radius-bottom-right tag-two-inverted-coloring"
                    data-testid="tag-btn-two"
                    type="button"
                  >
                    two
                  </button>
                </div>
              </div>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div>
                    <Button
                      className="btn btn--inverted margin-right"
                      data-testid="allBtn"
                      onClick={[Function]}
                      type="button"
                    >
                      All
                    </Button>
                  </div>,
                  <div>
                    <Button
                      className="btn radius-top-left tag-one-inverted-coloring"
                      data-testid="tag-btn-one"
                      onClick={[Function]}
                      type="button"
                    >
                      one
                    </Button>
                    <Button
                      className="btn radius-bottom-right tag-two-inverted-coloring"
                      data-testid="tag-btn-two"
                      onClick={[Function]}
                      type="button"
                    >
                      two
                    </Button>
                  </div>,
                ],
                "className": "flex",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": <div>
                    <button
                      class="btn btn--inverted margin-right"
                      data-testid="allBtn"
                      type="button"
                    >
                      All
                    </button>
                  </div>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Button
                      className="btn btn--inverted margin-right"
                      data-testid="allBtn"
                      onClick={[Function]}
                      type="button"
                    >
                      All
                    </Button>,
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "children": "All",
                        "className": "btn btn--inverted margin-right",
                        "data-testid": "allBtn",
                        "onClick": [Function],
                        "type": "button",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": <button
                          class="btn btn--inverted margin-right"
                          data-testid="allBtn"
                          type="button"
                        >
                          All
                        </button>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "All",
                          "className": "btn btn--inverted margin-right",
                          "data-testid": "allBtn",
                          "onClick": [Function],
                          "type": "button",
                        },
                        "ref": null,
                        "rendered": Array [
                          "All",
                        ],
                        "type": "button",
                      },
                      "type": [Function],
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": <div>
                    <button
                      class="btn radius-top-left tag-one-inverted-coloring"
                      data-testid="tag-btn-one"
                      type="button"
                    >
                      one
                    </button>
                    <button
                      class="btn radius-bottom-right tag-two-inverted-coloring"
                      data-testid="tag-btn-two"
                      type="button"
                    >
                      two
                    </button>
                  </div>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <Button
                        className="btn radius-top-left tag-one-inverted-coloring"
                        data-testid="tag-btn-one"
                        onClick={[Function]}
                        type="button"
                      >
                        one
                      </Button>,
                      <Button
                        className="btn radius-bottom-right tag-two-inverted-coloring"
                        data-testid="tag-btn-two"
                        onClick={[Function]}
                        type="button"
                      >
                        two
                      </Button>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": "tag-filter-one-0",
                      "nodeType": "function",
                      "props": Object {
                        "children": "one",
                        "className": "btn radius-top-left tag-one-inverted-coloring",
                        "data-testid": "tag-btn-one",
                        "onClick": [Function],
                        "type": "button",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": <button
                          class="btn radius-top-left tag-one-inverted-coloring"
                          data-testid="tag-btn-one"
                          type="button"
                        >
                          one
                        </button>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "one",
                          "className": "btn radius-top-left tag-one-inverted-coloring",
                          "data-testid": "tag-btn-one",
                          "onClick": [Function],
                          "type": "button",
                        },
                        "ref": null,
                        "rendered": Array [
                          "one",
                        ],
                        "type": "button",
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": "tag-filter-two-1",
                      "nodeType": "function",
                      "props": Object {
                        "children": "two",
                        "className": "btn radius-bottom-right tag-two-inverted-coloring",
                        "data-testid": "tag-btn-two",
                        "onClick": [Function],
                        "type": "button",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": <button
                          class="btn radius-bottom-right tag-two-inverted-coloring"
                          data-testid="tag-btn-two"
                          type="button"
                        >
                          two
                        </button>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "two",
                          "className": "btn radius-bottom-right tag-two-inverted-coloring",
                          "data-testid": "tag-btn-two",
                          "onClick": [Function],
                          "type": "button",
                        },
                        "ref": null,
                        "rendered": Array [
                          "two",
                        ],
                        "type": "button",
                      },
                      "type": [Function],
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Testing the TagFilter component Should toggle all selection values 2`] = `
ReactWrapper {
  Symbol(enzyme.__unrendered__): <TagFilter
    onSelectionChange={
      [MockFunction] {
        "calls": Array [
          Array [
            Array [
              Object {
                "selected": true,
                "tag": "one",
                "text": "one",
              },
              Object {
                "selected": true,
                "tag": "two",
                "text": "two",
              },
            ],
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
    tags={
      Array [
        Object {
          "selected": true,
          "tag": "one",
          "text": "one",
        },
        Object {
          "selected": true,
          "tag": "two",
          "text": "two",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "getWrappingComponentRenderer": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": TagFilter {
      "_reactInternalFiber": FiberNode {
        "_debugHookTypes": null,
        "_debugID": 81,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 80,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "contextDependencies": null,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "onSelectionChange": [MockFunction] {
                "calls": Array [
                  Array [
                    Array [
                      Object {
                        "selected": true,
                        "tag": "one",
                        "text": "one",
                      },
                      Object {
                        "selected": true,
                        "tag": "two",
                        "text": "two",
                      },
                    ],
                  ],
                ],
                "results": Array [
                  Object {
                    "isThrow": false,
                    "value": undefined,
                  },
                ],
              },
              "tags": Array [
                Object {
                  "selected": true,
                  "tag": "one",
                  "text": "one",
                },
                Object {
                  "selected": true,
                  "tag": "two",
                  "text": "two",
                },
              ],
            },
            "wrappingComponentProps": null,
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {
              "onSelectionChange": [MockFunction] {
                "calls": Array [
                  Array [
                    Array [
                      Object {
                        "selected": true,
                        "tag": "one",
                        "text": "one",
                      },
                      Object {
                        "selected": true,
                        "tag": "two",
                        "text": "two",
                      },
                    ],
                  ],
                ],
                "results": Array [
                  Object {
                    "isThrow": false,
                    "value": undefined,
                  },
                ],
              },
              "tags": Array [
                Object {
                  "selected": true,
                  "tag": "one",
                  "text": "one",
                },
                Object {
                  "selected": true,
                  "tag": "two",
                  "text": "two",
                },
              ],
            },
            "wrappingComponentProps": null,
          },
          "mode": 0,
          "nextEffect": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 78,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 78,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1073741823,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="container high-contrast-coloring margin-bottom radius "
                  >
                    <div
                      class="flex flex--column"
                    >
                      <h6>
                        Tags
                      </h6>
                    </div>
                    <div
                      class="flex"
                    >
                      <div>
                        <button
                          class="btn btn--inverted margin-right"
                          data-testid="allBtn"
                          type="button"
                        >
                          All
                        </button>
                      </div>
                      <div>
                        <button
                          class="btn radius-top-left tag-one-inverted-coloring"
                          data-testid="tag-btn-one"
                          type="button"
                        >
                          one
                        </button>
                        <button
                          class="btn radius-bottom-right tag-two-inverted-coloring"
                          data-testid="tag-btn-two"
                          type="button"
                        >
                          two
                        </button>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 17,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "onSelectionChange": [MockFunction] {
                            "calls": Array [
                              Array [
                                Array [
                                  Object {
                                    "selected": true,
                                    "tag": "one",
                                    "text": "one",
                                  },
                                  Object {
                                    "selected": true,
                                    "tag": "two",
                                    "text": "two",
                                  },
                                ],
                              ],
                            ],
                            "results": Array [
                              Object {
                                "isThrow": false,
                                "value": undefined,
                              },
                            ],
                          },
                          "tags": Array [
                            Object {
                              "selected": true,
                              "tag": "one",
                              "text": "one",
                            },
                            Object {
                              "selected": true,
                              "tag": "two",
                              "text": "two",
                            },
                          ],
                        }
                      }
                      wrappingComponentProps={null}
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "onSelectionChange": [MockFunction] {
                            "calls": Array [
                              Array [
                                Array [
                                  Object {
                                    "selected": true,
                                    "tag": "one",
                                    "text": "one",
                                  },
                                  Object {
                                    "selected": true,
                                    "tag": "two",
                                    "text": "two",
                                  },
                                ],
                              ],
                            ],
                            "results": Array [
                              Object {
                                "isThrow": false,
                                "value": undefined,
                              },
                            ],
                          },
                          "tags": Array [
                            Object {
                              "selected": true,
                              "tag": "one",
                              "text": "one",
                            },
                            Object {
                              "selected": true,
                              "tag": "two",
                              "text": "two",
                            },
                          ],
                        }
                      }
                      wrappingComponentProps={null}
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "onSelectionChange": [MockFunction] {
                      "calls": Array [
                        Array [
                          Array [
                            Object {
                              "selected": true,
                              "tag": "one",
                              "text": "one",
                            },
                            Object {
                              "selected": true,
                              "tag": "two",
                              "text": "two",
                            },
                          ],
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": undefined,
                        },
                      ],
                    },
                    "tags": Array [
                      Object {
                        "selected": true,
                        "tag": "one",
                        "text": "one",
                      },
                      Object {
                        "selected": true,
                        "tag": "two",
                        "text": "two",
                      },
                    ],
                  }
                }
                wrappingComponentProps={null}
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                  class="container high-contrast-coloring margin-bottom radius "
                >
                  <div
                    class="flex flex--column"
                  >
                    <h6>
                      Tags
                    </h6>
                  </div>
                  <div
                    class="flex"
                  >
                    <div>
                      <button
                        class="btn btn--inverted margin-right"
                        data-testid="allBtn"
                        type="button"
                      >
                        All
                      </button>
                    </div>
                    <div>
                      <button
                        class="btn radius-top-left tag-one-inverted-coloring"
                        data-testid="tag-btn-one"
                        type="button"
                      >
                        one
                      </button>
                      <button
                        class="btn radius-bottom-right tag-two-inverted-coloring"
                        data-testid="tag-btn-two"
                        type="button"
                      >
                        two
                      </button>
                    </div>
                  </div>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 17,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "pingCache": null,
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "onSelectionChange": [MockFunction] {
                        "calls": Array [
                          Array [
                            Array [
                              Object {
                                "selected": true,
                                "tag": "one",
                                "text": "one",
                              },
                              Object {
                                "selected": true,
                                "tag": "two",
                                "text": "two",
                              },
                            ],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": undefined,
                          },
                        ],
                      },
                      "tags": Array [
                        Object {
                          "selected": true,
                          "tag": "one",
                          "text": "one",
                        },
                        Object {
                          "selected": true,
                          "tag": "two",
                          "text": "two",
                        },
                      ],
                    }
                  }
                  wrappingComponentProps={null}
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "onSelectionChange": [MockFunction] {
                "calls": Array [
                  Array [
                    Array [
                      Object {
                        "selected": true,
                        "tag": "one",
                        "text": "one",
                      },
                      Object {
                        "selected": true,
                        "tag": "two",
                        "text": "two",
                      },
                    ],
                  ],
                ],
                "results": Array [
                  Object {
                    "isThrow": false,
                    "value": undefined,
                  },
                ],
              },
              "tags": Array [
                Object {
                  "selected": true,
                  "tag": "one",
                  "text": "one",
                },
                Object {
                  "selected": true,
                  "tag": "two",
                  "text": "two",
                },
              ],
            },
            "wrappingComponentProps": null,
          },
          "ref": null,
          "return": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 78,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 78,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1073741823,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="container high-contrast-coloring margin-bottom radius "
                  >
                    <div
                      class="flex flex--column"
                    >
                      <h6>
                        Tags
                      </h6>
                    </div>
                    <div
                      class="flex"
                    >
                      <div>
                        <button
                          class="btn btn--inverted margin-right"
                          data-testid="allBtn"
                          type="button"
                        >
                          All
                        </button>
                      </div>
                      <div>
                        <button
                          class="btn radius-top-left tag-one-inverted-coloring"
                          data-testid="tag-btn-one"
                          type="button"
                        >
                          one
                        </button>
                        <button
                          class="btn radius-bottom-right tag-two-inverted-coloring"
                          data-testid="tag-btn-two"
                          type="button"
                        >
                          two
                        </button>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 17,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "onSelectionChange": [MockFunction] {
                            "calls": Array [
                              Array [
                                Array [
                                  Object {
                                    "selected": true,
                                    "tag": "one",
                                    "text": "one",
                                  },
                                  Object {
                                    "selected": true,
                                    "tag": "two",
                                    "text": "two",
                                  },
                                ],
                              ],
                            ],
                            "results": Array [
                              Object {
                                "isThrow": false,
                                "value": undefined,
                              },
                            ],
                          },
                          "tags": Array [
                            Object {
                              "selected": true,
                              "tag": "one",
                              "text": "one",
                            },
                            Object {
                              "selected": true,
                              "tag": "two",
                              "text": "two",
                            },
                          ],
                        }
                      }
                      wrappingComponentProps={null}
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "onSelectionChange": [MockFunction] {
                            "calls": Array [
                              Array [
                                Array [
                                  Object {
                                    "selected": true,
                                    "tag": "one",
                                    "text": "one",
                                  },
                                  Object {
                                    "selected": true,
                                    "tag": "two",
                                    "text": "two",
                                  },
                                ],
                              ],
                            ],
                            "results": Array [
                              Object {
                                "isThrow": false,
                                "value": undefined,
                              },
                            ],
                          },
                          "tags": Array [
                            Object {
                              "selected": true,
                              "tag": "one",
                              "text": "one",
                            },
                            Object {
                              "selected": true,
                              "tag": "two",
                              "text": "two",
                            },
                          ],
                        }
                      }
                      wrappingComponentProps={null}
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "onSelectionChange": [MockFunction] {
                      "calls": Array [
                        Array [
                          Array [
                            Object {
                              "selected": true,
                              "tag": "one",
                              "text": "one",
                            },
                            Object {
                              "selected": true,
                              "tag": "two",
                              "text": "two",
                            },
                          ],
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": undefined,
                        },
                      ],
                    },
                    "tags": Array [
                      Object {
                        "selected": true,
                        "tag": "one",
                        "text": "one",
                      },
                      Object {
                        "selected": true,
                        "tag": "two",
                        "text": "two",
                      },
                    ],
                  }
                }
                wrappingComponentProps={null}
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                  class="container high-contrast-coloring margin-bottom radius "
                >
                  <div
                    class="flex flex--column"
                  >
                    <h6>
                      Tags
                    </h6>
                  </div>
                  <div
                    class="flex"
                  >
                    <div>
                      <button
                        class="btn btn--inverted margin-right"
                        data-testid="allBtn"
                        type="button"
                      >
                        All
                      </button>
                    </div>
                    <div>
                      <button
                        class="btn radius-top-left tag-one-inverted-coloring"
                        data-testid="tag-btn-one"
                        type="button"
                      >
                        one
                      </button>
                      <button
                        class="btn radius-bottom-right tag-two-inverted-coloring"
                        data-testid="tag-btn-two"
                        type="button"
                      >
                        two
                      </button>
                    </div>
                  </div>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 17,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "pingCache": null,
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "onSelectionChange": [MockFunction] {
                        "calls": Array [
                          Array [
                            Array [
                              Object {
                                "selected": true,
                                "tag": "one",
                                "text": "one",
                              },
                              Object {
                                "selected": true,
                                "tag": "two",
                                "text": "two",
                              },
                            ],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": undefined,
                          },
                        ],
                      },
                      "tags": Array [
                        Object {
                          "selected": true,
                          "tag": "one",
                          "text": "one",
                        },
                        Object {
                          "selected": true,
                          "tag": "two",
                          "text": "two",
                        },
                      ],
                    }
                  }
                  wrappingComponentProps={null}
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "onSelectionChange": [MockFunction] {
                  "calls": Array [
                    Array [
                      Array [
                        Object {
                          "selected": true,
                          "tag": "one",
                          "text": "one",
                        },
                        Object {
                          "selected": true,
                          "tag": "two",
                          "text": "two",
                        },
                      ],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "isThrow": false,
                      "value": undefined,
                    },
                  ],
                },
                "tags": Array [
                  Object {
                    "selected": true,
                    "tag": "one",
                    "text": "one",
                  },
                  Object {
                    "selected": true,
                    "tag": "two",
                    "text": "two",
                  },
                ],
              },
              "wrappingComponentProps": null,
            },
            "refs": Object {},
            "rootFinderInstance": null,
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "onSelectionChange": [MockFunction] {
                  "calls": Array [
                    Array [
                      Array [
                        Object {
                          "selected": true,
                          "tag": "one",
                          "text": "one",
                        },
                        Object {
                          "selected": true,
                          "tag": "two",
                          "text": "two",
                        },
                      ],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "isThrow": false,
                      "value": undefined,
                    },
                  ],
                },
                "tags": Array [
                  Object {
                    "selected": true,
                    "tag": "one",
                    "text": "one",
                  },
                  Object {
                    "selected": true,
                    "tag": "two",
                    "text": "two",
                  },
                ],
              },
              "wrappingComponentProps": null,
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": -1,
        "alternate": null,
        "child": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 82,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": Object {
            "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\TagFilter\\\\TagFilter.js",
            "lineNumber": 56,
          },
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 83,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\Card\\\\Card.js",
              "lineNumber": 16,
            },
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 84,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\Card\\\\Card.js",
                "lineNumber": 18,
              },
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 86,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\Card\\\\Card.js",
                  "lineNumber": 19,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": null,
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": "h6",
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": "Tags",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": "Tags",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": <h6>
                  Tags
                </h6>,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "h6",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": "div",
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <h6>
                    Tags
                  </h6>,
                  undefined,
                ],
                "className": "flex flex--column",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  <h6>
                    Tags
                  </h6>,
                  undefined,
                ],
                "className": "flex flex--column",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 85,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\TagFilter\\\\TagFilter.js",
                  "lineNumber": 57,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 87,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\TagFilter\\\\TagFilter.js",
                    "lineNumber": 58,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 89,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\TagFilter\\\\TagFilter.js",
                      "lineNumber": 59,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 90,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\Button\\\\Button.js",
                        "lineNumber": 3,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 0,
                      "elementType": "button",
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "All",
                        "className": "btn btn--inverted margin-right",
                        "data-testid": "allBtn",
                        "onClick": [Function],
                        "type": "button",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "All",
                        "className": "btn btn--inverted margin-right",
                        "data-testid": "allBtn",
                        "onClick": [Function],
                        "type": "button",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <button
                        class="btn btn--inverted margin-right"
                        data-testid="allBtn"
                        type="button"
                      >
                        All
                      </button>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "button",
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 1,
                    "elementType": [Function],
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "All",
                      "className": "btn btn--inverted margin-right",
                      "data-testid": "allBtn",
                      "onClick": [Function],
                      "type": "button",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "All",
                      "className": "btn btn--inverted margin-right",
                      "data-testid": "allBtn",
                      "onClick": [Function],
                      "type": "button",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "tag": 0,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "contextDependencies": null,
                  "effectTag": 0,
                  "elementType": "div",
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": <Button
                      className="btn btn--inverted margin-right"
                      data-testid="allBtn"
                      onClick={[Function]}
                      type="button"
                    >
                      All
                    </Button>,
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <Button
                      className="btn btn--inverted margin-right"
                      data-testid="allBtn"
                      onClick={[Function]}
                      type="button"
                    >
                      All
                    </Button>,
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 88,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\TagFilter\\\\TagFilter.js",
                      "lineNumber": 68,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 91,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\TagFilter\\\\TagFilter.js",
                        "lineNumber": 82,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 93,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\Button\\\\Button.js",
                          "lineNumber": 3,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 0,
                        "elementType": "button",
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "one",
                          "className": "btn radius-top-left tag-one-inverted-coloring",
                          "data-testid": "tag-btn-one",
                          "onClick": [Function],
                          "type": "button",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "one",
                          "className": "btn radius-top-left tag-one-inverted-coloring",
                          "data-testid": "tag-btn-one",
                          "onClick": [Function],
                          "type": "button",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <button
                          class="btn radius-top-left tag-one-inverted-coloring"
                          data-testid="tag-btn-one"
                          type="button"
                        >
                          one
                        </button>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "button",
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 1,
                      "elementType": [Function],
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": "tag-filter-one-0",
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "one",
                        "className": "btn radius-top-left tag-one-inverted-coloring",
                        "data-testid": "tag-btn-one",
                        "onClick": [Function],
                        "type": "button",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "one",
                        "className": "btn radius-top-left tag-one-inverted-coloring",
                        "data-testid": "tag-btn-one",
                        "onClick": [Function],
                        "type": "button",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 92,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\TagFilter\\\\TagFilter.js",
                          "lineNumber": 82,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 94,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\Button\\\\Button.js",
                            "lineNumber": 3,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "contextDependencies": null,
                          "effectTag": 0,
                          "elementType": "button",
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "two",
                            "className": "btn radius-bottom-right tag-two-inverted-coloring",
                            "data-testid": "tag-btn-two",
                            "onClick": [Function],
                            "type": "button",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "two",
                            "className": "btn radius-bottom-right tag-two-inverted-coloring",
                            "data-testid": "tag-btn-two",
                            "onClick": [Function],
                            "type": "button",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <button
                            class="btn radius-bottom-right tag-two-inverted-coloring"
                            data-testid="tag-btn-two"
                            type="button"
                          >
                            two
                          </button>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "button",
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 1,
                        "elementType": [Function],
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 1,
                        "key": "tag-filter-two-1",
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "two",
                          "className": "btn radius-bottom-right tag-two-inverted-coloring",
                          "data-testid": "tag-btn-two",
                          "onClick": [Function],
                          "type": "button",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "two",
                          "className": "btn radius-bottom-right tag-two-inverted-coloring",
                          "data-testid": "tag-btn-two",
                          "onClick": [Function],
                          "type": "button",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": null,
                        "tag": 0,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "stateNode": null,
                      "tag": 0,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 0,
                    "elementType": "div",
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <Button
                          className="btn radius-top-left tag-one-inverted-coloring"
                          data-testid="tag-btn-one"
                          onClick={[Function]}
                          type="button"
                        >
                          one
                        </Button>,
                        <Button
                          className="btn radius-bottom-right tag-two-inverted-coloring"
                          data-testid="tag-btn-two"
                          onClick={[Function]}
                          type="button"
                        >
                          two
                        </Button>,
                      ],
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <Button
                          className="btn radius-top-left tag-one-inverted-coloring"
                          data-testid="tag-btn-one"
                          onClick={[Function]}
                          type="button"
                        >
                          one
                        </Button>,
                        <Button
                          className="btn radius-bottom-right tag-two-inverted-coloring"
                          data-testid="tag-btn-two"
                          onClick={[Function]}
                          type="button"
                        >
                          two
                        </Button>,
                      ],
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": <div>
                      <button
                        class="btn radius-top-left tag-one-inverted-coloring"
                        data-testid="tag-btn-one"
                        type="button"
                      >
                        one
                      </button>
                      <button
                        class="btn radius-bottom-right tag-two-inverted-coloring"
                        data-testid="tag-btn-two"
                        type="button"
                      >
                        two
                      </button>
                    </div>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "stateNode": <div>
                    <button
                      class="btn btn--inverted margin-right"
                      data-testid="allBtn"
                      type="button"
                    >
                      All
                    </button>
                  </div>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": "div",
                "expirationTime": 0,
                "firstEffect": null,
                "index": 1,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <div>
                      <Button
                        className="btn btn--inverted margin-right"
                        data-testid="allBtn"
                        onClick={[Function]}
                        type="button"
                      >
                        All
                      </Button>
                    </div>,
                    <div>
                      <Button
                        className="btn radius-top-left tag-one-inverted-coloring"
                        data-testid="tag-btn-one"
                        onClick={[Function]}
                        type="button"
                      >
                        one
                      </Button>
                      <Button
                        className="btn radius-bottom-right tag-two-inverted-coloring"
                        data-testid="tag-btn-two"
                        onClick={[Function]}
                        type="button"
                      >
                        two
                      </Button>
                    </div>,
                  ],
                  "className": "flex",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <div>
                      <Button
                        className="btn btn--inverted margin-right"
                        data-testid="allBtn"
                        onClick={[Function]}
                        type="button"
                      >
                        All
                      </Button>
                    </div>,
                    <div>
                      <Button
                        className="btn radius-top-left tag-one-inverted-coloring"
                        data-testid="tag-btn-one"
                        onClick={[Function]}
                        type="button"
                      >
                        one
                      </Button>
                      <Button
                        className="btn radius-bottom-right tag-two-inverted-coloring"
                        data-testid="tag-btn-two"
                        onClick={[Function]}
                        type="button"
                      >
                        two
                      </Button>
                    </div>,
                  ],
                  "className": "flex",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": <div
                  class="flex"
                >
                  <div>
                    <button
                      class="btn btn--inverted margin-right"
                      data-testid="allBtn"
                      type="button"
                    >
                      All
                    </button>
                  </div>
                  <div>
                    <button
                      class="btn radius-top-left tag-one-inverted-coloring"
                      data-testid="tag-btn-one"
                      type="button"
                    >
                      one
                    </button>
                    <button
                      class="btn radius-bottom-right tag-two-inverted-coloring"
                      data-testid="tag-btn-two"
                      type="button"
                    >
                      two
                    </button>
                  </div>
                </div>,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "div",
                "updateQueue": null,
              },
              "stateNode": <div
                class="flex flex--column"
              >
                <h6>
                  Tags
                </h6>
              </div>,
              "tag": 5,
              "treeBaseDuration": 0,
              "type": "div",
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 0,
            "elementType": "div",
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": Array [
                <div
                  className="flex flex--column"
                >
                  <h6>
                    Tags
                  </h6>
                </div>,
                <div
                  className="flex"
                >
                  <div>
                    <Button
                      className="btn btn--inverted margin-right"
                      data-testid="allBtn"
                      onClick={[Function]}
                      type="button"
                    >
                      All
                    </Button>
                  </div>
                  <div>
                    <Button
                      className="btn radius-top-left tag-one-inverted-coloring"
                      data-testid="tag-btn-one"
                      onClick={[Function]}
                      type="button"
                    >
                      one
                    </Button>
                    <Button
                      className="btn radius-bottom-right tag-two-inverted-coloring"
                      data-testid="tag-btn-two"
                      onClick={[Function]}
                      type="button"
                    >
                      two
                    </Button>
                  </div>
                </div>,
              ],
              "className": "container high-contrast-coloring margin-bottom radius ",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": Array [
                <div
                  className="flex flex--column"
                >
                  <h6>
                    Tags
                  </h6>
                </div>,
                <div
                  className="flex"
                >
                  <div>
                    <Button
                      className="btn btn--inverted margin-right"
                      data-testid="allBtn"
                      onClick={[Function]}
                      type="button"
                    >
                      All
                    </Button>
                  </div>
                  <div>
                    <Button
                      className="btn radius-top-left tag-one-inverted-coloring"
                      data-testid="tag-btn-one"
                      onClick={[Function]}
                      type="button"
                    >
                      one
                    </Button>
                    <Button
                      className="btn radius-bottom-right tag-two-inverted-coloring"
                      data-testid="tag-btn-two"
                      onClick={[Function]}
                      type="button"
                    >
                      two
                    </Button>
                  </div>
                </div>,
              ],
              "className": "container high-contrast-coloring margin-bottom radius ",
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": <div
              class="container high-contrast-coloring margin-bottom radius "
            >
              <div
                class="flex flex--column"
              >
                <h6>
                  Tags
                </h6>
              </div>
              <div
                class="flex"
              >
                <div>
                  <button
                    class="btn btn--inverted margin-right"
                    data-testid="allBtn"
                    type="button"
                  >
                    All
                  </button>
                </div>
                <div>
                  <button
                    class="btn radius-top-left tag-one-inverted-coloring"
                    data-testid="tag-btn-one"
                    type="button"
                  >
                    one
                  </button>
                  <button
                    class="btn radius-bottom-right tag-two-inverted-coloring"
                    data-testid="tag-btn-two"
                    type="button"
                  >
                    two
                  </button>
                </div>
              </div>
            </div>,
            "tag": 5,
            "treeBaseDuration": 0,
            "type": "div",
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "contextDependencies": null,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": <div
              className="flex"
            >
              <div>
                <Button
                  className="btn btn--inverted margin-right"
                  data-testid="allBtn"
                  onClick={[Function]}
                  type="button"
                >
                  All
                </Button>
              </div>
              <div>
                <Button
                  className="btn radius-top-left tag-one-inverted-coloring"
                  data-testid="tag-btn-one"
                  onClick={[Function]}
                  type="button"
                >
                  one
                </Button>
                <Button
                  className="btn radius-bottom-right tag-two-inverted-coloring"
                  data-testid="tag-btn-two"
                  onClick={[Function]}
                  type="button"
                >
                  two
                </Button>
              </div>
            </div>,
            "title": "Tags",
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": <div
              className="flex"
            >
              <div>
                <Button
                  className="btn btn--inverted margin-right"
                  data-testid="allBtn"
                  onClick={[Function]}
                  type="button"
                >
                  All
                </Button>
              </div>
              <div>
                <Button
                  className="btn radius-top-left tag-one-inverted-coloring"
                  data-testid="tag-btn-one"
                  onClick={[Function]}
                  type="button"
                >
                  one
                </Button>
                <Button
                  className="btn radius-bottom-right tag-two-inverted-coloring"
                  data-testid="tag-btn-two"
                  onClick={[Function]}
                  type="button"
                >
                  two
                </Button>
              </div>
            </div>,
            "title": "Tags",
          },
          "ref": null,
          "return": [Circular],
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": null,
          "tag": 0,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "childExpirationTime": 0,
        "contextDependencies": null,
        "effectTag": 1,
        "elementType": [Function],
        "expirationTime": 0,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": Object {
          "onSelectionChange": [MockFunction] {
            "calls": Array [
              Array [
                Array [
                  Object {
                    "selected": true,
                    "tag": "one",
                    "text": "one",
                  },
                  Object {
                    "selected": true,
                    "tag": "two",
                    "text": "two",
                  },
                ],
              ],
            ],
            "results": Array [
              Object {
                "isThrow": false,
                "value": undefined,
              },
            ],
          },
          "tags": Array [
            Object {
              "selected": true,
              "tag": "one",
              "text": "one",
            },
            Object {
              "selected": true,
              "tag": "two",
              "text": "two",
            },
          ],
        },
        "memoizedState": null,
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {
          "onSelectionChange": [MockFunction] {
            "calls": Array [
              Array [
                Array [
                  Object {
                    "selected": true,
                    "tag": "one",
                    "text": "one",
                  },
                  Object {
                    "selected": true,
                    "tag": "two",
                    "text": "two",
                  },
                ],
              ],
            ],
            "results": Array [
              Object {
                "isThrow": false,
                "value": undefined,
              },
            ],
          },
          "tags": Array [
            Object {
              "selected": true,
              "tag": "one",
              "text": "one",
            },
            Object {
              "selected": true,
              "tag": "two",
              "text": "two",
            },
          ],
        },
        "ref": null,
        "return": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 80,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "contextDependencies": null,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "onSelectionChange": [MockFunction] {
                "calls": Array [
                  Array [
                    Array [
                      Object {
                        "selected": true,
                        "tag": "one",
                        "text": "one",
                      },
                      Object {
                        "selected": true,
                        "tag": "two",
                        "text": "two",
                      },
                    ],
                  ],
                ],
                "results": Array [
                  Object {
                    "isThrow": false,
                    "value": undefined,
                  },
                ],
              },
              "tags": Array [
                Object {
                  "selected": true,
                  "tag": "one",
                  "text": "one",
                },
                Object {
                  "selected": true,
                  "tag": "two",
                  "text": "two",
                },
              ],
            },
            "wrappingComponentProps": null,
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {
              "onSelectionChange": [MockFunction] {
                "calls": Array [
                  Array [
                    Array [
                      Object {
                        "selected": true,
                        "tag": "one",
                        "text": "one",
                      },
                      Object {
                        "selected": true,
                        "tag": "two",
                        "text": "two",
                      },
                    ],
                  ],
                ],
                "results": Array [
                  Object {
                    "isThrow": false,
                    "value": undefined,
                  },
                ],
              },
              "tags": Array [
                Object {
                  "selected": true,
                  "tag": "one",
                  "text": "one",
                },
                Object {
                  "selected": true,
                  "tag": "two",
                  "text": "two",
                },
              ],
            },
            "wrappingComponentProps": null,
          },
          "mode": 0,
          "nextEffect": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 78,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 78,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1073741823,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="container high-contrast-coloring margin-bottom radius "
                  >
                    <div
                      class="flex flex--column"
                    >
                      <h6>
                        Tags
                      </h6>
                    </div>
                    <div
                      class="flex"
                    >
                      <div>
                        <button
                          class="btn btn--inverted margin-right"
                          data-testid="allBtn"
                          type="button"
                        >
                          All
                        </button>
                      </div>
                      <div>
                        <button
                          class="btn radius-top-left tag-one-inverted-coloring"
                          data-testid="tag-btn-one"
                          type="button"
                        >
                          one
                        </button>
                        <button
                          class="btn radius-bottom-right tag-two-inverted-coloring"
                          data-testid="tag-btn-two"
                          type="button"
                        >
                          two
                        </button>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 17,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "onSelectionChange": [MockFunction] {
                            "calls": Array [
                              Array [
                                Array [
                                  Object {
                                    "selected": true,
                                    "tag": "one",
                                    "text": "one",
                                  },
                                  Object {
                                    "selected": true,
                                    "tag": "two",
                                    "text": "two",
                                  },
                                ],
                              ],
                            ],
                            "results": Array [
                              Object {
                                "isThrow": false,
                                "value": undefined,
                              },
                            ],
                          },
                          "tags": Array [
                            Object {
                              "selected": true,
                              "tag": "one",
                              "text": "one",
                            },
                            Object {
                              "selected": true,
                              "tag": "two",
                              "text": "two",
                            },
                          ],
                        }
                      }
                      wrappingComponentProps={null}
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "onSelectionChange": [MockFunction] {
                            "calls": Array [
                              Array [
                                Array [
                                  Object {
                                    "selected": true,
                                    "tag": "one",
                                    "text": "one",
                                  },
                                  Object {
                                    "selected": true,
                                    "tag": "two",
                                    "text": "two",
                                  },
                                ],
                              ],
                            ],
                            "results": Array [
                              Object {
                                "isThrow": false,
                                "value": undefined,
                              },
                            ],
                          },
                          "tags": Array [
                            Object {
                              "selected": true,
                              "tag": "one",
                              "text": "one",
                            },
                            Object {
                              "selected": true,
                              "tag": "two",
                              "text": "two",
                            },
                          ],
                        }
                      }
                      wrappingComponentProps={null}
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "onSelectionChange": [MockFunction] {
                      "calls": Array [
                        Array [
                          Array [
                            Object {
                              "selected": true,
                              "tag": "one",
                              "text": "one",
                            },
                            Object {
                              "selected": true,
                              "tag": "two",
                              "text": "two",
                            },
                          ],
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": undefined,
                        },
                      ],
                    },
                    "tags": Array [
                      Object {
                        "selected": true,
                        "tag": "one",
                        "text": "one",
                      },
                      Object {
                        "selected": true,
                        "tag": "two",
                        "text": "two",
                      },
                    ],
                  }
                }
                wrappingComponentProps={null}
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                  class="container high-contrast-coloring margin-bottom radius "
                >
                  <div
                    class="flex flex--column"
                  >
                    <h6>
                      Tags
                    </h6>
                  </div>
                  <div
                    class="flex"
                  >
                    <div>
                      <button
                        class="btn btn--inverted margin-right"
                        data-testid="allBtn"
                        type="button"
                      >
                        All
                      </button>
                    </div>
                    <div>
                      <button
                        class="btn radius-top-left tag-one-inverted-coloring"
                        data-testid="tag-btn-one"
                        type="button"
                      >
                        one
                      </button>
                      <button
                        class="btn radius-bottom-right tag-two-inverted-coloring"
                        data-testid="tag-btn-two"
                        type="button"
                      >
                        two
                      </button>
                    </div>
                  </div>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 17,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "pingCache": null,
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "onSelectionChange": [MockFunction] {
                        "calls": Array [
                          Array [
                            Array [
                              Object {
                                "selected": true,
                                "tag": "one",
                                "text": "one",
                              },
                              Object {
                                "selected": true,
                                "tag": "two",
                                "text": "two",
                              },
                            ],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": undefined,
                          },
                        ],
                      },
                      "tags": Array [
                        Object {
                          "selected": true,
                          "tag": "one",
                          "text": "one",
                        },
                        Object {
                          "selected": true,
                          "tag": "two",
                          "text": "two",
                        },
                      ],
                    }
                  }
                  wrappingComponentProps={null}
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "onSelectionChange": [MockFunction] {
                "calls": Array [
                  Array [
                    Array [
                      Object {
                        "selected": true,
                        "tag": "one",
                        "text": "one",
                      },
                      Object {
                        "selected": true,
                        "tag": "two",
                        "text": "two",
                      },
                    ],
                  ],
                ],
                "results": Array [
                  Object {
                    "isThrow": false,
                    "value": undefined,
                  },
                ],
              },
              "tags": Array [
                Object {
                  "selected": true,
                  "tag": "one",
                  "text": "one",
                },
                Object {
                  "selected": true,
                  "tag": "two",
                  "text": "two",
                },
              ],
            },
            "wrappingComponentProps": null,
          },
          "ref": null,
          "return": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 78,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 78,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1073741823,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="container high-contrast-coloring margin-bottom radius "
                  >
                    <div
                      class="flex flex--column"
                    >
                      <h6>
                        Tags
                      </h6>
                    </div>
                    <div
                      class="flex"
                    >
                      <div>
                        <button
                          class="btn btn--inverted margin-right"
                          data-testid="allBtn"
                          type="button"
                        >
                          All
                        </button>
                      </div>
                      <div>
                        <button
                          class="btn radius-top-left tag-one-inverted-coloring"
                          data-testid="tag-btn-one"
                          type="button"
                        >
                          one
                        </button>
                        <button
                          class="btn radius-bottom-right tag-two-inverted-coloring"
                          data-testid="tag-btn-two"
                          type="button"
                        >
                          two
                        </button>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 17,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "onSelectionChange": [MockFunction] {
                            "calls": Array [
                              Array [
                                Array [
                                  Object {
                                    "selected": true,
                                    "tag": "one",
                                    "text": "one",
                                  },
                                  Object {
                                    "selected": true,
                                    "tag": "two",
                                    "text": "two",
                                  },
                                ],
                              ],
                            ],
                            "results": Array [
                              Object {
                                "isThrow": false,
                                "value": undefined,
                              },
                            ],
                          },
                          "tags": Array [
                            Object {
                              "selected": true,
                              "tag": "one",
                              "text": "one",
                            },
                            Object {
                              "selected": true,
                              "tag": "two",
                              "text": "two",
                            },
                          ],
                        }
                      }
                      wrappingComponentProps={null}
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "onSelectionChange": [MockFunction] {
                            "calls": Array [
                              Array [
                                Array [
                                  Object {
                                    "selected": true,
                                    "tag": "one",
                                    "text": "one",
                                  },
                                  Object {
                                    "selected": true,
                                    "tag": "two",
                                    "text": "two",
                                  },
                                ],
                              ],
                            ],
                            "results": Array [
                              Object {
                                "isThrow": false,
                                "value": undefined,
                              },
                            ],
                          },
                          "tags": Array [
                            Object {
                              "selected": true,
                              "tag": "one",
                              "text": "one",
                            },
                            Object {
                              "selected": true,
                              "tag": "two",
                              "text": "two",
                            },
                          ],
                        }
                      }
                      wrappingComponentProps={null}
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "onSelectionChange": [MockFunction] {
                      "calls": Array [
                        Array [
                          Array [
                            Object {
                              "selected": true,
                              "tag": "one",
                              "text": "one",
                            },
                            Object {
                              "selected": true,
                              "tag": "two",
                              "text": "two",
                            },
                          ],
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": undefined,
                        },
                      ],
                    },
                    "tags": Array [
                      Object {
                        "selected": true,
                        "tag": "one",
                        "text": "one",
                      },
                      Object {
                        "selected": true,
                        "tag": "two",
                        "text": "two",
                      },
                    ],
                  }
                }
                wrappingComponentProps={null}
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                  class="container high-contrast-coloring margin-bottom radius "
                >
                  <div
                    class="flex flex--column"
                  >
                    <h6>
                      Tags
                    </h6>
                  </div>
                  <div
                    class="flex"
                  >
                    <div>
                      <button
                        class="btn btn--inverted margin-right"
                        data-testid="allBtn"
                        type="button"
                      >
                        All
                      </button>
                    </div>
                    <div>
                      <button
                        class="btn radius-top-left tag-one-inverted-coloring"
                        data-testid="tag-btn-one"
                        type="button"
                      >
                        one
                      </button>
                      <button
                        class="btn radius-bottom-right tag-two-inverted-coloring"
                        data-testid="tag-btn-two"
                        type="button"
                      >
                        two
                      </button>
                    </div>
                  </div>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 17,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "pingCache": null,
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "onSelectionChange": [MockFunction] {
                        "calls": Array [
                          Array [
                            Array [
                              Object {
                                "selected": true,
                                "tag": "one",
                                "text": "one",
                              },
                              Object {
                                "selected": true,
                                "tag": "two",
                                "text": "two",
                              },
                            ],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": undefined,
                          },
                        ],
                      },
                      "tags": Array [
                        Object {
                          "selected": true,
                          "tag": "one",
                          "text": "one",
                        },
                        Object {
                          "selected": true,
                          "tag": "two",
                          "text": "two",
                        },
                      ],
                    }
                  }
                  wrappingComponentProps={null}
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "onSelectionChange": [MockFunction] {
                  "calls": Array [
                    Array [
                      Array [
                        Object {
                          "selected": true,
                          "tag": "one",
                          "text": "one",
                        },
                        Object {
                          "selected": true,
                          "tag": "two",
                          "text": "two",
                        },
                      ],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "isThrow": false,
                      "value": undefined,
                    },
                  ],
                },
                "tags": Array [
                  Object {
                    "selected": true,
                    "tag": "one",
                    "text": "one",
                  },
                  Object {
                    "selected": true,
                    "tag": "two",
                    "text": "two",
                  },
                ],
              },
              "wrappingComponentProps": null,
            },
            "refs": Object {},
            "rootFinderInstance": null,
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "onSelectionChange": [MockFunction] {
                  "calls": Array [
                    Array [
                      Array [
                        Object {
                          "selected": true,
                          "tag": "one",
                          "text": "one",
                        },
                        Object {
                          "selected": true,
                          "tag": "two",
                          "text": "two",
                        },
                      ],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "isThrow": false,
                      "value": undefined,
                    },
                  ],
                },
                "tags": Array [
                  Object {
                    "selected": true,
                    "tag": "one",
                    "text": "one",
                  },
                  Object {
                    "selected": true,
                    "tag": "two",
                    "text": "two",
                  },
                ],
              },
              "wrappingComponentProps": null,
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "selfBaseDuration": 0,
        "sibling": null,
        "stateNode": [Circular],
        "tag": 1,
        "treeBaseDuration": 0,
        "type": [Function],
        "updateQueue": null,
      },
      "_reactInternalInstance": Object {},
      "areAllSelected": [Function],
      "context": Object {},
      "props": Object {
        "onSelectionChange": [MockFunction] {
          "calls": Array [
            Array [
              Array [
                Object {
                  "selected": true,
                  "tag": "one",
                  "text": "one",
                },
                Object {
                  "selected": true,
                  "tag": "two",
                  "text": "two",
                },
              ],
            ],
          ],
          "results": Array [
            Object {
              "isThrow": false,
              "value": undefined,
            },
          ],
        },
        "tags": Array [
          Object {
            "selected": true,
            "tag": "one",
            "text": "one",
          },
          Object {
            "selected": true,
            "tag": "two",
            "text": "two",
          },
        ],
      },
      "refs": Object {},
      "state": null,
      "toggleAll": [Function],
      "toggleOne": [Function],
      "updater": Object {
        "enqueueForceUpdate": [Function],
        "enqueueReplaceState": [Function],
        "enqueueSetState": [Function],
        "isMounted": [Function],
      },
    },
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "onSelectionChange": [MockFunction] {
        "calls": Array [
          Array [
            Array [
              Object {
                "selected": true,
                "tag": "one",
                "text": "one",
              },
              Object {
                "selected": true,
                "tag": "two",
                "text": "two",
              },
            ],
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      },
      "tags": Array [
        Object {
          "selected": true,
          "tag": "one",
          "text": "one",
        },
        Object {
          "selected": true,
          "tag": "two",
          "text": "two",
        },
      ],
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <div
          className="flex"
        >
          <div>
            <Button
              className="btn btn--inverted margin-right"
              data-testid="allBtn"
              onClick={[Function]}
              type="button"
            >
              All
            </Button>
          </div>
          <div>
            <Button
              className="btn radius-top-left tag-one-inverted-coloring"
              data-testid="tag-btn-one"
              onClick={[Function]}
              type="button"
            >
              one
            </Button>
            <Button
              className="btn radius-bottom-right tag-two-inverted-coloring"
              data-testid="tag-btn-two"
              onClick={[Function]}
              type="button"
            >
              two
            </Button>
          </div>
        </div>,
        "title": "Tags",
      },
      "ref": null,
      "rendered": Object {
        "instance": <div
          class="container high-contrast-coloring margin-bottom radius "
        >
          <div
            class="flex flex--column"
          >
            <h6>
              Tags
            </h6>
          </div>
          <div
            class="flex"
          >
            <div>
              <button
                class="btn btn--inverted margin-right"
                data-testid="allBtn"
                type="button"
              >
                All
              </button>
            </div>
            <div>
              <button
                class="btn radius-top-left tag-one-inverted-coloring"
                data-testid="tag-btn-one"
                type="button"
              >
                one
              </button>
              <button
                class="btn radius-bottom-right tag-two-inverted-coloring"
                data-testid="tag-btn-two"
                type="button"
              >
                two
              </button>
            </div>
          </div>
        </div>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="flex flex--column"
            >
              <h6>
                Tags
              </h6>
            </div>,
            <div
              className="flex"
            >
              <div>
                <Button
                  className="btn btn--inverted margin-right"
                  data-testid="allBtn"
                  onClick={[Function]}
                  type="button"
                >
                  All
                </Button>
              </div>
              <div>
                <Button
                  className="btn radius-top-left tag-one-inverted-coloring"
                  data-testid="tag-btn-one"
                  onClick={[Function]}
                  type="button"
                >
                  one
                </Button>
                <Button
                  className="btn radius-bottom-right tag-two-inverted-coloring"
                  data-testid="tag-btn-two"
                  onClick={[Function]}
                  type="button"
                >
                  two
                </Button>
              </div>
            </div>,
          ],
          "className": "container high-contrast-coloring margin-bottom radius ",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <div
              class="flex flex--column"
            >
              <h6>
                Tags
              </h6>
            </div>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h6>
                  Tags
                </h6>,
                undefined,
              ],
              "className": "flex flex--column",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <h6>
                  Tags
                </h6>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Tags",
                },
                "ref": null,
                "rendered": Array [
                  "Tags",
                ],
                "type": "h6",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": <div
              class="flex"
            >
              <div>
                <button
                  class="btn btn--inverted margin-right"
                  data-testid="allBtn"
                  type="button"
                >
                  All
                </button>
              </div>
              <div>
                <button
                  class="btn radius-top-left tag-one-inverted-coloring"
                  data-testid="tag-btn-one"
                  type="button"
                >
                  one
                </button>
                <button
                  class="btn radius-bottom-right tag-two-inverted-coloring"
                  data-testid="tag-btn-two"
                  type="button"
                >
                  two
                </button>
              </div>
            </div>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div>
                  <Button
                    className="btn btn--inverted margin-right"
                    data-testid="allBtn"
                    onClick={[Function]}
                    type="button"
                  >
                    All
                  </Button>
                </div>,
                <div>
                  <Button
                    className="btn radius-top-left tag-one-inverted-coloring"
                    data-testid="tag-btn-one"
                    onClick={[Function]}
                    type="button"
                  >
                    one
                  </Button>
                  <Button
                    className="btn radius-bottom-right tag-two-inverted-coloring"
                    data-testid="tag-btn-two"
                    onClick={[Function]}
                    type="button"
                  >
                    two
                  </Button>
                </div>,
              ],
              "className": "flex",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <div>
                  <button
                    class="btn btn--inverted margin-right"
                    data-testid="allBtn"
                    type="button"
                  >
                    All
                  </button>
                </div>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Button
                    className="btn btn--inverted margin-right"
                    data-testid="allBtn"
                    onClick={[Function]}
                    type="button"
                  >
                    All
                  </Button>,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": "All",
                      "className": "btn btn--inverted margin-right",
                      "data-testid": "allBtn",
                      "onClick": [Function],
                      "type": "button",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": <button
                        class="btn btn--inverted margin-right"
                        data-testid="allBtn"
                        type="button"
                      >
                        All
                      </button>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "All",
                        "className": "btn btn--inverted margin-right",
                        "data-testid": "allBtn",
                        "onClick": [Function],
                        "type": "button",
                      },
                      "ref": null,
                      "rendered": Array [
                        "All",
                      ],
                      "type": "button",
                    },
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": <div>
                  <button
                    class="btn radius-top-left tag-one-inverted-coloring"
                    data-testid="tag-btn-one"
                    type="button"
                  >
                    one
                  </button>
                  <button
                    class="btn radius-bottom-right tag-two-inverted-coloring"
                    data-testid="tag-btn-two"
                    type="button"
                  >
                    two
                  </button>
                </div>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <Button
                      className="btn radius-top-left tag-one-inverted-coloring"
                      data-testid="tag-btn-one"
                      onClick={[Function]}
                      type="button"
                    >
                      one
                    </Button>,
                    <Button
                      className="btn radius-bottom-right tag-two-inverted-coloring"
                      data-testid="tag-btn-two"
                      onClick={[Function]}
                      type="button"
                    >
                      two
                    </Button>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "tag-filter-one-0",
                    "nodeType": "function",
                    "props": Object {
                      "children": "one",
                      "className": "btn radius-top-left tag-one-inverted-coloring",
                      "data-testid": "tag-btn-one",
                      "onClick": [Function],
                      "type": "button",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": <button
                        class="btn radius-top-left tag-one-inverted-coloring"
                        data-testid="tag-btn-one"
                        type="button"
                      >
                        one
                      </button>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "one",
                        "className": "btn radius-top-left tag-one-inverted-coloring",
                        "data-testid": "tag-btn-one",
                        "onClick": [Function],
                        "type": "button",
                      },
                      "ref": null,
                      "rendered": Array [
                        "one",
                      ],
                      "type": "button",
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "tag-filter-two-1",
                    "nodeType": "function",
                    "props": Object {
                      "children": "two",
                      "className": "btn radius-bottom-right tag-two-inverted-coloring",
                      "data-testid": "tag-btn-two",
                      "onClick": [Function],
                      "type": "button",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": <button
                        class="btn radius-bottom-right tag-two-inverted-coloring"
                        data-testid="tag-btn-two"
                        type="button"
                      >
                        two
                      </button>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "two",
                        "className": "btn radius-bottom-right tag-two-inverted-coloring",
                        "data-testid": "tag-btn-two",
                        "onClick": [Function],
                        "type": "button",
                      },
                      "ref": null,
                      "rendered": Array [
                        "two",
                      ],
                      "type": "button",
                    },
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": TagFilter {
        "_reactInternalFiber": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 81,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 80,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "onSelectionChange": [MockFunction] {
                  "calls": Array [
                    Array [
                      Array [
                        Object {
                          "selected": true,
                          "tag": "one",
                          "text": "one",
                        },
                        Object {
                          "selected": true,
                          "tag": "two",
                          "text": "two",
                        },
                      ],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "isThrow": false,
                      "value": undefined,
                    },
                  ],
                },
                "tags": Array [
                  Object {
                    "selected": true,
                    "tag": "one",
                    "text": "one",
                  },
                  Object {
                    "selected": true,
                    "tag": "two",
                    "text": "two",
                  },
                ],
              },
              "wrappingComponentProps": null,
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "onSelectionChange": [MockFunction] {
                  "calls": Array [
                    Array [
                      Array [
                        Object {
                          "selected": true,
                          "tag": "one",
                          "text": "one",
                        },
                        Object {
                          "selected": true,
                          "tag": "two",
                          "text": "two",
                        },
                      ],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "isThrow": false,
                      "value": undefined,
                    },
                  ],
                },
                "tags": Array [
                  Object {
                    "selected": true,
                    "tag": "one",
                    "text": "one",
                  },
                  Object {
                    "selected": true,
                    "tag": "two",
                    "text": "two",
                  },
                ],
              },
              "wrappingComponentProps": null,
            },
            "mode": 0,
            "nextEffect": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 78,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 78,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1073741823,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                      class="container high-contrast-coloring margin-bottom radius "
                    >
                      <div
                        class="flex flex--column"
                      >
                        <h6>
                          Tags
                        </h6>
                      </div>
                      <div
                        class="flex"
                      >
                        <div>
                          <button
                            class="btn btn--inverted margin-right"
                            data-testid="allBtn"
                            type="button"
                          >
                            All
                          </button>
                        </div>
                        <div>
                          <button
                            class="btn radius-top-left tag-one-inverted-coloring"
                            data-testid="tag-btn-one"
                            type="button"
                          >
                            one
                          </button>
                          <button
                            class="btn radius-bottom-right tag-two-inverted-coloring"
                            data-testid="tag-btn-two"
                            type="button"
                          >
                            two
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 17,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "pingCache": null,
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "onSelectionChange": [MockFunction] {
                              "calls": Array [
                                Array [
                                  Array [
                                    Object {
                                      "selected": true,
                                      "tag": "one",
                                      "text": "one",
                                    },
                                    Object {
                                      "selected": true,
                                      "tag": "two",
                                      "text": "two",
                                    },
                                  ],
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "isThrow": false,
                                  "value": undefined,
                                },
                              ],
                            },
                            "tags": Array [
                              Object {
                                "selected": true,
                                "tag": "one",
                                "text": "one",
                              },
                              Object {
                                "selected": true,
                                "tag": "two",
                                "text": "two",
                              },
                            ],
                          }
                        }
                        wrappingComponentProps={null}
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "onSelectionChange": [MockFunction] {
                              "calls": Array [
                                Array [
                                  Array [
                                    Object {
                                      "selected": true,
                                      "tag": "one",
                                      "text": "one",
                                    },
                                    Object {
                                      "selected": true,
                                      "tag": "two",
                                      "text": "two",
                                    },
                                  ],
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "isThrow": false,
                                  "value": undefined,
                                },
                              ],
                            },
                            "tags": Array [
                              Object {
                                "selected": true,
                                "tag": "one",
                                "text": "one",
                              },
                              Object {
                                "selected": true,
                                "tag": "two",
                                "text": "two",
                              },
                            ],
                          }
                        }
                        wrappingComponentProps={null}
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "onSelectionChange": [MockFunction] {
                        "calls": Array [
                          Array [
                            Array [
                              Object {
                                "selected": true,
                                "tag": "one",
                                "text": "one",
                              },
                              Object {
                                "selected": true,
                                "tag": "two",
                                "text": "two",
                              },
                            ],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": undefined,
                          },
                        ],
                      },
                      "tags": Array [
                        Object {
                          "selected": true,
                          "tag": "one",
                          "text": "one",
                        },
                        Object {
                          "selected": true,
                          "tag": "two",
                          "text": "two",
                        },
                      ],
                    }
                  }
                  wrappingComponentProps={null}
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="container high-contrast-coloring margin-bottom radius "
                  >
                    <div
                      class="flex flex--column"
                    >
                      <h6>
                        Tags
                      </h6>
                    </div>
                    <div
                      class="flex"
                    >
                      <div>
                        <button
                          class="btn btn--inverted margin-right"
                          data-testid="allBtn"
                          type="button"
                        >
                          All
                        </button>
                      </div>
                      <div>
                        <button
                          class="btn radius-top-left tag-one-inverted-coloring"
                          data-testid="tag-btn-one"
                          type="button"
                        >
                          one
                        </button>
                        <button
                          class="btn radius-bottom-right tag-two-inverted-coloring"
                          data-testid="tag-btn-two"
                          type="button"
                        >
                          two
                        </button>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 17,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "onSelectionChange": [MockFunction] {
                          "calls": Array [
                            Array [
                              Array [
                                Object {
                                  "selected": true,
                                  "tag": "one",
                                  "text": "one",
                                },
                                Object {
                                  "selected": true,
                                  "tag": "two",
                                  "text": "two",
                                },
                              ],
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                          ],
                        },
                        "tags": Array [
                          Object {
                            "selected": true,
                            "tag": "one",
                            "text": "one",
                          },
                          Object {
                            "selected": true,
                            "tag": "two",
                            "text": "two",
                          },
                        ],
                      }
                    }
                    wrappingComponentProps={null}
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "onSelectionChange": [MockFunction] {
                  "calls": Array [
                    Array [
                      Array [
                        Object {
                          "selected": true,
                          "tag": "one",
                          "text": "one",
                        },
                        Object {
                          "selected": true,
                          "tag": "two",
                          "text": "two",
                        },
                      ],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "isThrow": false,
                      "value": undefined,
                    },
                  ],
                },
                "tags": Array [
                  Object {
                    "selected": true,
                    "tag": "one",
                    "text": "one",
                  },
                  Object {
                    "selected": true,
                    "tag": "two",
                    "text": "two",
                  },
                ],
              },
              "wrappingComponentProps": null,
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 78,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 78,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1073741823,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                      class="container high-contrast-coloring margin-bottom radius "
                    >
                      <div
                        class="flex flex--column"
                      >
                        <h6>
                          Tags
                        </h6>
                      </div>
                      <div
                        class="flex"
                      >
                        <div>
                          <button
                            class="btn btn--inverted margin-right"
                            data-testid="allBtn"
                            type="button"
                          >
                            All
                          </button>
                        </div>
                        <div>
                          <button
                            class="btn radius-top-left tag-one-inverted-coloring"
                            data-testid="tag-btn-one"
                            type="button"
                          >
                            one
                          </button>
                          <button
                            class="btn radius-bottom-right tag-two-inverted-coloring"
                            data-testid="tag-btn-two"
                            type="button"
                          >
                            two
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 17,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "pingCache": null,
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "onSelectionChange": [MockFunction] {
                              "calls": Array [
                                Array [
                                  Array [
                                    Object {
                                      "selected": true,
                                      "tag": "one",
                                      "text": "one",
                                    },
                                    Object {
                                      "selected": true,
                                      "tag": "two",
                                      "text": "two",
                                    },
                                  ],
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "isThrow": false,
                                  "value": undefined,
                                },
                              ],
                            },
                            "tags": Array [
                              Object {
                                "selected": true,
                                "tag": "one",
                                "text": "one",
                              },
                              Object {
                                "selected": true,
                                "tag": "two",
                                "text": "two",
                              },
                            ],
                          }
                        }
                        wrappingComponentProps={null}
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "onSelectionChange": [MockFunction] {
                              "calls": Array [
                                Array [
                                  Array [
                                    Object {
                                      "selected": true,
                                      "tag": "one",
                                      "text": "one",
                                    },
                                    Object {
                                      "selected": true,
                                      "tag": "two",
                                      "text": "two",
                                    },
                                  ],
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "isThrow": false,
                                  "value": undefined,
                                },
                              ],
                            },
                            "tags": Array [
                              Object {
                                "selected": true,
                                "tag": "one",
                                "text": "one",
                              },
                              Object {
                                "selected": true,
                                "tag": "two",
                                "text": "two",
                              },
                            ],
                          }
                        }
                        wrappingComponentProps={null}
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "onSelectionChange": [MockFunction] {
                        "calls": Array [
                          Array [
                            Array [
                              Object {
                                "selected": true,
                                "tag": "one",
                                "text": "one",
                              },
                              Object {
                                "selected": true,
                                "tag": "two",
                                "text": "two",
                              },
                            ],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": undefined,
                          },
                        ],
                      },
                      "tags": Array [
                        Object {
                          "selected": true,
                          "tag": "one",
                          "text": "one",
                        },
                        Object {
                          "selected": true,
                          "tag": "two",
                          "text": "two",
                        },
                      ],
                    }
                  }
                  wrappingComponentProps={null}
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="container high-contrast-coloring margin-bottom radius "
                  >
                    <div
                      class="flex flex--column"
                    >
                      <h6>
                        Tags
                      </h6>
                    </div>
                    <div
                      class="flex"
                    >
                      <div>
                        <button
                          class="btn btn--inverted margin-right"
                          data-testid="allBtn"
                          type="button"
                        >
                          All
                        </button>
                      </div>
                      <div>
                        <button
                          class="btn radius-top-left tag-one-inverted-coloring"
                          data-testid="tag-btn-one"
                          type="button"
                        >
                          one
                        </button>
                        <button
                          class="btn radius-bottom-right tag-two-inverted-coloring"
                          data-testid="tag-btn-two"
                          type="button"
                        >
                          two
                        </button>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 17,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "onSelectionChange": [MockFunction] {
                          "calls": Array [
                            Array [
                              Array [
                                Object {
                                  "selected": true,
                                  "tag": "one",
                                  "text": "one",
                                },
                                Object {
                                  "selected": true,
                                  "tag": "two",
                                  "text": "two",
                                },
                              ],
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                          ],
                        },
                        "tags": Array [
                          Object {
                            "selected": true,
                            "tag": "one",
                            "text": "one",
                          },
                          Object {
                            "selected": true,
                            "tag": "two",
                            "text": "two",
                          },
                        ],
                      }
                    }
                    wrappingComponentProps={null}
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "onSelectionChange": [MockFunction] {
                    "calls": Array [
                      Array [
                        Array [
                          Object {
                            "selected": true,
                            "tag": "one",
                            "text": "one",
                          },
                          Object {
                            "selected": true,
                            "tag": "two",
                            "text": "two",
                          },
                        ],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "isThrow": false,
                        "value": undefined,
                      },
                    ],
                  },
                  "tags": Array [
                    Object {
                      "selected": true,
                      "tag": "one",
                      "text": "one",
                    },
                    Object {
                      "selected": true,
                      "tag": "two",
                      "text": "two",
                    },
                  ],
                },
                "wrappingComponentProps": null,
              },
              "refs": Object {},
              "rootFinderInstance": null,
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "onSelectionChange": [MockFunction] {
                    "calls": Array [
                      Array [
                        Array [
                          Object {
                            "selected": true,
                            "tag": "one",
                            "text": "one",
                          },
                          Object {
                            "selected": true,
                            "tag": "two",
                            "text": "two",
                          },
                        ],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "isThrow": false,
                        "value": undefined,
                      },
                    ],
                  },
                  "tags": Array [
                    Object {
                      "selected": true,
                      "tag": "one",
                      "text": "one",
                    },
                    Object {
                      "selected": true,
                      "tag": "two",
                      "text": "two",
                    },
                  ],
                },
                "wrappingComponentProps": null,
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 82,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\TagFilter\\\\TagFilter.js",
              "lineNumber": 56,
            },
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 83,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\Card\\\\Card.js",
                "lineNumber": 16,
              },
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 84,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\Card\\\\Card.js",
                  "lineNumber": 18,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 86,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\Card\\\\Card.js",
                    "lineNumber": 19,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "contextDependencies": null,
                  "effectTag": 0,
                  "elementType": "h6",
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "Tags",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "Tags",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": <h6>
                    Tags
                  </h6>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "h6",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": "div",
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <h6>
                      Tags
                    </h6>,
                    undefined,
                  ],
                  "className": "flex flex--column",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <h6>
                      Tags
                    </h6>,
                    undefined,
                  ],
                  "className": "flex flex--column",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 85,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\TagFilter\\\\TagFilter.js",
                    "lineNumber": 57,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 87,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\TagFilter\\\\TagFilter.js",
                      "lineNumber": 58,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 89,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\TagFilter\\\\TagFilter.js",
                        "lineNumber": 59,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 90,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\Button\\\\Button.js",
                          "lineNumber": 3,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 0,
                        "elementType": "button",
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "All",
                          "className": "btn btn--inverted margin-right",
                          "data-testid": "allBtn",
                          "onClick": [Function],
                          "type": "button",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "All",
                          "className": "btn btn--inverted margin-right",
                          "data-testid": "allBtn",
                          "onClick": [Function],
                          "type": "button",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <button
                          class="btn btn--inverted margin-right"
                          data-testid="allBtn"
                          type="button"
                        >
                          All
                        </button>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "button",
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 1,
                      "elementType": [Function],
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "All",
                        "className": "btn btn--inverted margin-right",
                        "data-testid": "allBtn",
                        "onClick": [Function],
                        "type": "button",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "All",
                        "className": "btn btn--inverted margin-right",
                        "data-testid": "allBtn",
                        "onClick": [Function],
                        "type": "button",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": null,
                      "tag": 0,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 0,
                    "elementType": "div",
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": <Button
                        className="btn btn--inverted margin-right"
                        data-testid="allBtn"
                        onClick={[Function]}
                        type="button"
                      >
                        All
                      </Button>,
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <Button
                        className="btn btn--inverted margin-right"
                        data-testid="allBtn"
                        onClick={[Function]}
                        type="button"
                      >
                        All
                      </Button>,
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 88,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\TagFilter\\\\TagFilter.js",
                        "lineNumber": 68,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 91,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\TagFilter\\\\TagFilter.js",
                          "lineNumber": 82,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 93,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\Button\\\\Button.js",
                            "lineNumber": 3,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "contextDependencies": null,
                          "effectTag": 0,
                          "elementType": "button",
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "one",
                            "className": "btn radius-top-left tag-one-inverted-coloring",
                            "data-testid": "tag-btn-one",
                            "onClick": [Function],
                            "type": "button",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "one",
                            "className": "btn radius-top-left tag-one-inverted-coloring",
                            "data-testid": "tag-btn-one",
                            "onClick": [Function],
                            "type": "button",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <button
                            class="btn radius-top-left tag-one-inverted-coloring"
                            data-testid="tag-btn-one"
                            type="button"
                          >
                            one
                          </button>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "button",
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 1,
                        "elementType": [Function],
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": "tag-filter-one-0",
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "one",
                          "className": "btn radius-top-left tag-one-inverted-coloring",
                          "data-testid": "tag-btn-one",
                          "onClick": [Function],
                          "type": "button",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "one",
                          "className": "btn radius-top-left tag-one-inverted-coloring",
                          "data-testid": "tag-btn-one",
                          "onClick": [Function],
                          "type": "button",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 92,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\TagFilter\\\\TagFilter.js",
                            "lineNumber": 82,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 94,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "C:\\\\Users\\\\smclean\\\\Documents\\\\Development\\\\React\\\\web\\\\project-walker\\\\src\\\\components\\\\Button\\\\Button.js",
                              "lineNumber": 3,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "contextDependencies": null,
                            "effectTag": 0,
                            "elementType": "button",
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "two",
                              "className": "btn radius-bottom-right tag-two-inverted-coloring",
                              "data-testid": "tag-btn-two",
                              "onClick": [Function],
                              "type": "button",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": "two",
                              "className": "btn radius-bottom-right tag-two-inverted-coloring",
                              "data-testid": "tag-btn-two",
                              "onClick": [Function],
                              "type": "button",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <button
                              class="btn radius-bottom-right tag-two-inverted-coloring"
                              data-testid="tag-btn-two"
                              type="button"
                            >
                              two
                            </button>,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "button",
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "contextDependencies": null,
                          "effectTag": 1,
                          "elementType": [Function],
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 1,
                          "key": "tag-filter-two-1",
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "two",
                            "className": "btn radius-bottom-right tag-two-inverted-coloring",
                            "data-testid": "tag-btn-two",
                            "onClick": [Function],
                            "type": "button",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "two",
                            "className": "btn radius-bottom-right tag-two-inverted-coloring",
                            "data-testid": "tag-btn-two",
                            "onClick": [Function],
                            "type": "button",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": null,
                          "tag": 0,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "stateNode": null,
                        "tag": 0,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 0,
                      "elementType": "div",
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 1,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <Button
                            className="btn radius-top-left tag-one-inverted-coloring"
                            data-testid="tag-btn-one"
                            onClick={[Function]}
                            type="button"
                          >
                            one
                          </Button>,
                          <Button
                            className="btn radius-bottom-right tag-two-inverted-coloring"
                            data-testid="tag-btn-two"
                            onClick={[Function]}
                            type="button"
                          >
                            two
                          </Button>,
                        ],
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <Button
                            className="btn radius-top-left tag-one-inverted-coloring"
                            data-testid="tag-btn-one"
                            onClick={[Function]}
                            type="button"
                          >
                            one
                          </Button>,
                          <Button
                            className="btn radius-bottom-right tag-two-inverted-coloring"
                            data-testid="tag-btn-two"
                            onClick={[Function]}
                            type="button"
                          >
                            two
                          </Button>,
                        ],
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <div>
                        <button
                          class="btn radius-top-left tag-one-inverted-coloring"
                          data-testid="tag-btn-one"
                          type="button"
                        >
                          one
                        </button>
                        <button
                          class="btn radius-bottom-right tag-two-inverted-coloring"
                          data-testid="tag-btn-two"
                          type="button"
                        >
                          two
                        </button>
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "stateNode": <div>
                      <button
                        class="btn btn--inverted margin-right"
                        data-testid="allBtn"
                        type="button"
                      >
                        All
                      </button>
                    </div>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "contextDependencies": null,
                  "effectTag": 0,
                  "elementType": "div",
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 1,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <div>
                        <Button
                          className="btn btn--inverted margin-right"
                          data-testid="allBtn"
                          onClick={[Function]}
                          type="button"
                        >
                          All
                        </Button>
                      </div>,
                      <div>
                        <Button
                          className="btn radius-top-left tag-one-inverted-coloring"
                          data-testid="tag-btn-one"
                          onClick={[Function]}
                          type="button"
                        >
                          one
                        </Button>
                        <Button
                          className="btn radius-bottom-right tag-two-inverted-coloring"
                          data-testid="tag-btn-two"
                          onClick={[Function]}
                          type="button"
                        >
                          two
                        </Button>
                      </div>,
                    ],
                    "className": "flex",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <div>
                        <Button
                          className="btn btn--inverted margin-right"
                          data-testid="allBtn"
                          onClick={[Function]}
                          type="button"
                        >
                          All
                        </Button>
                      </div>,
                      <div>
                        <Button
                          className="btn radius-top-left tag-one-inverted-coloring"
                          data-testid="tag-btn-one"
                          onClick={[Function]}
                          type="button"
                        >
                          one
                        </Button>
                        <Button
                          className="btn radius-bottom-right tag-two-inverted-coloring"
                          data-testid="tag-btn-two"
                          onClick={[Function]}
                          type="button"
                        >
                          two
                        </Button>
                      </div>,
                    ],
                    "className": "flex",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": <div
                    class="flex"
                  >
                    <div>
                      <button
                        class="btn btn--inverted margin-right"
                        data-testid="allBtn"
                        type="button"
                      >
                        All
                      </button>
                    </div>
                    <div>
                      <button
                        class="btn radius-top-left tag-one-inverted-coloring"
                        data-testid="tag-btn-one"
                        type="button"
                      >
                        one
                      </button>
                      <button
                        class="btn radius-bottom-right tag-two-inverted-coloring"
                        data-testid="tag-btn-two"
                        type="button"
                      >
                        two
                      </button>
                    </div>
                  </div>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "stateNode": <div
                  class="flex flex--column"
                >
                  <h6>
                    Tags
                  </h6>
                </div>,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "div",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": "div",
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <div
                    className="flex flex--column"
                  >
                    <h6>
                      Tags
                    </h6>
                  </div>,
                  <div
                    className="flex"
                  >
                    <div>
                      <Button
                        className="btn btn--inverted margin-right"
                        data-testid="allBtn"
                        onClick={[Function]}
                        type="button"
                      >
                        All
                      </Button>
                    </div>
                    <div>
                      <Button
                        className="btn radius-top-left tag-one-inverted-coloring"
                        data-testid="tag-btn-one"
                        onClick={[Function]}
                        type="button"
                      >
                        one
                      </Button>
                      <Button
                        className="btn radius-bottom-right tag-two-inverted-coloring"
                        data-testid="tag-btn-two"
                        onClick={[Function]}
                        type="button"
                      >
                        two
                      </Button>
                    </div>
                  </div>,
                ],
                "className": "container high-contrast-coloring margin-bottom radius ",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  <div
                    className="flex flex--column"
                  >
                    <h6>
                      Tags
                    </h6>
                  </div>,
                  <div
                    className="flex"
                  >
                    <div>
                      <Button
                        className="btn btn--inverted margin-right"
                        data-testid="allBtn"
                        onClick={[Function]}
                        type="button"
                      >
                        All
                      </Button>
                    </div>
                    <div>
                      <Button
                        className="btn radius-top-left tag-one-inverted-coloring"
                        data-testid="tag-btn-one"
                        onClick={[Function]}
                        type="button"
                      >
                        one
                      </Button>
                      <Button
                        className="btn radius-bottom-right tag-two-inverted-coloring"
                        data-testid="tag-btn-two"
                        onClick={[Function]}
                        type="button"
                      >
                        two
                      </Button>
                    </div>
                  </div>,
                ],
                "className": "container high-contrast-coloring margin-bottom radius ",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": <div
                class="container high-contrast-coloring margin-bottom radius "
              >
                <div
                  class="flex flex--column"
                >
                  <h6>
                    Tags
                  </h6>
                </div>
                <div
                  class="flex"
                >
                  <div>
                    <button
                      class="btn btn--inverted margin-right"
                      data-testid="allBtn"
                      type="button"
                    >
                      All
                    </button>
                  </div>
                  <div>
                    <button
                      class="btn radius-top-left tag-one-inverted-coloring"
                      data-testid="tag-btn-one"
                      type="button"
                    >
                      one
                    </button>
                    <button
                      class="btn radius-bottom-right tag-two-inverted-coloring"
                      data-testid="tag-btn-two"
                      type="button"
                    >
                      two
                    </button>
                  </div>
                </div>
              </div>,
              "tag": 5,
              "treeBaseDuration": 0,
              "type": "div",
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": <div
                className="flex"
              >
                <div>
                  <Button
                    className="btn btn--inverted margin-right"
                    data-testid="allBtn"
                    onClick={[Function]}
                    type="button"
                  >
                    All
                  </Button>
                </div>
                <div>
                  <Button
                    className="btn radius-top-left tag-one-inverted-coloring"
                    data-testid="tag-btn-one"
                    onClick={[Function]}
                    type="button"
                  >
                    one
                  </Button>
                  <Button
                    className="btn radius-bottom-right tag-two-inverted-coloring"
                    data-testid="tag-btn-two"
                    onClick={[Function]}
                    type="button"
                  >
                    two
                  </Button>
                </div>
              </div>,
              "title": "Tags",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": <div
                className="flex"
              >
                <div>
                  <Button
                    className="btn btn--inverted margin-right"
                    data-testid="allBtn"
                    onClick={[Function]}
                    type="button"
                  >
                    All
                  </Button>
                </div>
                <div>
                  <Button
                    className="btn radius-top-left tag-one-inverted-coloring"
                    data-testid="tag-btn-one"
                    onClick={[Function]}
                    type="button"
                  >
                    one
                  </Button>
                  <Button
                    className="btn radius-bottom-right tag-two-inverted-coloring"
                    data-testid="tag-btn-two"
                    onClick={[Function]}
                    type="button"
                  >
                    two
                  </Button>
                </div>
              </div>,
              "title": "Tags",
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 0,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "contextDependencies": null,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "onSelectionChange": [MockFunction] {
              "calls": Array [
                Array [
                  Array [
                    Object {
                      "selected": true,
                      "tag": "one",
                      "text": "one",
                    },
                    Object {
                      "selected": true,
                      "tag": "two",
                      "text": "two",
                    },
                  ],
                ],
              ],
              "results": Array [
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
              ],
            },
            "tags": Array [
              Object {
                "selected": true,
                "tag": "one",
                "text": "one",
              },
              Object {
                "selected": true,
                "tag": "two",
                "text": "two",
              },
            ],
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "onSelectionChange": [MockFunction] {
              "calls": Array [
                Array [
                  Array [
                    Object {
                      "selected": true,
                      "tag": "one",
                      "text": "one",
                    },
                    Object {
                      "selected": true,
                      "tag": "two",
                      "text": "two",
                    },
                  ],
                ],
              ],
              "results": Array [
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
              ],
            },
            "tags": Array [
              Object {
                "selected": true,
                "tag": "one",
                "text": "one",
              },
              Object {
                "selected": true,
                "tag": "two",
                "text": "two",
              },
            ],
          },
          "ref": null,
          "return": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 80,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "onSelectionChange": [MockFunction] {
                  "calls": Array [
                    Array [
                      Array [
                        Object {
                          "selected": true,
                          "tag": "one",
                          "text": "one",
                        },
                        Object {
                          "selected": true,
                          "tag": "two",
                          "text": "two",
                        },
                      ],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "isThrow": false,
                      "value": undefined,
                    },
                  ],
                },
                "tags": Array [
                  Object {
                    "selected": true,
                    "tag": "one",
                    "text": "one",
                  },
                  Object {
                    "selected": true,
                    "tag": "two",
                    "text": "two",
                  },
                ],
              },
              "wrappingComponentProps": null,
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "onSelectionChange": [MockFunction] {
                  "calls": Array [
                    Array [
                      Array [
                        Object {
                          "selected": true,
                          "tag": "one",
                          "text": "one",
                        },
                        Object {
                          "selected": true,
                          "tag": "two",
                          "text": "two",
                        },
                      ],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "isThrow": false,
                      "value": undefined,
                    },
                  ],
                },
                "tags": Array [
                  Object {
                    "selected": true,
                    "tag": "one",
                    "text": "one",
                  },
                  Object {
                    "selected": true,
                    "tag": "two",
                    "text": "two",
                  },
                ],
              },
              "wrappingComponentProps": null,
            },
            "mode": 0,
            "nextEffect": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 78,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 78,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1073741823,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                      class="container high-contrast-coloring margin-bottom radius "
                    >
                      <div
                        class="flex flex--column"
                      >
                        <h6>
                          Tags
                        </h6>
                      </div>
                      <div
                        class="flex"
                      >
                        <div>
                          <button
                            class="btn btn--inverted margin-right"
                            data-testid="allBtn"
                            type="button"
                          >
                            All
                          </button>
                        </div>
                        <div>
                          <button
                            class="btn radius-top-left tag-one-inverted-coloring"
                            data-testid="tag-btn-one"
                            type="button"
                          >
                            one
                          </button>
                          <button
                            class="btn radius-bottom-right tag-two-inverted-coloring"
                            data-testid="tag-btn-two"
                            type="button"
                          >
                            two
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 17,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "pingCache": null,
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "onSelectionChange": [MockFunction] {
                              "calls": Array [
                                Array [
                                  Array [
                                    Object {
                                      "selected": true,
                                      "tag": "one",
                                      "text": "one",
                                    },
                                    Object {
                                      "selected": true,
                                      "tag": "two",
                                      "text": "two",
                                    },
                                  ],
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "isThrow": false,
                                  "value": undefined,
                                },
                              ],
                            },
                            "tags": Array [
                              Object {
                                "selected": true,
                                "tag": "one",
                                "text": "one",
                              },
                              Object {
                                "selected": true,
                                "tag": "two",
                                "text": "two",
                              },
                            ],
                          }
                        }
                        wrappingComponentProps={null}
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "onSelectionChange": [MockFunction] {
                              "calls": Array [
                                Array [
                                  Array [
                                    Object {
                                      "selected": true,
                                      "tag": "one",
                                      "text": "one",
                                    },
                                    Object {
                                      "selected": true,
                                      "tag": "two",
                                      "text": "two",
                                    },
                                  ],
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "isThrow": false,
                                  "value": undefined,
                                },
                              ],
                            },
                            "tags": Array [
                              Object {
                                "selected": true,
                                "tag": "one",
                                "text": "one",
                              },
                              Object {
                                "selected": true,
                                "tag": "two",
                                "text": "two",
                              },
                            ],
                          }
                        }
                        wrappingComponentProps={null}
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "onSelectionChange": [MockFunction] {
                        "calls": Array [
                          Array [
                            Array [
                              Object {
                                "selected": true,
                                "tag": "one",
                                "text": "one",
                              },
                              Object {
                                "selected": true,
                                "tag": "two",
                                "text": "two",
                              },
                            ],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": undefined,
                          },
                        ],
                      },
                      "tags": Array [
                        Object {
                          "selected": true,
                          "tag": "one",
                          "text": "one",
                        },
                        Object {
                          "selected": true,
                          "tag": "two",
                          "text": "two",
                        },
                      ],
                    }
                  }
                  wrappingComponentProps={null}
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="container high-contrast-coloring margin-bottom radius "
                  >
                    <div
                      class="flex flex--column"
                    >
                      <h6>
                        Tags
                      </h6>
                    </div>
                    <div
                      class="flex"
                    >
                      <div>
                        <button
                          class="btn btn--inverted margin-right"
                          data-testid="allBtn"
                          type="button"
                        >
                          All
                        </button>
                      </div>
                      <div>
                        <button
                          class="btn radius-top-left tag-one-inverted-coloring"
                          data-testid="tag-btn-one"
                          type="button"
                        >
                          one
                        </button>
                        <button
                          class="btn radius-bottom-right tag-two-inverted-coloring"
                          data-testid="tag-btn-two"
                          type="button"
                        >
                          two
                        </button>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 17,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "onSelectionChange": [MockFunction] {
                          "calls": Array [
                            Array [
                              Array [
                                Object {
                                  "selected": true,
                                  "tag": "one",
                                  "text": "one",
                                },
                                Object {
                                  "selected": true,
                                  "tag": "two",
                                  "text": "two",
                                },
                              ],
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                          ],
                        },
                        "tags": Array [
                          Object {
                            "selected": true,
                            "tag": "one",
                            "text": "one",
                          },
                          Object {
                            "selected": true,
                            "tag": "two",
                            "text": "two",
                          },
                        ],
                      }
                    }
                    wrappingComponentProps={null}
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "onSelectionChange": [MockFunction] {
                  "calls": Array [
                    Array [
                      Array [
                        Object {
                          "selected": true,
                          "tag": "one",
                          "text": "one",
                        },
                        Object {
                          "selected": true,
                          "tag": "two",
                          "text": "two",
                        },
                      ],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "isThrow": false,
                      "value": undefined,
                    },
                  ],
                },
                "tags": Array [
                  Object {
                    "selected": true,
                    "tag": "one",
                    "text": "one",
                  },
                  Object {
                    "selected": true,
                    "tag": "two",
                    "text": "two",
                  },
                ],
              },
              "wrappingComponentProps": null,
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 78,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 78,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1073741823,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                      class="container high-contrast-coloring margin-bottom radius "
                    >
                      <div
                        class="flex flex--column"
                      >
                        <h6>
                          Tags
                        </h6>
                      </div>
                      <div
                        class="flex"
                      >
                        <div>
                          <button
                            class="btn btn--inverted margin-right"
                            data-testid="allBtn"
                            type="button"
                          >
                            All
                          </button>
                        </div>
                        <div>
                          <button
                            class="btn radius-top-left tag-one-inverted-coloring"
                            data-testid="tag-btn-one"
                            type="button"
                          >
                            one
                          </button>
                          <button
                            class="btn radius-bottom-right tag-two-inverted-coloring"
                            data-testid="tag-btn-two"
                            type="button"
                          >
                            two
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 17,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "pingCache": null,
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "onSelectionChange": [MockFunction] {
                              "calls": Array [
                                Array [
                                  Array [
                                    Object {
                                      "selected": true,
                                      "tag": "one",
                                      "text": "one",
                                    },
                                    Object {
                                      "selected": true,
                                      "tag": "two",
                                      "text": "two",
                                    },
                                  ],
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "isThrow": false,
                                  "value": undefined,
                                },
                              ],
                            },
                            "tags": Array [
                              Object {
                                "selected": true,
                                "tag": "one",
                                "text": "one",
                              },
                              Object {
                                "selected": true,
                                "tag": "two",
                                "text": "two",
                              },
                            ],
                          }
                        }
                        wrappingComponentProps={null}
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "onSelectionChange": [MockFunction] {
                              "calls": Array [
                                Array [
                                  Array [
                                    Object {
                                      "selected": true,
                                      "tag": "one",
                                      "text": "one",
                                    },
                                    Object {
                                      "selected": true,
                                      "tag": "two",
                                      "text": "two",
                                    },
                                  ],
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "isThrow": false,
                                  "value": undefined,
                                },
                              ],
                            },
                            "tags": Array [
                              Object {
                                "selected": true,
                                "tag": "one",
                                "text": "one",
                              },
                              Object {
                                "selected": true,
                                "tag": "two",
                                "text": "two",
                              },
                            ],
                          }
                        }
                        wrappingComponentProps={null}
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "onSelectionChange": [MockFunction] {
                        "calls": Array [
                          Array [
                            Array [
                              Object {
                                "selected": true,
                                "tag": "one",
                                "text": "one",
                              },
                              Object {
                                "selected": true,
                                "tag": "two",
                                "text": "two",
                              },
                            ],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": undefined,
                          },
                        ],
                      },
                      "tags": Array [
                        Object {
                          "selected": true,
                          "tag": "one",
                          "text": "one",
                        },
                        Object {
                          "selected": true,
                          "tag": "two",
                          "text": "two",
                        },
                      ],
                    }
                  }
                  wrappingComponentProps={null}
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="container high-contrast-coloring margin-bottom radius "
                  >
                    <div
                      class="flex flex--column"
                    >
                      <h6>
                        Tags
                      </h6>
                    </div>
                    <div
                      class="flex"
                    >
                      <div>
                        <button
                          class="btn btn--inverted margin-right"
                          data-testid="allBtn"
                          type="button"
                        >
                          All
                        </button>
                      </div>
                      <div>
                        <button
                          class="btn radius-top-left tag-one-inverted-coloring"
                          data-testid="tag-btn-one"
                          type="button"
                        >
                          one
                        </button>
                        <button
                          class="btn radius-bottom-right tag-two-inverted-coloring"
                          data-testid="tag-btn-two"
                          type="button"
                        >
                          two
                        </button>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 17,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "onSelectionChange": [MockFunction] {
                          "calls": Array [
                            Array [
                              Array [
                                Object {
                                  "selected": true,
                                  "tag": "one",
                                  "text": "one",
                                },
                                Object {
                                  "selected": true,
                                  "tag": "two",
                                  "text": "two",
                                },
                              ],
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                          ],
                        },
                        "tags": Array [
                          Object {
                            "selected": true,
                            "tag": "one",
                            "text": "one",
                          },
                          Object {
                            "selected": true,
                            "tag": "two",
                            "text": "two",
                          },
                        ],
                      }
                    }
                    wrappingComponentProps={null}
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "onSelectionChange": [MockFunction] {
                    "calls": Array [
                      Array [
                        Array [
                          Object {
                            "selected": true,
                            "tag": "one",
                            "text": "one",
                          },
                          Object {
                            "selected": true,
                            "tag": "two",
                            "text": "two",
                          },
                        ],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "isThrow": false,
                        "value": undefined,
                      },
                    ],
                  },
                  "tags": Array [
                    Object {
                      "selected": true,
                      "tag": "one",
                      "text": "one",
                    },
                    Object {
                      "selected": true,
                      "tag": "two",
                      "text": "two",
                    },
                  ],
                },
                "wrappingComponentProps": null,
              },
              "refs": Object {},
              "rootFinderInstance": null,
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "onSelectionChange": [MockFunction] {
                    "calls": Array [
                      Array [
                        Array [
                          Object {
                            "selected": true,
                            "tag": "one",
                            "text": "one",
                          },
                          Object {
                            "selected": true,
                            "tag": "two",
                            "text": "two",
                          },
                        ],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "isThrow": false,
                        "value": undefined,
                      },
                    ],
                  },
                  "tags": Array [
                    Object {
                      "selected": true,
                      "tag": "one",
                      "text": "one",
                    },
                    Object {
                      "selected": true,
                      "tag": "two",
                      "text": "two",
                    },
                  ],
                },
                "wrappingComponentProps": null,
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": [Circular],
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_reactInternalInstance": Object {},
        "areAllSelected": [Function],
        "context": Object {},
        "props": Object {
          "onSelectionChange": [MockFunction] {
            "calls": Array [
              Array [
                Array [
                  Object {
                    "selected": true,
                    "tag": "one",
                    "text": "one",
                  },
                  Object {
                    "selected": true,
                    "tag": "two",
                    "text": "two",
                  },
                ],
              ],
            ],
            "results": Array [
              Object {
                "isThrow": false,
                "value": undefined,
              },
            ],
          },
          "tags": Array [
            Object {
              "selected": true,
              "tag": "one",
              "text": "one",
            },
            Object {
              "selected": true,
              "tag": "two",
              "text": "two",
            },
          ],
        },
        "refs": Object {},
        "state": null,
        "toggleAll": [Function],
        "toggleOne": [Function],
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
      },
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "onSelectionChange": [MockFunction] {
          "calls": Array [
            Array [
              Array [
                Object {
                  "selected": true,
                  "tag": "one",
                  "text": "one",
                },
                Object {
                  "selected": true,
                  "tag": "two",
                  "text": "two",
                },
              ],
            ],
          ],
          "results": Array [
            Object {
              "isThrow": false,
              "value": undefined,
            },
          ],
        },
        "tags": Array [
          Object {
            "selected": true,
            "tag": "one",
            "text": "one",
          },
          Object {
            "selected": true,
            "tag": "two",
            "text": "two",
          },
        ],
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <div
            className="flex"
          >
            <div>
              <Button
                className="btn btn--inverted margin-right"
                data-testid="allBtn"
                onClick={[Function]}
                type="button"
              >
                All
              </Button>
            </div>
            <div>
              <Button
                className="btn radius-top-left tag-one-inverted-coloring"
                data-testid="tag-btn-one"
                onClick={[Function]}
                type="button"
              >
                one
              </Button>
              <Button
                className="btn radius-bottom-right tag-two-inverted-coloring"
                data-testid="tag-btn-two"
                onClick={[Function]}
                type="button"
              >
                two
              </Button>
            </div>
          </div>,
          "title": "Tags",
        },
        "ref": null,
        "rendered": Object {
          "instance": <div
            class="container high-contrast-coloring margin-bottom radius "
          >
            <div
              class="flex flex--column"
            >
              <h6>
                Tags
              </h6>
            </div>
            <div
              class="flex"
            >
              <div>
                <button
                  class="btn btn--inverted margin-right"
                  data-testid="allBtn"
                  type="button"
                >
                  All
                </button>
              </div>
              <div>
                <button
                  class="btn radius-top-left tag-one-inverted-coloring"
                  data-testid="tag-btn-one"
                  type="button"
                >
                  one
                </button>
                <button
                  class="btn radius-bottom-right tag-two-inverted-coloring"
                  data-testid="tag-btn-two"
                  type="button"
                >
                  two
                </button>
              </div>
            </div>
          </div>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="flex flex--column"
              >
                <h6>
                  Tags
                </h6>
              </div>,
              <div
                className="flex"
              >
                <div>
                  <Button
                    className="btn btn--inverted margin-right"
                    data-testid="allBtn"
                    onClick={[Function]}
                    type="button"
                  >
                    All
                  </Button>
                </div>
                <div>
                  <Button
                    className="btn radius-top-left tag-one-inverted-coloring"
                    data-testid="tag-btn-one"
                    onClick={[Function]}
                    type="button"
                  >
                    one
                  </Button>
                  <Button
                    className="btn radius-bottom-right tag-two-inverted-coloring"
                    data-testid="tag-btn-two"
                    onClick={[Function]}
                    type="button"
                  >
                    two
                  </Button>
                </div>
              </div>,
            ],
            "className": "container high-contrast-coloring margin-bottom radius ",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <div
                class="flex flex--column"
              >
                <h6>
                  Tags
                </h6>
              </div>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h6>
                    Tags
                  </h6>,
                  undefined,
                ],
                "className": "flex flex--column",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": <h6>
                    Tags
                  </h6>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Tags",
                  },
                  "ref": null,
                  "rendered": Array [
                    "Tags",
                  ],
                  "type": "h6",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": <div
                class="flex"
              >
                <div>
                  <button
                    class="btn btn--inverted margin-right"
                    data-testid="allBtn"
                    type="button"
                  >
                    All
                  </button>
                </div>
                <div>
                  <button
                    class="btn radius-top-left tag-one-inverted-coloring"
                    data-testid="tag-btn-one"
                    type="button"
                  >
                    one
                  </button>
                  <button
                    class="btn radius-bottom-right tag-two-inverted-coloring"
                    data-testid="tag-btn-two"
                    type="button"
                  >
                    two
                  </button>
                </div>
              </div>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div>
                    <Button
                      className="btn btn--inverted margin-right"
                      data-testid="allBtn"
                      onClick={[Function]}
                      type="button"
                    >
                      All
                    </Button>
                  </div>,
                  <div>
                    <Button
                      className="btn radius-top-left tag-one-inverted-coloring"
                      data-testid="tag-btn-one"
                      onClick={[Function]}
                      type="button"
                    >
                      one
                    </Button>
                    <Button
                      className="btn radius-bottom-right tag-two-inverted-coloring"
                      data-testid="tag-btn-two"
                      onClick={[Function]}
                      type="button"
                    >
                      two
                    </Button>
                  </div>,
                ],
                "className": "flex",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": <div>
                    <button
                      class="btn btn--inverted margin-right"
                      data-testid="allBtn"
                      type="button"
                    >
                      All
                    </button>
                  </div>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Button
                      className="btn btn--inverted margin-right"
                      data-testid="allBtn"
                      onClick={[Function]}
                      type="button"
                    >
                      All
                    </Button>,
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "children": "All",
                        "className": "btn btn--inverted margin-right",
                        "data-testid": "allBtn",
                        "onClick": [Function],
                        "type": "button",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": <button
                          class="btn btn--inverted margin-right"
                          data-testid="allBtn"
                          type="button"
                        >
                          All
                        </button>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "All",
                          "className": "btn btn--inverted margin-right",
                          "data-testid": "allBtn",
                          "onClick": [Function],
                          "type": "button",
                        },
                        "ref": null,
                        "rendered": Array [
                          "All",
                        ],
                        "type": "button",
                      },
                      "type": [Function],
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": <div>
                    <button
                      class="btn radius-top-left tag-one-inverted-coloring"
                      data-testid="tag-btn-one"
                      type="button"
                    >
                      one
                    </button>
                    <button
                      class="btn radius-bottom-right tag-two-inverted-coloring"
                      data-testid="tag-btn-two"
                      type="button"
                    >
                      two
                    </button>
                  </div>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <Button
                        className="btn radius-top-left tag-one-inverted-coloring"
                        data-testid="tag-btn-one"
                        onClick={[Function]}
                        type="button"
                      >
                        one
                      </Button>,
                      <Button
                        className="btn radius-bottom-right tag-two-inverted-coloring"
                        data-testid="tag-btn-two"
                        onClick={[Function]}
                        type="button"
                      >
                        two
                      </Button>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": "tag-filter-one-0",
                      "nodeType": "function",
                      "props": Object {
                        "children": "one",
                        "className": "btn radius-top-left tag-one-inverted-coloring",
                        "data-testid": "tag-btn-one",
                        "onClick": [Function],
                        "type": "button",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": <button
                          class="btn radius-top-left tag-one-inverted-coloring"
                          data-testid="tag-btn-one"
                          type="button"
                        >
                          one
                        </button>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "one",
                          "className": "btn radius-top-left tag-one-inverted-coloring",
                          "data-testid": "tag-btn-one",
                          "onClick": [Function],
                          "type": "button",
                        },
                        "ref": null,
                        "rendered": Array [
                          "one",
                        ],
                        "type": "button",
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": "tag-filter-two-1",
                      "nodeType": "function",
                      "props": Object {
                        "children": "two",
                        "className": "btn radius-bottom-right tag-two-inverted-coloring",
                        "data-testid": "tag-btn-two",
                        "onClick": [Function],
                        "type": "button",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": <button
                          class="btn radius-bottom-right tag-two-inverted-coloring"
                          data-testid="tag-btn-two"
                          type="button"
                        >
                          two
                        </button>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "two",
                          "className": "btn radius-bottom-right tag-two-inverted-coloring",
                          "data-testid": "tag-btn-two",
                          "onClick": [Function],
                          "type": "button",
                        },
                        "ref": null,
                        "rendered": Array [
                          "two",
                        ],
                        "type": "button",
                      },
                      "type": [Function],
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
